; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	C:\GamePackages\Client\Tools\Patcher2017\EterPack\md5.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_PADDING DB	080H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_DATA	ENDS
PUBLIC	_MD5Init
PUBLIC	_MD5Update
PUBLIC	_MD5Final
PUBLIC	_MD5Transform
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterpack\md5.c
;	COMDAT _MD5Transform
_TEXT	SEGMENT
_d$8$ = -76						; size = 4
_d$5$ = -76						; size = 4
_a$11$ = -76						; size = 4
_b$8$ = -72						; size = 4
_b$4$ = -72						; size = 4
_c$4$ = -68						; size = 4
_d$1$ = -64						; size = 4
_a$4$ = -64						; size = 4
tv1657 = -60						; size = 4
tv1659 = -56						; size = 4
tv1655 = -52						; size = 4
tv1660 = -48						; size = 4
tv1646 = -44						; size = 4
tv1649 = -40						; size = 4
tv1647 = -36						; size = 4
tv1654 = -32						; size = 4
tv1645 = -28						; size = 4
tv1652 = -24						; size = 4
tv1650 = -20						; size = 4
tv1648 = -16						; size = 4
tv1653 = -12						; size = 4
tv1644 = -8						; size = 4
tv1651 = -4						; size = 4
_buf$ = 8						; size = 4
_b$16$ = 12						; size = 4
tv1643 = 12						; size = 4
_in$ = 12						; size = 4
_MD5Transform PROC					; COMDAT

; 359  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH

; 360  : 
; 361  :   UINT4 a = buf[0], b = buf[1], c = buf[2], d = buf[3];

  00006	8b 55 08	 mov	 edx, DWORD PTR _buf$[ebp]
  00009	53		 push	 ebx

; 362  : 
; 363  :  
; 364  : 
; 365  :   /* Round 1 */
; 366  : 
; 367  : #define S11 7
; 368  : 
; 369  : #define S12 12
; 370  : 
; 371  : #define S13 17
; 372  : 
; 373  : #define S14 22
; 374  : 
; 375  :   FF ( a, b, c, d, in[ 0], S11, 3614090360); /* 1 */

  0000a	8b 5d 0c	 mov	 ebx, DWORD PTR _in$[ebp]
  0000d	56		 push	 esi
  0000e	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00011	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00014	f7 d1		 not	 ecx
  00016	8b 32		 mov	 esi, DWORD PTR [edx]
  00018	57		 push	 edi
  00019	8b 7a 0c	 mov	 edi, DWORD PTR [edx+12]
  0001c	23 cf		 and	 ecx, edi
  0001e	8b 13		 mov	 edx, DWORD PTR [ebx]
  00020	89 7d c0	 mov	 DWORD PTR _d$1$[ebp], edi
  00023	8b 7d 08	 mov	 edi, DWORD PTR _buf$[ebp]
  00026	89 55 d0	 mov	 DWORD PTR tv1660[ebp], edx
  00029	23 47 04	 and	 eax, DWORD PTR [edi+4]
  0002c	0b c8		 or	 ecx, eax
  0002e	03 ca		 add	 ecx, edx
  00030	8d 96 78 a4 6a
	d7		 lea	 edx, DWORD PTR [esi-680876936]
  00036	03 d1		 add	 edx, ecx

; 376  : 
; 377  :   FF ( d, a, b, c, in[ 1], S12, 3905402710); /* 2 */

  00038	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  0003b	8b cf		 mov	 ecx, edi
  0003d	c1 c2 07	 rol	 edx, 7
  00040	89 75 c8	 mov	 DWORD PTR tv1659[ebp], esi
  00043	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00046	03 d0		 add	 edx, eax
  00048	23 c2		 and	 eax, edx
  0004a	8b ca		 mov	 ecx, edx
  0004c	f7 d1		 not	 ecx
  0004e	23 4f 08	 and	 ecx, DWORD PTR [edi+8]
  00051	0b c8		 or	 ecx, eax

; 378  : 
; 379  :   FF ( c, d, a, b, in[ 2], S13,  606105819); /* 3 */

  00053	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]
  00056	8b 45 08	 mov	 eax, DWORD PTR _buf$[ebp]
  00059	03 ce		 add	 ecx, esi
  0005b	8b 75 c0	 mov	 esi, DWORD PTR _d$1$[ebp]
  0005e	81 c6 56 b7 c7
	e8		 add	 esi, -389564586		; e8c7b756H

; 380  : 
; 381  :   FF ( b, c, d, a, in[ 3], S14, 3250441966); /* 4 */

  00064	8b 5b 0c	 mov	 ebx, DWORD PTR [ebx+12]
  00067	03 f1		 add	 esi, ecx
  00069	89 7d c4	 mov	 DWORD PTR tv1657[ebp], edi
  0006c	c1 c6 0c	 rol	 esi, 12			; 0000000cH
  0006f	03 f2		 add	 esi, edx
  00071	89 5d cc	 mov	 DWORD PTR tv1655[ebp], ebx
  00074	8b ce		 mov	 ecx, esi
  00076	f7 d1		 not	 ecx
  00078	23 48 04	 and	 ecx, DWORD PTR [eax+4]
  0007b	8b c6		 mov	 eax, esi
  0007d	23 c2		 and	 eax, edx
  0007f	0b c8		 or	 ecx, eax
  00081	8b c6		 mov	 eax, esi
  00083	03 cf		 add	 ecx, edi
  00085	8b 7d 08	 mov	 edi, DWORD PTR _buf$[ebp]
  00088	8b 7f 08	 mov	 edi, DWORD PTR [edi+8]
  0008b	81 c7 db 70 20
	24		 add	 edi, 606105819		; 242070dbH
  00091	03 f9		 add	 edi, ecx
  00093	c1 cf 0f	 ror	 edi, 15			; 0000000fH
  00096	03 fe		 add	 edi, esi
  00098	23 c7		 and	 eax, edi
  0009a	8b cf		 mov	 ecx, edi
  0009c	f7 d1		 not	 ecx
  0009e	23 ca		 and	 ecx, edx
  000a0	0b c8		 or	 ecx, eax

; 382  : 
; 383  :   FF ( a, b, c, d, in[ 4], S11, 4118548399); /* 5 */

  000a2	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  000a5	03 cb		 add	 ecx, ebx
  000a7	8b 5d 08	 mov	 ebx, DWORD PTR _buf$[ebp]
  000aa	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  000ad	8b 5b 04	 mov	 ebx, DWORD PTR [ebx+4]
  000b0	81 c3 ee ce bd
	c1		 add	 ebx, -1044525330	; c1bdceeeH
  000b6	89 45 e0	 mov	 DWORD PTR tv1654[ebp], eax
  000b9	03 d9		 add	 ebx, ecx
  000bb	8b c7		 mov	 eax, edi
  000bd	c1 cb 0a	 ror	 ebx, 10			; 0000000aH
  000c0	03 df		 add	 ebx, edi
  000c2	8b cb		 mov	 ecx, ebx
  000c4	23 c3		 and	 eax, ebx
  000c6	f7 d1		 not	 ecx
  000c8	23 ce		 and	 ecx, esi
  000ca	0b c8		 or	 ecx, eax
  000cc	81 c1 af 0f 7c
	f5		 add	 ecx, -176418897		; f57c0fafH
  000d2	03 4d e0	 add	 ecx, DWORD PTR tv1654[ebp]
  000d5	03 d1		 add	 edx, ecx
  000d7	c1 c2 07	 rol	 edx, 7

; 384  : 
; 385  :   FF ( d, a, b, c, in[ 5], S12, 1200080426); /* 6 */

  000da	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  000dd	03 d3		 add	 edx, ebx
  000df	8b ca		 mov	 ecx, edx
  000e1	f7 d1		 not	 ecx
  000e3	23 cf		 and	 ecx, edi
  000e5	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  000e8	89 45 f4	 mov	 DWORD PTR tv1653[ebp], eax
  000eb	8b c3		 mov	 eax, ebx
  000ed	23 c2		 and	 eax, edx
  000ef	0b c8		 or	 ecx, eax

; 386  : 
; 387  :   FF ( c, d, a, b, in[ 6], S13, 2821735955); /* 7 */

  000f1	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  000f4	81 c1 2a c6 87
	47		 add	 ecx, 1200080426		; 4787c62aH
  000fa	03 4d f4	 add	 ecx, DWORD PTR tv1653[ebp]
  000fd	03 f1		 add	 esi, ecx
  000ff	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  00102	89 45 e8	 mov	 DWORD PTR tv1652[ebp], eax
  00105	c1 c6 0c	 rol	 esi, 12			; 0000000cH
  00108	03 f2		 add	 esi, edx
  0010a	8b ce		 mov	 ecx, esi
  0010c	8b c6		 mov	 eax, esi
  0010e	f7 d1		 not	 ecx
  00110	23 c2		 and	 eax, edx
  00112	23 cb		 and	 ecx, ebx
  00114	0b c8		 or	 ecx, eax

; 388  : 
; 389  :   FF ( b, c, d, a, in[ 7], S14, 4249261313); /* 8 */

  00116	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  00119	81 c1 13 46 30
	a8		 add	 ecx, -1473231341	; a8304613H
  0011f	03 4d e8	 add	 ecx, DWORD PTR tv1652[ebp]
  00122	03 f9		 add	 edi, ecx
  00124	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  00127	89 45 fc	 mov	 DWORD PTR tv1651[ebp], eax
  0012a	8b c6		 mov	 eax, esi
  0012c	c1 cf 0f	 ror	 edi, 15			; 0000000fH
  0012f	03 fe		 add	 edi, esi
  00131	23 c7		 and	 eax, edi
  00133	8b cf		 mov	 ecx, edi
  00135	f7 d1		 not	 ecx
  00137	23 ca		 and	 ecx, edx
  00139	0b c8		 or	 ecx, eax

; 390  : 
; 391  :   FF ( a, b, c, d, in[ 8], S11, 1770035416); /* 9 */

  0013b	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  0013e	81 c1 01 95 46
	fd		 add	 ecx, -45705983		; fd469501H
  00144	03 4d fc	 add	 ecx, DWORD PTR tv1651[ebp]
  00147	03 d9		 add	 ebx, ecx
  00149	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  0014c	89 45 ec	 mov	 DWORD PTR tv1650[ebp], eax
  0014f	8b c7		 mov	 eax, edi
  00151	c1 cb 0a	 ror	 ebx, 10			; 0000000aH
  00154	03 df		 add	 ebx, edi
  00156	23 c3		 and	 eax, ebx
  00158	8b cb		 mov	 ecx, ebx
  0015a	f7 d1		 not	 ecx
  0015c	23 ce		 and	 ecx, esi
  0015e	0b c8		 or	 ecx, eax

; 392  : 
; 393  :   FF ( d, a, b, c, in[ 9], S12, 2336552879); /* 10 */

  00160	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  00163	81 c1 d8 98 80
	69		 add	 ecx, 1770035416		; 698098d8H
  00169	03 4d ec	 add	 ecx, DWORD PTR tv1650[ebp]
  0016c	03 d1		 add	 edx, ecx
  0016e	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  00171	c1 c2 07	 rol	 edx, 7
  00174	03 d3		 add	 edx, ebx
  00176	89 45 d8	 mov	 DWORD PTR tv1649[ebp], eax
  00179	8b ca		 mov	 ecx, edx
  0017b	8b c3		 mov	 eax, ebx
  0017d	f7 d1		 not	 ecx
  0017f	23 c2		 and	 eax, edx
  00181	23 cf		 and	 ecx, edi
  00183	0b c8		 or	 ecx, eax

; 394  : 
; 395  :   FF ( c, d, a, b, in[10], S13, 4294925233); /* 11 */

  00185	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  00188	81 c1 af f7 44
	8b		 add	 ecx, -1958414417	; 8b44f7afH
  0018e	03 4d d8	 add	 ecx, DWORD PTR tv1649[ebp]
  00191	03 f1		 add	 esi, ecx
  00193	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  00196	c1 c6 0c	 rol	 esi, 12			; 0000000cH
  00199	03 f2		 add	 esi, edx
  0019b	89 45 f0	 mov	 DWORD PTR tv1648[ebp], eax
  0019e	8b ce		 mov	 ecx, esi
  001a0	8b c6		 mov	 eax, esi
  001a2	f7 d1		 not	 ecx
  001a4	23 c2		 and	 eax, edx
  001a6	23 cb		 and	 ecx, ebx
  001a8	0b c8		 or	 ecx, eax
  001aa	81 c1 b1 5b ff
	ff		 add	 ecx, -42063		; ffff5bb1H
  001b0	03 4d f0	 add	 ecx, DWORD PTR tv1648[ebp]
  001b3	03 f9		 add	 edi, ecx

; 396  : 
; 397  :   FF ( b, c, d, a, in[11], S14, 2304563134); /* 12 */

  001b5	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  001b8	c1 cf 0f	 ror	 edi, 15			; 0000000fH
  001bb	03 fe		 add	 edi, esi
  001bd	8b cf		 mov	 ecx, edi
  001bf	89 7d bc	 mov	 DWORD PTR _c$4$[ebp], edi
  001c2	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  001c5	f7 d1		 not	 ecx
  001c7	23 ca		 and	 ecx, edx
  001c9	89 45 dc	 mov	 DWORD PTR tv1647[ebp], eax
  001cc	8b c6		 mov	 eax, esi
  001ce	23 c7		 and	 eax, edi
  001d0	0b c8		 or	 ecx, eax

; 398  : 
; 399  :   FF ( a, b, c, d, in[12], S11, 1804603682); /* 13 */

  001d2	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  001d5	81 c1 be d7 5c
	89		 add	 ecx, -1990404162	; 895cd7beH
  001db	03 4d dc	 add	 ecx, DWORD PTR tv1647[ebp]
  001de	03 d9		 add	 ebx, ecx
  001e0	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  001e3	89 45 d4	 mov	 DWORD PTR tv1646[ebp], eax
  001e6	8b c7		 mov	 eax, edi
  001e8	c1 cb 0a	 ror	 ebx, 10			; 0000000aH
  001eb	03 df		 add	 ebx, edi
  001ed	23 c3		 and	 eax, ebx
  001ef	89 5d b8	 mov	 DWORD PTR _b$4$[ebp], ebx
  001f2	8b cb		 mov	 ecx, ebx
  001f4	f7 d1		 not	 ecx
  001f6	23 ce		 and	 ecx, esi
  001f8	0b c8		 or	 ecx, eax

; 400  : 
; 401  :   FF ( d, a, b, c, in[13], S12, 4254626195); /* 14 */

  001fa	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  001fd	81 c1 22 11 90
	6b		 add	 ecx, 1804603682		; 6b901122H
  00203	03 4d d4	 add	 ecx, DWORD PTR tv1646[ebp]
  00206	03 d1		 add	 edx, ecx
  00208	8b 40 34	 mov	 eax, DWORD PTR [eax+52]
  0020b	89 45 e4	 mov	 DWORD PTR tv1645[ebp], eax
  0020e	8b c3		 mov	 eax, ebx
  00210	c1 c2 07	 rol	 edx, 7
  00213	03 d3		 add	 edx, ebx
  00215	23 c2		 and	 eax, edx
  00217	89 55 c0	 mov	 DWORD PTR _a$4$[ebp], edx
  0021a	8b ca		 mov	 ecx, edx
  0021c	f7 d1		 not	 ecx
  0021e	23 cf		 and	 ecx, edi
  00220	8d be 93 71 98
	fd		 lea	 edi, DWORD PTR [esi-40341101]
  00226	0b c8		 or	 ecx, eax

; 402  : 
; 403  :   FF ( c, d, a, b, in[14], S13, 2792965006); /* 15 */

  00228	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  0022b	03 4d e4	 add	 ecx, DWORD PTR tv1645[ebp]
  0022e	03 f9		 add	 edi, ecx
  00230	c1 c7 0c	 rol	 edi, 12			; 0000000cH
  00233	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00236	03 fa		 add	 edi, edx
  00238	8b f7		 mov	 esi, edi
  0023a	89 45 f8	 mov	 DWORD PTR tv1644[ebp], eax
  0023d	8b c7		 mov	 eax, edi
  0023f	89 7d b4	 mov	 DWORD PTR _d$5$[ebp], edi
  00242	23 c2		 and	 eax, edx
  00244	f7 d6		 not	 esi
  00246	8b ce		 mov	 ecx, esi
  00248	23 cb		 and	 ecx, ebx
  0024a	8b 5d bc	 mov	 ebx, DWORD PTR _c$4$[ebp]
  0024d	0b c8		 or	 ecx, eax
  0024f	81 c3 8e 43 79
	a6		 add	 ebx, -1502002290	; a679438eH
  00255	03 4d f8	 add	 ecx, DWORD PTR tv1644[ebp]

; 404  : 
; 405  :   FF ( b, c, d, a, in[15], S14, 1236535329); /* 16 */

  00258	8b 45 0c	 mov	 eax, DWORD PTR _in$[ebp]
  0025b	03 d9		 add	 ebx, ecx
  0025d	c1 cb 0f	 ror	 ebx, 15			; 0000000fH
  00260	03 df		 add	 ebx, edi
  00262	8b d3		 mov	 edx, ebx
  00264	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]
  00267	f7 d2		 not	 edx
  00269	89 45 0c	 mov	 DWORD PTR tv1643[ebp], eax
  0026c	8b ca		 mov	 ecx, edx
  0026e	23 4d c0	 and	 ecx, DWORD PTR _a$4$[ebp]
  00271	8b c7		 mov	 eax, edi
  00273	8b 7d b8	 mov	 edi, DWORD PTR _b$4$[ebp]
  00276	23 c3		 and	 eax, ebx
  00278	0b c8		 or	 ecx, eax
  0027a	81 c7 21 08 b4
	49		 add	 edi, 1236535329		; 49b40821H
  00280	03 4d 0c	 add	 ecx, DWORD PTR tv1643[ebp]
  00283	03 f9		 add	 edi, ecx
  00285	c1 cf 0a	 ror	 edi, 10			; 0000000aH

; 406  : 
; 407  :  
; 408  : 
; 409  :   /* Round 2 */
; 410  : 
; 411  : #define S21 5
; 412  : 
; 413  : #define S22 9
; 414  : 
; 415  : #define S23 14
; 416  : 
; 417  : #define S24 20
; 418  : 
; 419  :   GG ( a, b, c, d, in[ 1], S21, 4129170786); /* 17 */

  00288	8b 4d b4	 mov	 ecx, DWORD PTR _d$5$[ebp]
  0028b	03 fb		 add	 edi, ebx
  0028d	8b c1		 mov	 eax, ecx
  0028f	23 f3		 and	 esi, ebx
  00291	23 c7		 and	 eax, edi

; 420  : 
; 421  :   GG ( d, a, b, c, in[ 6], S22, 3225465664); /* 18 */

  00293	81 c1 40 b3 40
	c0		 add	 ecx, -1069501632	; c040b340H
  00299	0b f0		 or	 esi, eax
  0029b	23 d7		 and	 edx, edi
  0029d	03 75 c8	 add	 esi, DWORD PTR tv1659[ebp]
  002a0	8b 45 c0	 mov	 eax, DWORD PTR _a$4$[ebp]
  002a3	05 62 25 1e f6	 add	 eax, -165796510		; f61e2562H
  002a8	03 f0		 add	 esi, eax
  002aa	8b c3		 mov	 eax, ebx
  002ac	c1 c6 05	 rol	 esi, 5
  002af	03 f7		 add	 esi, edi
  002b1	23 c6		 and	 eax, esi
  002b3	0b d0		 or	 edx, eax
  002b5	03 55 e8	 add	 edx, DWORD PTR tv1652[ebp]
  002b8	03 d1		 add	 edx, ecx

; 422  : 
; 423  :   GG ( c, d, a, b, in[11], S23,  643717713); /* 19 */

  002ba	8b cf		 mov	 ecx, edi
  002bc	f7 d1		 not	 ecx
  002be	c1 c2 09	 rol	 edx, 9
  002c1	23 ce		 and	 ecx, esi
  002c3	03 d6		 add	 edx, esi
  002c5	8b c2		 mov	 eax, edx
  002c7	23 c7		 and	 eax, edi
  002c9	0b c8		 or	 ecx, eax
  002cb	81 c1 51 5a 5e
	26		 add	 ecx, 643717713		; 265e5a51H
  002d1	03 4d dc	 add	 ecx, DWORD PTR tv1647[ebp]
  002d4	03 d9		 add	 ebx, ecx

; 424  : 
; 425  :   GG ( b, c, d, a, in[ 0], S24, 3921069994); /* 20 */

  002d6	8b ce		 mov	 ecx, esi
  002d8	f7 d1		 not	 ecx
  002da	c1 c3 0e	 rol	 ebx, 14			; 0000000eH
  002dd	23 ca		 and	 ecx, edx
  002df	03 da		 add	 ebx, edx
  002e1	8b c3		 mov	 eax, ebx
  002e3	23 c6		 and	 eax, esi
  002e5	0b c8		 or	 ecx, eax

; 426  : 
; 427  :   GG ( a, b, c, d, in[ 5], S21, 3593408605); /* 21 */

  002e7	8b c2		 mov	 eax, edx
  002e9	81 c1 aa c7 b6
	e9		 add	 ecx, -373897302		; e9b6c7aaH
  002ef	03 4d d0	 add	 ecx, DWORD PTR tv1660[ebp]
  002f2	03 f9		 add	 edi, ecx
  002f4	8b ca		 mov	 ecx, edx
  002f6	f7 d1		 not	 ecx
  002f8	c1 cf 0c	 ror	 edi, 12			; 0000000cH
  002fb	23 cb		 and	 ecx, ebx
  002fd	03 fb		 add	 edi, ebx
  002ff	23 c7		 and	 eax, edi
  00301	0b c8		 or	 ecx, eax

; 428  : 
; 429  :   GG ( d, a, b, c, in[10], S22,   38016083); /* 22 */

  00303	8b c3		 mov	 eax, ebx
  00305	81 c1 5d 10 2f
	d6		 add	 ecx, -701558691		; d62f105dH
  0030b	03 4d f4	 add	 ecx, DWORD PTR tv1653[ebp]
  0030e	03 f1		 add	 esi, ecx
  00310	8b cb		 mov	 ecx, ebx
  00312	f7 d1		 not	 ecx
  00314	c1 c6 05	 rol	 esi, 5
  00317	23 cf		 and	 ecx, edi
  00319	03 f7		 add	 esi, edi
  0031b	23 c6		 and	 eax, esi
  0031d	0b c8		 or	 ecx, eax
  0031f	81 c1 53 14 44
	02		 add	 ecx, 38016083		; 02441453H
  00325	03 4d f0	 add	 ecx, DWORD PTR tv1648[ebp]
  00328	03 d1		 add	 edx, ecx

; 430  : 
; 431  :   GG ( c, d, a, b, in[15], S23, 3634488961); /* 23 */

  0032a	8b cf		 mov	 ecx, edi
  0032c	f7 d1		 not	 ecx
  0032e	c1 c2 09	 rol	 edx, 9
  00331	03 d6		 add	 edx, esi
  00333	23 ce		 and	 ecx, esi
  00335	8b c2		 mov	 eax, edx
  00337	23 c7		 and	 eax, edi
  00339	0b c8		 or	 ecx, eax
  0033b	81 c1 81 e6 a1
	d8		 add	 ecx, -660478335		; d8a1e681H
  00341	03 4d 0c	 add	 ecx, DWORD PTR tv1643[ebp]
  00344	03 d9		 add	 ebx, ecx

; 432  : 
; 433  :   GG ( b, c, d, a, in[ 4], S24, 3889429448); /* 24 */

  00346	8b ce		 mov	 ecx, esi
  00348	c1 c3 0e	 rol	 ebx, 14			; 0000000eH
  0034b	f7 d1		 not	 ecx
  0034d	03 da		 add	 ebx, edx
  0034f	23 ca		 and	 ecx, edx
  00351	8b c3		 mov	 eax, ebx
  00353	23 c6		 and	 eax, esi
  00355	0b c8		 or	 ecx, eax

; 434  : 
; 435  :   GG ( a, b, c, d, in[ 9], S21,  568446438); /* 25 */

  00357	8b c2		 mov	 eax, edx
  00359	81 c1 c8 fb d3
	e7		 add	 ecx, -405537848		; e7d3fbc8H
  0035f	03 4d e0	 add	 ecx, DWORD PTR tv1654[ebp]
  00362	03 f9		 add	 edi, ecx
  00364	8b ca		 mov	 ecx, edx
  00366	f7 d1		 not	 ecx
  00368	c1 cf 0c	 ror	 edi, 12			; 0000000cH
  0036b	23 cb		 and	 ecx, ebx
  0036d	03 fb		 add	 edi, ebx
  0036f	23 c7		 and	 eax, edi
  00371	0b c8		 or	 ecx, eax

; 436  : 
; 437  :   GG ( d, a, b, c, in[14], S22, 3275163606); /* 26 */

  00373	8b c3		 mov	 eax, ebx
  00375	81 c1 e6 cd e1
	21		 add	 ecx, 568446438		; 21e1cde6H
  0037b	03 4d d8	 add	 ecx, DWORD PTR tv1649[ebp]
  0037e	03 f1		 add	 esi, ecx
  00380	8b cb		 mov	 ecx, ebx
  00382	f7 d1		 not	 ecx
  00384	c1 c6 05	 rol	 esi, 5
  00387	23 cf		 and	 ecx, edi
  00389	03 f7		 add	 esi, edi
  0038b	23 c6		 and	 eax, esi
  0038d	0b c8		 or	 ecx, eax
  0038f	81 c1 d6 07 37
	c3		 add	 ecx, -1019803690	; c33707d6H
  00395	03 4d f8	 add	 ecx, DWORD PTR tv1644[ebp]
  00398	03 d1		 add	 edx, ecx

; 438  : 
; 439  :   GG ( c, d, a, b, in[ 3], S23, 4107603335); /* 27 */

  0039a	8b cf		 mov	 ecx, edi
  0039c	f7 d1		 not	 ecx
  0039e	c1 c2 09	 rol	 edx, 9
  003a1	23 ce		 and	 ecx, esi
  003a3	03 d6		 add	 edx, esi
  003a5	8b c2		 mov	 eax, edx
  003a7	89 55 b4	 mov	 DWORD PTR _d$8$[ebp], edx
  003aa	23 c7		 and	 eax, edi
  003ac	0b c8		 or	 ecx, eax
  003ae	81 c1 87 0d d5
	f4		 add	 ecx, -187363961		; f4d50d87H
  003b4	03 4d cc	 add	 ecx, DWORD PTR tv1655[ebp]
  003b7	03 d9		 add	 ebx, ecx

; 440  : 
; 441  :   GG ( b, c, d, a, in[ 8], S24, 1163531501); /* 28 */

  003b9	8b ce		 mov	 ecx, esi
  003bb	f7 d1		 not	 ecx
  003bd	c1 c3 0e	 rol	 ebx, 14			; 0000000eH
  003c0	23 ca		 and	 ecx, edx
  003c2	03 da		 add	 ebx, edx
  003c4	8b c3		 mov	 eax, ebx
  003c6	23 c6		 and	 eax, esi
  003c8	0b c8		 or	 ecx, eax

; 442  : 
; 443  :   GG ( a, b, c, d, in[13], S21, 2850285829); /* 29 */

  003ca	8b c2		 mov	 eax, edx
  003cc	81 c1 ed 14 5a
	45		 add	 ecx, 1163531501		; 455a14edH
  003d2	03 4d ec	 add	 ecx, DWORD PTR tv1650[ebp]
  003d5	03 f9		 add	 edi, ecx
  003d7	8b ca		 mov	 ecx, edx
  003d9	f7 d1		 not	 ecx
  003db	c1 cf 0c	 ror	 edi, 12			; 0000000cH
  003de	23 cb		 and	 ecx, ebx
  003e0	8d 96 05 e9 e3
	a9		 lea	 edx, DWORD PTR [esi-1444681467]

; 444  : 
; 445  :   GG ( d, a, b, c, in[ 2], S22, 4243563512); /* 30 */

  003e6	8b 75 b4	 mov	 esi, DWORD PTR _d$8$[ebp]
  003e9	03 fb		 add	 edi, ebx
  003eb	23 c7		 and	 eax, edi
  003ed	89 7d b8	 mov	 DWORD PTR _b$8$[ebp], edi
  003f0	0b c8		 or	 ecx, eax
  003f2	81 c6 f8 a3 ef
	fc		 add	 esi, -51403784		; fcefa3f8H
  003f8	03 4d e4	 add	 ecx, DWORD PTR tv1645[ebp]
  003fb	8b c3		 mov	 eax, ebx
  003fd	03 d1		 add	 edx, ecx
  003ff	8b cb		 mov	 ecx, ebx
  00401	f7 d1		 not	 ecx
  00403	c1 c2 05	 rol	 edx, 5
  00406	03 d7		 add	 edx, edi
  00408	23 cf		 and	 ecx, edi
  0040a	23 c2		 and	 eax, edx
  0040c	0b c8		 or	 ecx, eax
  0040e	03 4d c4	 add	 ecx, DWORD PTR tv1657[ebp]
  00411	03 f1		 add	 esi, ecx

; 446  : 
; 447  :   GG ( c, d, a, b, in[ 7], S23, 1735328473); /* 31 */

  00413	8b cf		 mov	 ecx, edi
  00415	c1 c6 09	 rol	 esi, 9
  00418	f7 d1		 not	 ecx
  0041a	03 f2		 add	 esi, edx
  0041c	23 ca		 and	 ecx, edx
  0041e	8b c6		 mov	 eax, esi
  00420	23 c7		 and	 eax, edi
  00422	0b c8		 or	 ecx, eax
  00424	03 4d fc	 add	 ecx, DWORD PTR tv1651[ebp]
  00427	8d bb d9 02 6f
	67		 lea	 edi, DWORD PTR [ebx+1735328473]

; 448  : 
; 449  :   GG ( b, c, d, a, in[12], S24, 2368359562); /* 32 */

  0042d	8b 5d b8	 mov	 ebx, DWORD PTR _b$8$[ebp]
  00430	03 f9		 add	 edi, ecx
  00432	c1 c7 0e	 rol	 edi, 14			; 0000000eH
  00435	8b ca		 mov	 ecx, edx
  00437	03 fe		 add	 edi, esi
  00439	f7 d1		 not	 ecx
  0043b	23 ce		 and	 ecx, esi
  0043d	8b c7		 mov	 eax, edi
  0043f	23 c2		 and	 eax, edx
  00441	81 c3 8a 4c 2a
	8d		 add	 ebx, -1926607734	; 8d2a4c8aH
  00447	0b c8		 or	 ecx, eax

; 450  : 
; 451  :  
; 452  : 
; 453  :   /* Round 3 */
; 454  : 
; 455  : #define S31 4
; 456  : 
; 457  : #define S32 11
; 458  : 
; 459  : #define S33 16
; 460  : 
; 461  : #define S34 23
; 462  : 
; 463  :   HH ( a, b, c, d, in[ 5], S31, 4294588738); /* 33 */

  00449	8b c6		 mov	 eax, esi
  0044b	03 4d d4	 add	 ecx, DWORD PTR tv1646[ebp]
  0044e	33 c7		 xor	 eax, edi
  00450	03 d9		 add	 ebx, ecx
  00452	c1 cb 0c	 ror	 ebx, 12			; 0000000cH
  00455	03 df		 add	 ebx, edi
  00457	33 c3		 xor	 eax, ebx
  00459	05 42 39 fa ff	 add	 eax, -378558		; fffa3942H
  0045e	03 45 f4	 add	 eax, DWORD PTR tv1653[ebp]
  00461	03 d0		 add	 edx, eax

; 464  : 
; 465  :   HH ( d, a, b, c, in[ 8], S32, 2272392833); /* 34 */

  00463	8b c7		 mov	 eax, edi
  00465	33 c3		 xor	 eax, ebx
  00467	c1 c2 04	 rol	 edx, 4
  0046a	03 d3		 add	 edx, ebx
  0046c	33 c2		 xor	 eax, edx
  0046e	05 81 f6 71 87	 add	 eax, -2022574463	; 8771f681H
  00473	03 45 ec	 add	 eax, DWORD PTR tv1650[ebp]
  00476	03 f0		 add	 esi, eax
  00478	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  0047b	03 f2		 add	 esi, edx

; 466  : 
; 467  :   HH ( c, d, a, b, in[11], S33, 1839030562); /* 35 */

  0047d	8b c6		 mov	 eax, esi

; 468  : 
; 469  :   HH ( b, c, d, a, in[14], S34, 4259657740); /* 36 */

  0047f	8b ce		 mov	 ecx, esi
  00481	33 c3		 xor	 eax, ebx
  00483	33 c2		 xor	 eax, edx
  00485	05 22 61 9d 6d	 add	 eax, 1839030562		; 6d9d6122H
  0048a	03 45 dc	 add	 eax, DWORD PTR tv1647[ebp]
  0048d	03 f8		 add	 edi, eax
  0048f	c1 c7 10	 rol	 edi, 16			; 00000010H
  00492	03 fe		 add	 edi, esi
  00494	33 cf		 xor	 ecx, edi
  00496	8b c1		 mov	 eax, ecx
  00498	33 c2		 xor	 eax, edx
  0049a	05 0c 38 e5 fd	 add	 eax, -35309556		; fde5380cH
  0049f	03 45 f8	 add	 eax, DWORD PTR tv1644[ebp]
  004a2	03 d8		 add	 ebx, eax

; 470  : 
; 471  :   HH ( a, b, c, d, in[ 1], S31, 2763975236); /* 37 */
; 472  : 
; 473  :   HH ( d, a, b, c, in[ 4], S32, 1272893353); /* 38 */

  004a4	8b c7		 mov	 eax, edi
  004a6	c1 cb 09	 ror	 ebx, 9
  004a9	03 df		 add	 ebx, edi
  004ab	33 cb		 xor	 ecx, ebx
  004ad	33 c3		 xor	 eax, ebx
  004af	81 c1 44 ea be
	a4		 add	 ecx, -1530992060	; a4beea44H
  004b5	03 4d c8	 add	 ecx, DWORD PTR tv1659[ebp]
  004b8	03 d1		 add	 edx, ecx
  004ba	c1 c2 04	 rol	 edx, 4
  004bd	03 d3		 add	 edx, ebx
  004bf	33 c2		 xor	 eax, edx
  004c1	05 a9 cf de 4b	 add	 eax, 1272893353		; 4bdecfa9H
  004c6	03 45 e0	 add	 eax, DWORD PTR tv1654[ebp]
  004c9	03 f0		 add	 esi, eax
  004cb	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  004ce	03 f2		 add	 esi, edx

; 474  : 
; 475  :   HH ( c, d, a, b, in[ 7], S33, 4139469664); /* 39 */

  004d0	8b c6		 mov	 eax, esi

; 476  : 
; 477  :   HH ( b, c, d, a, in[10], S34, 3200236656); /* 40 */

  004d2	8b ce		 mov	 ecx, esi
  004d4	33 c3		 xor	 eax, ebx
  004d6	33 c2		 xor	 eax, edx
  004d8	05 60 4b bb f6	 add	 eax, -155497632		; f6bb4b60H
  004dd	03 45 fc	 add	 eax, DWORD PTR tv1651[ebp]
  004e0	03 f8		 add	 edi, eax
  004e2	c1 c7 10	 rol	 edi, 16			; 00000010H
  004e5	03 fe		 add	 edi, esi
  004e7	33 cf		 xor	 ecx, edi
  004e9	8b c1		 mov	 eax, ecx
  004eb	33 c2		 xor	 eax, edx
  004ed	05 70 bc bf be	 add	 eax, -1094730640	; bebfbc70H
  004f2	03 45 f0	 add	 eax, DWORD PTR tv1648[ebp]
  004f5	03 d8		 add	 ebx, eax
  004f7	c1 cb 09	 ror	 ebx, 9
  004fa	03 df		 add	 ebx, edi

; 478  : 
; 479  :   HH ( a, b, c, d, in[13], S31,  681279174); /* 41 */

  004fc	33 cb		 xor	 ecx, ebx

; 480  : 
; 481  :   HH ( d, a, b, c, in[ 0], S32, 3936430074); /* 42 */

  004fe	8b c7		 mov	 eax, edi
  00500	33 c3		 xor	 eax, ebx
  00502	81 c1 c6 7e 9b
	28		 add	 ecx, 681279174		; 289b7ec6H
  00508	03 4d e4	 add	 ecx, DWORD PTR tv1645[ebp]
  0050b	03 d1		 add	 edx, ecx
  0050d	c1 c2 04	 rol	 edx, 4
  00510	03 d3		 add	 edx, ebx
  00512	33 c2		 xor	 eax, edx
  00514	89 55 b4	 mov	 DWORD PTR _a$11$[ebp], edx
  00517	05 fa 27 a1 ea	 add	 eax, -358537222		; eaa127faH
  0051c	03 45 d0	 add	 eax, DWORD PTR tv1660[ebp]
  0051f	03 f0		 add	 esi, eax
  00521	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  00524	03 f2		 add	 esi, edx

; 482  : 
; 483  :   HH ( c, d, a, b, in[ 3], S33, 3572445317); /* 43 */

  00526	8b c6		 mov	 eax, esi

; 484  : 
; 485  :   HH ( b, c, d, a, in[ 6], S34,   76029189); /* 44 */

  00528	8b ce		 mov	 ecx, esi
  0052a	33 c3		 xor	 eax, ebx
  0052c	33 c2		 xor	 eax, edx
  0052e	05 85 30 ef d4	 add	 eax, -722521979		; d4ef3085H
  00533	03 45 cc	 add	 eax, DWORD PTR tv1655[ebp]
  00536	03 f8		 add	 edi, eax

; 486  : 
; 487  :   HH ( a, b, c, d, in[ 9], S31, 3654602809); /* 45 */

  00538	8b 45 b4	 mov	 eax, DWORD PTR _a$11$[ebp]
  0053b	05 39 d0 d4 d9	 add	 eax, -640364487		; d9d4d039H
  00540	c1 c7 10	 rol	 edi, 16			; 00000010H
  00543	03 fe		 add	 edi, esi
  00545	33 cf		 xor	 ecx, edi
  00547	33 d1		 xor	 edx, ecx
  00549	81 c2 05 1d 88
	04		 add	 edx, 76029189		; 04881d05H
  0054f	03 55 e8	 add	 edx, DWORD PTR tv1652[ebp]
  00552	03 d3		 add	 edx, ebx
  00554	c1 ca 09	 ror	 edx, 9
  00557	03 d7		 add	 edx, edi
  00559	33 ca		 xor	 ecx, edx
  0055b	03 4d d8	 add	 ecx, DWORD PTR tv1649[ebp]
  0055e	03 c8		 add	 ecx, eax

; 488  : 
; 489  :   HH ( d, a, b, c, in[12], S32, 3873151461); /* 46 */

  00560	8b c7		 mov	 eax, edi
  00562	33 c2		 xor	 eax, edx
  00564	c1 c1 04	 rol	 ecx, 4
  00567	03 ca		 add	 ecx, edx
  00569	33 c1		 xor	 eax, ecx
  0056b	05 e5 99 db e6	 add	 eax, -421815835		; e6db99e5H
  00570	03 45 d4	 add	 eax, DWORD PTR tv1646[ebp]
  00573	03 f0		 add	 esi, eax
  00575	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  00578	03 f1		 add	 esi, ecx

; 490  : 
; 491  :   HH ( c, d, a, b, in[15], S33,  530742520); /* 47 */

  0057a	8b c6		 mov	 eax, esi
  0057c	33 c2		 xor	 eax, edx
  0057e	33 c1		 xor	 eax, ecx
  00580	05 f8 7c a2 1f	 add	 eax, 530742520		; 1fa27cf8H
  00585	03 45 0c	 add	 eax, DWORD PTR tv1643[ebp]
  00588	03 f8		 add	 edi, eax

; 492  : 
; 493  :   HH ( b, c, d, a, in[ 2], S34, 3299628645); /* 48 */

  0058a	8b c6		 mov	 eax, esi
  0058c	c1 c7 10	 rol	 edi, 16			; 00000010H
  0058f	03 fe		 add	 edi, esi
  00591	33 c7		 xor	 eax, edi
  00593	33 c1		 xor	 eax, ecx
  00595	05 65 56 ac c4	 add	 eax, -995338651		; c4ac5665H
  0059a	03 45 c4	 add	 eax, DWORD PTR tv1657[ebp]
  0059d	03 d0		 add	 edx, eax

; 494  : 
; 495  :  
; 496  : 
; 497  :   /* Round 4 */
; 498  : 
; 499  : #define S41 6
; 500  : 
; 501  : #define S42 10
; 502  : 
; 503  : #define S43 15
; 504  : 
; 505  : #define S44 21
; 506  : 
; 507  :   II ( a, b, c, d, in[ 0], S41, 4096336452); /* 49 */

  0059f	8b c6		 mov	 eax, esi
  005a1	f7 d0		 not	 eax
  005a3	c1 ca 09	 ror	 edx, 9
  005a6	03 d7		 add	 edx, edi
  005a8	0b c2		 or	 eax, edx
  005aa	33 c7		 xor	 eax, edi
  005ac	05 44 22 29 f4	 add	 eax, -198630844		; f4292244H
  005b1	03 45 d0	 add	 eax, DWORD PTR tv1660[ebp]
  005b4	03 c8		 add	 ecx, eax

; 508  : 
; 509  :   II ( d, a, b, c, in[ 7], S42, 1126891415); /* 50 */

  005b6	8b c7		 mov	 eax, edi
  005b8	f7 d0		 not	 eax
  005ba	c1 c1 06	 rol	 ecx, 6
  005bd	03 ca		 add	 ecx, edx
  005bf	0b c1		 or	 eax, ecx
  005c1	33 c2		 xor	 eax, edx
  005c3	05 97 ff 2a 43	 add	 eax, 1126891415		; 432aff97H
  005c8	03 45 fc	 add	 eax, DWORD PTR tv1651[ebp]
  005cb	03 f0		 add	 esi, eax

; 510  : 
; 511  :   II ( c, d, a, b, in[14], S43, 2878612391); /* 51 */

  005cd	8b c2		 mov	 eax, edx
  005cf	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  005d2	03 f1		 add	 esi, ecx
  005d4	f7 d0		 not	 eax
  005d6	0b c6		 or	 eax, esi
  005d8	33 c1		 xor	 eax, ecx
  005da	05 a7 23 94 ab	 add	 eax, -1416354905	; ab9423a7H
  005df	03 45 f8	 add	 eax, DWORD PTR tv1644[ebp]
  005e2	03 f8		 add	 edi, eax

; 512  : 
; 513  :   II ( b, c, d, a, in[ 5], S44, 4237533241); /* 52 */

  005e4	8b c1		 mov	 eax, ecx
  005e6	f7 d0		 not	 eax
  005e8	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  005eb	03 fe		 add	 edi, esi
  005ed	0b c7		 or	 eax, edi
  005ef	33 c6		 xor	 eax, esi
  005f1	05 39 a0 93 fc	 add	 eax, -57434055		; fc93a039H
  005f6	03 45 f4	 add	 eax, DWORD PTR tv1653[ebp]
  005f9	03 d0		 add	 edx, eax

; 514  : 
; 515  :   II ( a, b, c, d, in[12], S41, 1700485571); /* 53 */

  005fb	8b c6		 mov	 eax, esi
  005fd	f7 d0		 not	 eax
  005ff	c1 ca 0b	 ror	 edx, 11			; 0000000bH
  00602	03 d7		 add	 edx, edi
  00604	0b c2		 or	 eax, edx
  00606	33 c7		 xor	 eax, edi
  00608	05 c3 59 5b 65	 add	 eax, 1700485571		; 655b59c3H
  0060d	03 45 d4	 add	 eax, DWORD PTR tv1646[ebp]
  00610	03 c8		 add	 ecx, eax

; 516  : 
; 517  :   II ( d, a, b, c, in[ 3], S42, 2399980690); /* 54 */

  00612	8b c7		 mov	 eax, edi
  00614	f7 d0		 not	 eax
  00616	c1 c1 06	 rol	 ecx, 6
  00619	03 ca		 add	 ecx, edx
  0061b	0b c1		 or	 eax, ecx
  0061d	33 c2		 xor	 eax, edx
  0061f	05 92 cc 0c 8f	 add	 eax, -1894986606	; 8f0ccc92H
  00624	03 45 cc	 add	 eax, DWORD PTR tv1655[ebp]
  00627	03 f0		 add	 esi, eax

; 518  : 
; 519  :   II ( c, d, a, b, in[10], S43, 4293915773); /* 55 */

  00629	8b c2		 mov	 eax, edx
  0062b	f7 d0		 not	 eax
  0062d	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00630	03 f1		 add	 esi, ecx
  00632	0b c6		 or	 eax, esi
  00634	33 c1		 xor	 eax, ecx
  00636	05 7d f4 ef ff	 add	 eax, -1051523		; ffeff47dH
  0063b	03 45 f0	 add	 eax, DWORD PTR tv1648[ebp]
  0063e	03 f8		 add	 edi, eax

; 520  : 
; 521  :   II ( b, c, d, a, in[ 1], S44, 2240044497); /* 56 */

  00640	8b c1		 mov	 eax, ecx
  00642	f7 d0		 not	 eax
  00644	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  00647	03 fe		 add	 edi, esi
  00649	0b c7		 or	 eax, edi
  0064b	33 c6		 xor	 eax, esi
  0064d	05 d1 5d 84 85	 add	 eax, -2054922799	; 85845dd1H
  00652	03 45 c8	 add	 eax, DWORD PTR tv1659[ebp]

; 522  : 
; 523  :   II ( a, b, c, d, in[ 8], S41, 1873313359); /* 57 */
; 524  : 
; 525  :   II ( d, a, b, c, in[15], S42, 4264355552); /* 58 */
; 526  : 
; 527  :   II ( c, d, a, b, in[ 6], S43, 2734768916); /* 59 */

  00655	8d 9f 14 43 01
	a3		 lea	 ebx, DWORD PTR [edi-1560198380]
  0065b	03 d0		 add	 edx, eax
  0065d	8b c6		 mov	 eax, esi
  0065f	f7 d0		 not	 eax
  00661	c1 ca 0b	 ror	 edx, 11			; 0000000bH
  00664	03 d7		 add	 edx, edi
  00666	0b c2		 or	 eax, edx
  00668	33 c7		 xor	 eax, edi
  0066a	05 4f 7e a8 6f	 add	 eax, 1873313359		; 6fa87e4fH
  0066f	03 45 ec	 add	 eax, DWORD PTR tv1650[ebp]
  00672	03 c8		 add	 ecx, eax
  00674	8b c7		 mov	 eax, edi
  00676	f7 d0		 not	 eax
  00678	c1 c1 06	 rol	 ecx, 6
  0067b	03 ca		 add	 ecx, edx
  0067d	0b c1		 or	 eax, ecx
  0067f	33 c2		 xor	 eax, edx
  00681	05 e0 e6 2c fe	 add	 eax, -30611744		; fe2ce6e0H
  00686	03 45 0c	 add	 eax, DWORD PTR tv1643[ebp]
  00689	03 f0		 add	 esi, eax
  0068b	8b c2		 mov	 eax, edx
  0068d	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00690	f7 d0		 not	 eax
  00692	03 f1		 add	 esi, ecx
  00694	0b c6		 or	 eax, esi
  00696	33 c1		 xor	 eax, ecx
  00698	03 45 e8	 add	 eax, DWORD PTR tv1652[ebp]
  0069b	03 d8		 add	 ebx, eax

; 528  : 
; 529  :   II ( b, c, d, a, in[13], S44, 1309151649); /* 60 */

  0069d	8b c1		 mov	 eax, ecx
  0069f	c1 c3 0f	 rol	 ebx, 15			; 0000000fH
  006a2	03 de		 add	 ebx, esi
  006a4	f7 d0		 not	 eax

; 530  : 
; 531  :   II ( a, b, c, d, in[ 4], S41, 4149444226); /* 61 */

  006a6	8d b9 82 7e 53
	f7		 lea	 edi, DWORD PTR [ecx-145523070]
  006ac	0b c3		 or	 eax, ebx
  006ae	33 c6		 xor	 eax, esi
  006b0	05 a1 11 08 4e	 add	 eax, 1309151649		; 4e0811a1H
  006b5	03 45 e4	 add	 eax, DWORD PTR tv1645[ebp]
  006b8	03 d0		 add	 edx, eax
  006ba	8b c6		 mov	 eax, esi
  006bc	f7 d0		 not	 eax
  006be	c1 ca 0b	 ror	 edx, 11			; 0000000bH
  006c1	03 d3		 add	 edx, ebx
  006c3	0b c2		 or	 eax, edx
  006c5	89 55 0c	 mov	 DWORD PTR _b$16$[ebp], edx
  006c8	33 c3		 xor	 eax, ebx

; 532  : 
; 533  :   II ( d, a, b, c, in[11], S42, 3174756917); /* 62 */
; 534  : 
; 535  :   II ( c, d, a, b, in[ 2], S43,  718787259); /* 63 */
; 536  : 
; 537  :   II ( b, c, d, a, in[ 9], S44, 3951481745); /* 64 */

  006ca	8b 4d 0c	 mov	 ecx, DWORD PTR _b$16$[ebp]
  006cd	03 45 e0	 add	 eax, DWORD PTR tv1654[ebp]
  006d0	81 c1 91 d3 86
	eb		 add	 ecx, -343485551		; eb86d391H
  006d6	03 f8		 add	 edi, eax
  006d8	8b c3		 mov	 eax, ebx
  006da	f7 d0		 not	 eax
  006dc	c1 c7 06	 rol	 edi, 6
  006df	03 fa		 add	 edi, edx
  006e1	0b c7		 or	 eax, edi
  006e3	33 c2		 xor	 eax, edx
  006e5	05 35 f2 3a bd	 add	 eax, -1120210379	; bd3af235H
  006ea	03 45 dc	 add	 eax, DWORD PTR tv1647[ebp]
  006ed	03 f0		 add	 esi, eax
  006ef	8b c2		 mov	 eax, edx
  006f1	f7 d0		 not	 eax
  006f3	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  006f6	03 f7		 add	 esi, edi
  006f8	8d 93 bb d2 d7
	2a		 lea	 edx, DWORD PTR [ebx+718787259]

; 538  : 
; 539  :  
; 540  : 
; 541  :   buf[0] += a;

  006fe	8b 5d 08	 mov	 ebx, DWORD PTR _buf$[ebp]
  00701	0b c6		 or	 eax, esi
  00703	33 c7		 xor	 eax, edi
  00705	03 45 c4	 add	 eax, DWORD PTR tv1657[ebp]
  00708	03 d0		 add	 edx, eax
  0070a	8b c7		 mov	 eax, edi
  0070c	01 3b		 add	 DWORD PTR [ebx], edi
  0070e	f7 d0		 not	 eax
  00710	c1 c2 0f	 rol	 edx, 15			; 0000000fH
  00713	03 d6		 add	 edx, esi

; 542  : 
; 543  :   buf[1] += b;
; 544  : 
; 545  :   buf[2] += c;

  00715	01 53 08	 add	 DWORD PTR [ebx+8], edx
  00718	0b c2		 or	 eax, edx
  0071a	33 c6		 xor	 eax, esi
  0071c	03 45 d8	 add	 eax, DWORD PTR tv1649[ebp]
  0071f	03 c8		 add	 ecx, eax
  00721	c1 c9 0b	 ror	 ecx, 11			; 0000000bH
  00724	03 ca		 add	 ecx, edx
  00726	01 4b 04	 add	 DWORD PTR [ebx+4], ecx

; 546  : 
; 547  :   buf[3] += d;

  00729	01 73 0c	 add	 DWORD PTR [ebx+12], esi
  0072c	5f		 pop	 edi
  0072d	5e		 pop	 esi
  0072e	5b		 pop	 ebx

; 548  : 
; 549  : }

  0072f	8b e5		 mov	 esp, ebp
  00731	5d		 pop	 ebp
  00732	c3		 ret	 0
_MD5Transform ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterpack\md5.c
;	COMDAT _MD5Final
_TEXT	SEGMENT
_in$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_mdContext$ = 8						; size = 4
_MD5Final PROC						; COMDAT

; 271  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b 7d 08	 mov	 edi, DWORD PTR _mdContext$[ebp]

; 272  : 
; 273  :   UINT4 in[16];
; 274  : 
; 275  :   int mdi;
; 276  : 
; 277  :   unsigned int i, ii;
; 278  : 
; 279  :   unsigned int padLen;
; 280  : 
; 281  :  
; 282  : 
; 283  :   /* save number of bits */
; 284  : 
; 285  :   in[14] = mdContext->i[0];

  00015	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 286  : 
; 287  :   in[15] = mdContext->i[1];

  00017	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0001a	89 4d f4	 mov	 DWORD PTR _in$[ebp+56], ecx

; 288  : 
; 289  :  
; 290  : 
; 291  :   /* compute number of bytes mod 64 */
; 292  : 
; 293  :   mdi = (int)((mdContext->i[0] >> 3) & 0x3F);

  0001d	c1 e9 03	 shr	 ecx, 3
  00020	83 e1 3f	 and	 ecx, 63			; 0000003fH
  00023	89 45 f8	 mov	 DWORD PTR _in$[ebp+60], eax

; 294  : 
; 295  :  
; 296  : 
; 297  :   /* pad out to 56 mod 64 */
; 298  : 
; 299  :   padLen = (mdi < 56) ? (56 - mdi) : (120 - mdi);

  00026	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  0002b	83 f9 38	 cmp	 ecx, 56			; 00000038H
  0002e	7c 05		 jl	 SHORT $LN23@MD5Final
  00030	b8 78 00 00 00	 mov	 eax, 120		; 00000078H
$LN23@MD5Final:
  00035	2b c1		 sub	 eax, ecx

; 300  : 
; 301  :   MD5Update (mdContext, PADDING, padLen);

  00037	50		 push	 eax
  00038	68 00 00 00 00	 push	 OFFSET _PADDING
  0003d	57		 push	 edi
  0003e	e8 00 00 00 00	 call	 _MD5Update
  00043	83 c4 0c	 add	 esp, 12			; 0000000cH
  00046	8d 47 1a	 lea	 eax, DWORD PTR [edi+26]

; 302  : 
; 303  :  
; 304  : 
; 305  :   /* append length in bits and transform */
; 306  : 
; 307  :   for (i = 0, ii = 0; i < 14; i++, ii += 4)

  00049	33 f6		 xor	 esi, esi
  0004b	eb 03 8d 49 00	 npad	 5
$LL6@MD5Final:

; 308  : 
; 309  :     in[i] = (((UINT4)mdContext->in[ii+3]) << 24) |
; 310  : 
; 311  :          (((UINT4)mdContext->in[ii+2]) << 16) |
; 312  : 
; 313  :          (((UINT4)mdContext->in[ii+1]) << 8) |
; 314  : 
; 315  :          ((UINT4)mdContext->in[ii]);

  00050	0f b6 50 01	 movzx	 edx, BYTE PTR [eax+1]
  00054	8d 40 04	 lea	 eax, DWORD PTR [eax+4]
  00057	0f b6 48 fc	 movzx	 ecx, BYTE PTR [eax-4]
  0005b	c1 e2 08	 shl	 edx, 8
  0005e	0b d1		 or	 edx, ecx
  00060	0f b6 48 fb	 movzx	 ecx, BYTE PTR [eax-5]
  00064	c1 e2 08	 shl	 edx, 8
  00067	0b d1		 or	 edx, ecx
  00069	0f b6 48 fa	 movzx	 ecx, BYTE PTR [eax-6]
  0006d	c1 e2 08	 shl	 edx, 8
  00070	0b d1		 or	 edx, ecx
  00072	89 54 b5 bc	 mov	 DWORD PTR _in$[ebp+esi*4], edx
  00076	46		 inc	 esi
  00077	83 fe 0e	 cmp	 esi, 14			; 0000000eH
  0007a	72 d4		 jb	 SHORT $LL6@MD5Final

; 316  : 
; 317  :   MD5Transform (mdContext->buf, in);

  0007c	8d 45 bc	 lea	 eax, DWORD PTR _in$[ebp]
  0007f	50		 push	 eax
  00080	8d 77 08	 lea	 esi, DWORD PTR [edi+8]
  00083	56		 push	 esi
  00084	e8 00 00 00 00	 call	 _MD5Transform

; 318  : 
; 319  :  
; 320  : 
; 321  :   /* store buffer in digest */
; 322  : 
; 323  :   for (i = 0, ii = 0; i < 4; i++, ii += 4) {
; 324  : 
; 325  :     mdContext->digest[ii] = (unsigned char)(mdContext->buf[i] & 0xFF);

  00089	0f b6 06	 movzx	 eax, BYTE PTR [esi]
  0008c	83 c4 08	 add	 esp, 8
  0008f	88 47 58	 mov	 BYTE PTR [edi+88], al

; 326  : 
; 327  :     mdContext->digest[ii+1] =
; 328  : 
; 329  :       (unsigned char)((mdContext->buf[i] >> 8) & 0xFF);

  00092	0f b6 47 09	 movzx	 eax, BYTE PTR [edi+9]
  00096	88 47 59	 mov	 BYTE PTR [edi+89], al

; 330  : 
; 331  :     mdContext->digest[ii+2] =
; 332  : 
; 333  :       (unsigned char)((mdContext->buf[i] >> 16) & 0xFF);

  00099	0f b6 47 0a	 movzx	 eax, BYTE PTR [edi+10]
  0009d	88 47 5a	 mov	 BYTE PTR [edi+90], al

; 334  : 
; 335  :     mdContext->digest[ii+3] =
; 336  : 
; 337  :       (unsigned char)((mdContext->buf[i] >> 24) & 0xFF);

  000a0	0f b6 47 0b	 movzx	 eax, BYTE PTR [edi+11]
  000a4	88 47 5b	 mov	 BYTE PTR [edi+91], al
  000a7	0f b6 47 0c	 movzx	 eax, BYTE PTR [edi+12]
  000ab	88 47 5c	 mov	 BYTE PTR [edi+92], al
  000ae	0f b6 47 0d	 movzx	 eax, BYTE PTR [edi+13]
  000b2	88 47 5d	 mov	 BYTE PTR [edi+93], al
  000b5	0f b6 47 0e	 movzx	 eax, BYTE PTR [edi+14]
  000b9	88 47 5e	 mov	 BYTE PTR [edi+94], al
  000bc	0f b6 47 0f	 movzx	 eax, BYTE PTR [edi+15]
  000c0	88 47 5f	 mov	 BYTE PTR [edi+95], al
  000c3	0f b6 47 10	 movzx	 eax, BYTE PTR [edi+16]

; 338  : 
; 339  :   }
; 340  : 
; 341  : }

  000c7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ca	88 46 58	 mov	 BYTE PTR [esi+88], al
  000cd	33 cd		 xor	 ecx, ebp
  000cf	0f b6 46 09	 movzx	 eax, BYTE PTR [esi+9]
  000d3	88 46 59	 mov	 BYTE PTR [esi+89], al
  000d6	0f b6 46 0a	 movzx	 eax, BYTE PTR [esi+10]
  000da	88 46 5a	 mov	 BYTE PTR [esi+90], al
  000dd	0f b6 46 0b	 movzx	 eax, BYTE PTR [esi+11]
  000e1	88 46 5b	 mov	 BYTE PTR [esi+91], al
  000e4	0f b6 47 14	 movzx	 eax, BYTE PTR [edi+20]
  000e8	88 47 64	 mov	 BYTE PTR [edi+100], al
  000eb	0f b6 47 15	 movzx	 eax, BYTE PTR [edi+21]
  000ef	88 47 65	 mov	 BYTE PTR [edi+101], al
  000f2	0f b6 47 16	 movzx	 eax, BYTE PTR [edi+22]
  000f6	88 47 66	 mov	 BYTE PTR [edi+102], al
  000f9	0f b6 47 17	 movzx	 eax, BYTE PTR [edi+23]
  000fd	88 47 67	 mov	 BYTE PTR [edi+103], al
  00100	5f		 pop	 edi
  00101	5e		 pop	 esi
  00102	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00107	8b e5		 mov	 esp, ebp
  00109	5d		 pop	 ebp
  0010a	c3		 ret	 0
_MD5Final ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterpack\md5.c
;	COMDAT _MD5Update
_TEXT	SEGMENT
_in$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_mdContext$ = 8						; size = 4
_inBuf$ = 12						; size = 4
_inLen$ = 16						; size = 4
_MD5Update PROC						; COMDAT

; 182  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _mdContext$[ebp]
  00014	57		 push	 edi

; 183  : 
; 184  :   UINT4 in[16];
; 185  : 
; 186  :   int mdi;
; 187  : 
; 188  :   unsigned int i, ii;
; 189  : 
; 190  :  
; 191  : 
; 192  :   /* compute number of bytes mod 64 */
; 193  : 
; 194  :   mdi = (int)((mdContext->i[0] >> 3) & 0x3F);
; 195  : 
; 196  :  
; 197  : 
; 198  :   /* update number of bits */
; 199  : 
; 200  :   if ((mdContext->i[0] + ((UINT4)inLen << 3)) < mdContext->i[0])

  00015	8b 7d 10	 mov	 edi, DWORD PTR _inLen$[ebp]
  00018	8b 03		 mov	 eax, DWORD PTR [ebx]
  0001a	8b c8		 mov	 ecx, eax
  0001c	c1 e9 03	 shr	 ecx, 3
  0001f	83 e1 3f	 and	 ecx, 63			; 0000003fH
  00022	8d 14 f8	 lea	 edx, DWORD PTR [eax+edi*8]
  00025	3b d0		 cmp	 edx, eax
  00027	73 03		 jae	 SHORT $LN7@MD5Update

; 201  : 
; 202  :     mdContext->i[1]++;

  00029	ff 43 04	 inc	 DWORD PTR [ebx+4]
$LN7@MD5Update:

; 203  : 
; 204  :   mdContext->i[0] += ((UINT4)inLen << 3);
; 205  : 
; 206  :   mdContext->i[1] += ((UINT4)inLen >> 29);

  0002c	8b c7		 mov	 eax, edi
  0002e	89 13		 mov	 DWORD PTR [ebx], edx
  00030	c1 e8 1d	 shr	 eax, 29			; 0000001dH
  00033	01 43 04	 add	 DWORD PTR [ebx+4], eax

; 207  : 
; 208  :  
; 209  : 
; 210  : #ifdef  LITTLE_ENDIAN
; 211  : 
; 212  :   /* Speedup for little-endian machines suggested in MD5 report --P Karn */
; 213  : 
; 214  :      if(mdi == 0 && ((int)inBuf & 3) == 0){
; 215  : 
; 216  :           while(inLen >= 64){
; 217  : 
; 218  :                MD5Transform(mdContext->buf,(UINT4 *)inBuf);
; 219  : 
; 220  :                inLen -= 64;
; 221  : 
; 222  :                inBuf += 64;
; 223  : 
; 224  :           }               
; 225  : 
; 226  :      }
; 227  : 
; 228  : #endif  /* LITTLE_ENDIAN */
; 229  : 
; 230  :   while (inLen--) {

  00036	85 ff		 test	 edi, edi
  00038	74 6c		 je	 SHORT $LN13@MD5Update
  0003a	8b 55 0c	 mov	 edx, DWORD PTR _inBuf$[ebp]
  0003d	56		 push	 esi
  0003e	8b ff		 npad	 2
$LL6@MD5Update:

; 231  : 
; 232  :     /* add new character to buffer, increment mdi */
; 233  : 
; 234  :     mdContext->in[mdi++] = *inBuf++;

  00040	8a 02		 mov	 al, BYTE PTR [edx]
  00042	4f		 dec	 edi
  00043	88 44 0b 18	 mov	 BYTE PTR [ebx+ecx+24], al
  00047	42		 inc	 edx
  00048	41		 inc	 ecx
  00049	89 55 0c	 mov	 DWORD PTR _inBuf$[ebp], edx

; 235  : 
; 236  :  
; 237  : 
; 238  :     /* transform if necessary */
; 239  : 
; 240  :     if (mdi == 0x40) {

  0004c	83 f9 40	 cmp	 ecx, 64			; 00000040H
  0004f	75 50		 jne	 SHORT $LN4@MD5Update

; 241  : 
; 242  :       for (i = 0, ii = 0; i < 16; i++, ii += 4)

  00051	33 f6		 xor	 esi, esi
  00053	8d 43 1a	 lea	 eax, DWORD PTR [ebx+26]
  00056	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$LL3@MD5Update:

; 243  : 
; 244  :      in[i] = (((UINT4)mdContext->in[ii+3]) << 24) |
; 245  : 
; 246  :           (((UINT4)mdContext->in[ii+2]) << 16) |
; 247  : 
; 248  :           (((UINT4)mdContext->in[ii+1]) << 8) |
; 249  : 
; 250  :           ((UINT4)mdContext->in[ii]);

  00060	0f b6 50 01	 movzx	 edx, BYTE PTR [eax+1]
  00064	8d 40 04	 lea	 eax, DWORD PTR [eax+4]
  00067	0f b6 48 fc	 movzx	 ecx, BYTE PTR [eax-4]
  0006b	c1 e2 08	 shl	 edx, 8
  0006e	0b d1		 or	 edx, ecx
  00070	0f b6 48 fb	 movzx	 ecx, BYTE PTR [eax-5]
  00074	c1 e2 08	 shl	 edx, 8
  00077	0b d1		 or	 edx, ecx
  00079	0f b6 48 fa	 movzx	 ecx, BYTE PTR [eax-6]
  0007d	c1 e2 08	 shl	 edx, 8
  00080	0b d1		 or	 edx, ecx
  00082	89 54 b5 bc	 mov	 DWORD PTR _in$[ebp+esi*4], edx
  00086	46		 inc	 esi
  00087	83 fe 10	 cmp	 esi, 16			; 00000010H
  0008a	72 d4		 jb	 SHORT $LL3@MD5Update

; 251  : 
; 252  :       MD5Transform (mdContext->buf, in);

  0008c	8d 45 bc	 lea	 eax, DWORD PTR _in$[ebp]
  0008f	50		 push	 eax
  00090	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 _MD5Transform
  00099	8b 55 0c	 mov	 edx, DWORD PTR _inBuf$[ebp]
  0009c	83 c4 08	 add	 esp, 8

; 253  : 
; 254  :       mdi = 0;

  0009f	33 c9		 xor	 ecx, ecx
$LN4@MD5Update:

; 207  : 
; 208  :  
; 209  : 
; 210  : #ifdef  LITTLE_ENDIAN
; 211  : 
; 212  :   /* Speedup for little-endian machines suggested in MD5 report --P Karn */
; 213  : 
; 214  :      if(mdi == 0 && ((int)inBuf & 3) == 0){
; 215  : 
; 216  :           while(inLen >= 64){
; 217  : 
; 218  :                MD5Transform(mdContext->buf,(UINT4 *)inBuf);
; 219  : 
; 220  :                inLen -= 64;
; 221  : 
; 222  :                inBuf += 64;
; 223  : 
; 224  :           }               
; 225  : 
; 226  :      }
; 227  : 
; 228  : #endif  /* LITTLE_ENDIAN */
; 229  : 
; 230  :   while (inLen--) {

  000a1	85 ff		 test	 edi, edi
  000a3	75 9b		 jne	 SHORT $LL6@MD5Update
  000a5	5e		 pop	 esi
$LN13@MD5Update:

; 255  : 
; 256  :     }
; 257  : 
; 258  :   }
; 259  : 
; 260  : }

  000a6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a9	5f		 pop	 edi
  000aa	33 cd		 xor	 ecx, ebp
  000ac	5b		 pop	 ebx
  000ad	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b2	8b e5		 mov	 esp, ebp
  000b4	5d		 pop	 ebp
  000b5	c3		 ret	 0
_MD5Update ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterpack\md5.c
;	COMDAT _MD5Init
_TEXT	SEGMENT
_mdContext$ = 8						; size = 4
_MD5Init PROC						; COMDAT

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 152  : 
; 153  :   mdContext->i[0] = mdContext->i[1] = (UINT4)0;

  00003	8b 45 08	 mov	 eax, DWORD PTR _mdContext$[ebp]
  00006	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0000d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 154  : 
; 155  :  
; 156  : 
; 157  :   /* Load magic initialization constants.
; 158  : 
; 159  :    */
; 160  : 
; 161  :   mdContext->buf[0] = (UINT4)0x67452301;

  00013	c7 40 08 01 23
	45 67		 mov	 DWORD PTR [eax+8], 1732584193 ; 67452301H

; 162  : 
; 163  :   mdContext->buf[1] = (UINT4)0xefcdab89;

  0001a	c7 40 0c 89 ab
	cd ef		 mov	 DWORD PTR [eax+12], -271733879 ; efcdab89H

; 164  : 
; 165  :   mdContext->buf[2] = (UINT4)0x98badcfe;

  00021	c7 40 10 fe dc
	ba 98		 mov	 DWORD PTR [eax+16], -1732584194 ; 98badcfeH

; 166  : 
; 167  :   mdContext->buf[3] = (UINT4)0x10325476;

  00028	c7 40 14 76 54
	32 10		 mov	 DWORD PTR [eax+20], 271733878 ; 10325476H

; 168  : 
; 169  : }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_MD5Init ENDP
_TEXT	ENDS
END
