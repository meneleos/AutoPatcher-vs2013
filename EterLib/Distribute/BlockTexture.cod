; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	C:\GamePackages\Client\Tools\Patcher2017\EterLib\BlockTexture.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0D3DXVECTOR2@@QAE@XZ				; D3DXVECTOR2::D3DXVECTOR2
PUBLIC	??0D3DXVECTOR2@@QAE@MM@Z			; D3DXVECTOR2::D3DXVECTOR2
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
PUBLIC	??0SPDTVertex@@QAE@XZ				; SPDTVertex::SPDTVertex
PUBLIC	??0CBlockTexture@@QAE@XZ			; CBlockTexture::CBlockTexture
PUBLIC	??1CBlockTexture@@UAE@XZ			; CBlockTexture::~CBlockTexture
PUBLIC	?Create@CBlockTexture@@QAE_NPAVCGraphicDib@@ABUtagRECT@@KK@Z ; CBlockTexture::Create
PUBLIC	?SetClipRect@CBlockTexture@@QAEXABUtagRECT@@@Z	; CBlockTexture::SetClipRect
PUBLIC	?Render@CBlockTexture@@QAEXHH@Z			; CBlockTexture::Render
PUBLIC	?InvalidateRect@CBlockTexture@@QAEXABUtagRECT@@@Z ; CBlockTexture::InvalidateRect
PUBLIC	??_GCBlockTexture@@UAEPAXI@Z			; CBlockTexture::`scalar deleting destructor'
PUBLIC	?Instance@?$CSingleton@VCStateManager@@@@SAAAVCStateManager@@XZ ; CSingleton<CStateManager>::Instance
PUBLIC	??$safe_release@PAUIDirect3DTexture8@@@@YAXAAPAUIDirect3DTexture8@@@Z ; safe_release<IDirect3DTexture8 *>
PUBLIC	??_7CBlockTexture@@6B@				; CBlockTexture::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	??_C@_0CA@GIFEHILH@InvalidateRect?$CI?$CJ?5?9?5Strange?5rect?$AA@ ; `string'
PUBLIC	??_C@_0CG@ELGANAOG@InvalidateRect?$CI?$CJ?5?9?5Failed?5to?5Loc@ ; `string'
PUBLIC	??_C@_0CH@GNLBGAOD@Failed?5to?5create?5block?5texture?5?$CF@ ; `string'
PUBLIC	??_R4CBlockTexture@@6B@				; CBlockTexture::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBlockTexture@@@8			; CBlockTexture `RTTI Type Descriptor'
PUBLIC	??_R3CBlockTexture@@8				; CBlockTexture::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBlockTexture@@8				; CBlockTexture::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBlockTexture@@8			; CBlockTexture::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CGraphicBase@@8			; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicBase@@@8			; CGraphicBase `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicBase@@8				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicBase@@8				; CGraphicBase::`RTTI Base Class Array'
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?Tracef@@YAXPBDZZ:PROC				; Tracef
EXTRN	??0CGraphicBase@@QAE@XZ:PROC			; CGraphicBase::CGraphicBase
EXTRN	??1CGraphicBase@@UAE@XZ:PROC			; CGraphicBase::~CGraphicBase
EXTRN	?SetDefaultIndexBuffer@CGraphicBase@@SAXI@Z:PROC ; CGraphicBase::SetDefaultIndexBuffer
EXTRN	?SetPDTStream@CGraphicBase@@SA_NPAUSPDTVertex@@I@Z:PROC ; CGraphicBase::SetPDTStream
EXTRN	??_ECBlockTexture@@UAEPAXI@Z:PROC		; CBlockTexture::`vector deleting destructor'
EXTRN	?GetWidth@CGraphicDib@@QAEHXZ:PROC		; CGraphicDib::GetWidth
EXTRN	?GetPointer@CGraphicDib@@QAEPAXXZ:PROC		; CGraphicDib::GetPointer
EXTRN	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z:PROC ; CStateManager::SetTexture
EXTRN	?SetVertexShader@CStateManager@@QAEXK@Z:PROC	; CStateManager::SetVertexShader
EXTRN	?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z:PROC ; CStateManager::DrawIndexedPrimitive
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A:DWORD ; CGraphicBase::ms_lpd3dDevice
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT ??_R2CGraphicBase@@8
rdata$r	SEGMENT
??_R2CGraphicBase@@8 DD FLAT:??_R1A@?0A@EA@CGraphicBase@@8 ; CGraphicBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicBase@@8
rdata$r	SEGMENT
??_R3CGraphicBase@@8 DD 00H				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicBase@@@8
data$r	SEGMENT
??_R0?AVCGraphicBase@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicBase@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicBase@@8 DD FLAT:??_R0?AVCGraphicBase@@@8 ; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBlockTexture@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBlockTexture@@8 DD FLAT:??_R0?AVCBlockTexture@@@8 ; CBlockTexture::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBlockTexture@@8
rdata$r	ENDS
;	COMDAT ??_R2CBlockTexture@@8
rdata$r	SEGMENT
??_R2CBlockTexture@@8 DD FLAT:??_R1A@?0A@EA@CBlockTexture@@8 ; CBlockTexture::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CBlockTexture@@8
rdata$r	SEGMENT
??_R3CBlockTexture@@8 DD 00H				; CBlockTexture::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CBlockTexture@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBlockTexture@@@8
data$r	SEGMENT
??_R0?AVCBlockTexture@@@8 DD FLAT:??_7type_info@@6B@	; CBlockTexture `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBlockTexture@@', 00H
data$r	ENDS
;	COMDAT ??_R4CBlockTexture@@6B@
rdata$r	SEGMENT
??_R4CBlockTexture@@6B@ DD 00H				; CBlockTexture::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBlockTexture@@@8
	DD	FLAT:??_R3CBlockTexture@@8
rdata$r	ENDS
;	COMDAT ??_C@_0CH@GNLBGAOD@Failed?5to?5create?5block?5texture?5?$CF@
CONST	SEGMENT
??_C@_0CH@GNLBGAOD@Failed?5to?5create?5block?5texture?5?$CF@ DB 'Failed t'
	DB	'o create block texture %u, %u', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@ELGANAOG@InvalidateRect?$CI?$CJ?5?9?5Failed?5to?5Loc@
CONST	SEGMENT
??_C@_0CG@ELGANAOG@InvalidateRect?$CI?$CJ?5?9?5Failed?5to?5Loc@ DB 'Inval'
	DB	'idateRect() - Failed to LockRect', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GIFEHILH@InvalidateRect?$CI?$CJ?5?9?5Strange?5rect?$AA@
CONST	SEGMENT
??_C@_0CA@GIFEHILH@InvalidateRect?$CI?$CJ?5?9?5Strange?5rect?$AA@ DB 'Inv'
	DB	'alidateRect() - Strange rect', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CBlockTexture@@6B@
CONST	SEGMENT
??_7CBlockTexture@@6B@ DD FLAT:??_R4CBlockTexture@@6B@	; CBlockTexture::`vftable'
	DD	FLAT:??_ECBlockTexture@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CBlockTexture@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CBlockTexture@@UAE@XZ$0
__ehfuncinfo$??1CBlockTexture@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CBlockTexture@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterbase\stl.h
;	COMDAT ??$safe_release@PAUIDirect3DTexture8@@@@YAXAAPAUIDirect3DTexture8@@@Z
_TEXT	SEGMENT
_rpObject$ = 8						; size = 4
??$safe_release@PAUIDirect3DTexture8@@@@YAXAAPAUIDirect3DTexture8@@@Z PROC ; safe_release<IDirect3DTexture8 *>, COMDAT

; 137  : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 138  : 	if (!rpObject)

  00004	8b 75 08	 mov	 esi, DWORD PTR _rpObject$[ebp]
  00007	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00009	85 c9		 test	 ecx, ecx
  0000b	74 0c		 je	 SHORT $LN2@safe_relea

; 139  : 		return;
; 140  : 	
; 141  : 	rpObject->Release();

  0000d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000f	51		 push	 ecx
  00010	ff 50 08	 call	 DWORD PTR [eax+8]

; 142  : 	rpObject = NULL;

  00013	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN2@safe_relea:
  00019	5e		 pop	 esi

; 143  : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$safe_release@PAUIDirect3DTexture8@@@@YAXAAPAUIDirect3DTexture8@@@Z ENDP ; safe_release<IDirect3DTexture8 *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterbase\singleton.h
;	COMDAT ?Instance@?$CSingleton@VCStateManager@@@@SAAAVCStateManager@@XZ
_TEXT	SEGMENT
?Instance@?$CSingleton@VCStateManager@@@@SAAAVCStateManager@@XZ PROC ; CSingleton<CStateManager>::Instance, COMDAT

; 26   : 		assert(ms_singleton);
; 27   : 		return (*ms_singleton);

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton

; 28   : 	}

  00005	c3		 ret	 0
?Instance@?$CSingleton@VCStateManager@@@@SAAAVCStateManager@@XZ ENDP ; CSingleton<CStateManager>::Instance
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCBlockTexture@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCBlockTexture@@UAEPAXI@Z PROC			; CBlockTexture::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CBlockTexture@@UAE@XZ ; CBlockTexture::~CBlockTexture
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCBlockTexture@@UAEPAXI@Z ENDP			; CBlockTexture::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp
;	COMDAT ?InvalidateRect@CBlockTexture@@QAEXABUtagRECT@@@Z
_TEXT	SEGMENT
_lockedRect$ = -48					; size = 8
tv392 = -40						; size = 4
_this$GSCopy$1$ = -36					; size = 4
tv367 = -32						; size = 4
_iclipHeight$1$ = -32					; size = 4
tv391 = -28						; size = 4
tv369 = -28						; size = 4
_dwDstWidth$1$ = -28					; size = 4
_iclipWidth$1$ = -24					; size = 4
_dstRect$1$ = -24					; size = 4
_clipRect$ = -20					; size = 16
_dstRect$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_c_rsrcRect$ = 8					; size = 4
?InvalidateRect@CBlockTexture@@QAEXABUtagRECT@@@Z PROC	; CBlockTexture::InvalidateRect, COMDAT
; _this$ = ecx

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 103  : 	RECT dstRect = m_rect;

  00010	f3 0f 6f 41 08	 movdqu	 xmm0, XMMWORD PTR [ecx+8]
  00015	8b 45 08	 mov	 eax, DWORD PTR _c_rsrcRect$[ebp]
  00018	89 4d dc	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx

; 104  : 	if (c_rsrcRect.right < dstRect.left ||
; 105  : 		c_rsrcRect.left > dstRect.right ||
; 106  : 		c_rsrcRect.bottom < dstRect.top ||
; 107  : 		c_rsrcRect.top > dstRect.bottom)

  0001b	66 0f 7e c1	 movd	 ecx, xmm0
  0001f	53		 push	 ebx
  00020	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00023	89 55 e4	 mov	 DWORD PTR tv369[ebp], edx
  00026	89 4d e8	 mov	 DWORD PTR _dstRect$1$[ebp], ecx
  00029	56		 push	 esi
  0002a	57		 push	 edi
  0002b	f3 0f 7f 45 ec	 movdqu	 XMMWORD PTR _dstRect$[ebp], xmm0
  00030	3b d1		 cmp	 edx, ecx
  00032	0f 8c 5c 01 00
	00		 jl	 $LN10@Invalidate
  00038	8b 30		 mov	 esi, DWORD PTR [eax]
  0003a	8b 4d f4	 mov	 ecx, DWORD PTR _dstRect$[ebp+8]
  0003d	3b f1		 cmp	 esi, ecx
  0003f	0f 8f 4f 01 00
	00		 jg	 $LN10@Invalidate
  00045	8b 58 0c	 mov	 ebx, DWORD PTR [eax+12]
  00048	8b 7d f0	 mov	 edi, DWORD PTR _dstRect$[ebp+4]
  0004b	3b df		 cmp	 ebx, edi
  0004d	0f 8c 41 01 00
	00		 jl	 $LN10@Invalidate
  00053	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00056	8b 55 f8	 mov	 edx, DWORD PTR _dstRect$[ebp+12]
  00059	89 45 e0	 mov	 DWORD PTR tv367[ebp], eax
  0005c	3b c2		 cmp	 eax, edx
  0005e	0f 8f 30 01 00
	00		 jg	 $LN10@Invalidate

; 110  : 		return;
; 111  : 	}
; 112  : 
; 113  : 
; 114  : 	// DIBBAR_LONGSIZE_BUGFIX
; 115  : 	const RECT clipRect = { 				
; 116  : 		max(c_rsrcRect.left - dstRect.left, 0),
; 117  : 		max(c_rsrcRect.top - dstRect.top, 0),
; 118  : 		min(c_rsrcRect.right - dstRect.left, dstRect.right - dstRect.left),
; 119  : 		min(c_rsrcRect.bottom - dstRect.top, dstRect.bottom - dstRect.top),
; 120  : 	};

  00064	2b 75 e8	 sub	 esi, DWORD PTR _dstRect$1$[ebp]
  00067	33 c0		 xor	 eax, eax
  00069	85 f6		 test	 esi, esi
  0006b	0f 4f c6	 cmovg	 eax, esi
  0006e	8b 75 e0	 mov	 esi, DWORD PTR tv367[ebp]
  00071	2b f7		 sub	 esi, edi
  00073	89 45 ec	 mov	 DWORD PTR _clipRect$[ebp], eax
  00076	33 c0		 xor	 eax, eax
  00078	85 f6		 test	 esi, esi
  0007a	0f 4f c6	 cmovg	 eax, esi
  0007d	2b 4d e8	 sub	 ecx, DWORD PTR _dstRect$1$[ebp]
  00080	8b 75 e4	 mov	 esi, DWORD PTR tv369[ebp]
  00083	2b 75 e8	 sub	 esi, DWORD PTR _dstRect$1$[ebp]
  00086	3b f1		 cmp	 esi, ecx
  00088	89 45 f0	 mov	 DWORD PTR _clipRect$[ebp+4], eax
  0008b	0f 4c ce	 cmovl	 ecx, esi
  0008e	2b df		 sub	 ebx, edi
  00090	2b d7		 sub	 edx, edi
  00092	89 4d f4	 mov	 DWORD PTR _clipRect$[ebp+8], ecx
  00095	3b da		 cmp	 ebx, edx
  00097	0f 4c d3	 cmovl	 edx, ebx

; 121  : 	// END_OF_DIBBAR_LONGSIZE_BUGFIX
; 122  : 
; 123  : 
; 124  : 	DWORD * pdwSrc;
; 125  : 	pdwSrc = (DWORD *)m_pDIB->GetPointer();

  0009a	8b 5d dc	 mov	 ebx, DWORD PTR _this$GSCopy$1$[ebp]
  0009d	89 55 f8	 mov	 DWORD PTR _clipRect$[ebp+12], edx
  000a0	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000a3	e8 00 00 00 00	 call	 ?GetPointer@CGraphicDib@@QAEPAXXZ ; CGraphicDib::GetPointer

; 126  : 	pdwSrc += dstRect.left + dstRect.top*m_pDIB->GetWidth();

  000a8	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000ab	8b f0		 mov	 esi, eax
  000ad	e8 00 00 00 00	 call	 ?GetWidth@CGraphicDib@@QAEHXZ ; CGraphicDib::GetWidth
  000b2	0f af c7	 imul	 eax, edi

; 127  : 
; 128  : 	D3DLOCKED_RECT lockedRect;
; 129  : 	if (FAILED(m_lpd3dTexture->LockRect(0, &lockedRect, &clipRect, 0)))

  000b5	8d 55 ec	 lea	 edx, DWORD PTR _clipRect$[ebp]
  000b8	6a 00		 push	 0
  000ba	52		 push	 edx
  000bb	8d 55 d0	 lea	 edx, DWORD PTR _lockedRect$[ebp]
  000be	52		 push	 edx
  000bf	03 45 e8	 add	 eax, DWORD PTR _dstRect$1$[ebp]
  000c2	6a 00		 push	 0
  000c4	8d 1c 86	 lea	 ebx, DWORD PTR [esi+eax*4]
  000c7	8b 45 dc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  000ca	8b 40 34	 mov	 eax, DWORD PTR [eax+52]
  000cd	50		 push	 eax
  000ce	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d0	ff 51 40	 call	 DWORD PTR [ecx+64]
  000d3	85 c0		 test	 eax, eax
  000d5	79 0a		 jns	 SHORT $LN9@Invalidate

; 130  : 	{
; 131  : 		Tracef("InvalidateRect() - Failed to LockRect");

  000d7	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@ELGANAOG@InvalidateRect?$CI?$CJ?5?9?5Failed?5to?5Loc@

; 132  : 		return;

  000dc	e9 b8 00 00 00	 jmp	 $LN34@Invalidate
$LN9@Invalidate:

; 133  : 	}
; 134  : 
; 135  : 	int iclipWidth = clipRect.right - clipRect.left;

  000e1	8b 45 f4	 mov	 eax, DWORD PTR _clipRect$[ebp+8]
  000e4	2b 45 ec	 sub	 eax, DWORD PTR _clipRect$[ebp]

; 136  : 	int iclipHeight = clipRect.bottom - clipRect.top;

  000e7	8b 75 f8	 mov	 esi, DWORD PTR _clipRect$[ebp+12]
  000ea	2b 75 f0	 sub	 esi, DWORD PTR _clipRect$[ebp+4]

; 137  : 	DWORD * pdwDst = (DWORD *)lockedRect.pBits;

  000ed	8b 7d d4	 mov	 edi, DWORD PTR _lockedRect$[ebp+4]
  000f0	89 45 e8	 mov	 DWORD PTR _iclipWidth$1$[ebp], eax

; 138  : 	DWORD dwDstWidth = lockedRect.Pitch>>2;

  000f3	8b 45 d0	 mov	 eax, DWORD PTR _lockedRect$[ebp]
  000f6	c1 f8 02	 sar	 eax, 2
  000f9	89 45 e4	 mov	 DWORD PTR _dwDstWidth$1$[ebp], eax

; 139  : 	DWORD dwSrcWidth = m_pDIB->GetWidth();

  000fc	8b 45 dc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  000ff	89 75 e0	 mov	 DWORD PTR _iclipHeight$1$[ebp], esi
  00102	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00105	e8 00 00 00 00	 call	 ?GetWidth@CGraphicDib@@QAEHXZ ; CGraphicDib::GetWidth
  0010a	8b d0		 mov	 edx, eax

; 140  : 	for (int i = 0; i < iclipHeight; ++i)

  0010c	85 f6		 test	 esi, esi
  0010e	7e 63		 jle	 SHORT $LN6@Invalidate
  00110	8b 4d e4	 mov	 ecx, DWORD PTR _dwDstWidth$1$[ebp]
  00113	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  0011a	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
  00121	89 45 d8	 mov	 DWORD PTR tv392[ebp], eax
  00124	89 4d e4	 mov	 DWORD PTR tv391[ebp], ecx
  00127	8b 4d e8	 mov	 ecx, DWORD PTR _iclipWidth$1$[ebp]
  0012a	8b 55 e4	 mov	 edx, DWORD PTR tv391[ebp]
  0012d	8d 49 00	 npad	 3
$LL8@Invalidate:

; 141  : 	{
; 142  : 		for (int i = 0; i < iclipWidth; ++i)

  00130	85 c9		 test	 ecx, ecx
  00132	7e 35		 jle	 SHORT $LN3@Invalidate

; 147  : 				pdwDst[i] = 0;

  00134	8b f3		 mov	 esi, ebx
  00136	8b c7		 mov	 eax, edi
  00138	2b f7		 sub	 esi, edi
  0013a	8b d1		 mov	 edx, ecx
  0013c	8d 64 24 00	 npad	 4
$LL26@Invalidate:

; 143  : 		{
; 144  : 			if (pdwSrc[i])

  00140	8b 0c 06	 mov	 ecx, DWORD PTR [esi+eax]
  00143	85 c9		 test	 ecx, ecx
  00145	74 0a		 je	 SHORT $LN27@Invalidate

; 145  : 				pdwDst[i] = pdwSrc[i] | 0xff000000;

  00147	81 c9 00 00 00
	ff		 or	 ecx, -16777216		; ff000000H
  0014d	89 08		 mov	 DWORD PTR [eax], ecx

; 146  : 			else

  0014f	eb 06		 jmp	 SHORT $LN28@Invalidate
$LN27@Invalidate:

; 147  : 				pdwDst[i] = 0;

  00151	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN28@Invalidate:

; 141  : 	{
; 142  : 		for (int i = 0; i < iclipWidth; ++i)

  00157	83 c0 04	 add	 eax, 4
  0015a	4a		 dec	 edx
  0015b	75 e3		 jne	 SHORT $LL26@Invalidate
  0015d	8b 75 e0	 mov	 esi, DWORD PTR _iclipHeight$1$[ebp]
  00160	8b 4d e8	 mov	 ecx, DWORD PTR _iclipWidth$1$[ebp]
  00163	8b 45 d8	 mov	 eax, DWORD PTR tv392[ebp]
  00166	8b 55 e4	 mov	 edx, DWORD PTR tv391[ebp]
$LN3@Invalidate:

; 148  : 		}
; 149  : 		pdwDst += dwDstWidth;

  00169	03 f8		 add	 edi, eax

; 150  : 		pdwSrc += dwSrcWidth;

  0016b	03 da		 add	 ebx, edx
  0016d	4e		 dec	 esi
  0016e	89 75 e0	 mov	 DWORD PTR _iclipHeight$1$[ebp], esi
  00171	75 bd		 jne	 SHORT $LL8@Invalidate
$LN6@Invalidate:

; 151  : 	}
; 152  : 
; 153  : 	m_lpd3dTexture->UnlockRect(0);

  00173	8b 45 dc	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00176	6a 00		 push	 0
  00178	8b 40 34	 mov	 eax, DWORD PTR [eax+52]
  0017b	50		 push	 eax
  0017c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0017e	ff 51 44	 call	 DWORD PTR [ecx+68]
  00181	5f		 pop	 edi
  00182	5e		 pop	 esi
  00183	5b		 pop	 ebx

; 154  : }

  00184	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00187	33 cd		 xor	 ecx, ebp
  00189	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0018e	8b e5		 mov	 esp, ebp
  00190	5d		 pop	 ebp
  00191	c2 04 00	 ret	 4
$LN10@Invalidate:

; 108  : 	{
; 109  : 		Tracef("InvalidateRect() - Strange rect");

  00194	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@GIFEHILH@InvalidateRect?$CI?$CJ?5?9?5Strange?5rect?$AA@
$LN34@Invalidate:
  00199	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef

; 154  : }

  0019e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a1	83 c4 04	 add	 esp, 4
  001a4	33 cd		 xor	 ecx, ebp
  001a6	5f		 pop	 edi
  001a7	5e		 pop	 esi
  001a8	5b		 pop	 ebx
  001a9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ae	8b e5		 mov	 esp, ebp
  001b0	5d		 pop	 ebp
  001b1	c2 04 00	 ret	 4
?InvalidateRect@CBlockTexture@@QAEXABUtagRECT@@@Z ENDP	; CBlockTexture::InvalidateRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp
;	COMDAT ?Render@CBlockTexture@@QAEXHH@Z
_TEXT	SEGMENT
_isx$1$ = -116						; size = 4
_isy$1$ = -112						; size = 4
$T1 = -108						; size = 8
$T2 = -108						; size = 8
$T3 = -108						; size = 8
$T4 = -108						; size = 8
_iex$1$ = -104						; size = 4
_vertices$ = -100					; size = 96
__$ArrayPad$ = -4					; size = 4
_ix$ = 8						; size = 4
_iy$ = 12						; size = 4
?Render@CBlockTexture@@QAEXHH@Z PROC			; CBlockTexture::Render, COMDAT
; _this$ = ecx

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 16   : 	int isx = ix + m_rect.left;

  00010	8b 55 08	 mov	 edx, DWORD PTR _ix$[ebp]
  00013	0f 57 f6	 xorps	 xmm6, xmm6

; 17   : 	int isy = iy + m_rect.top;
; 18   : 	int iex = ix + m_rect.left + m_dwWidth;
; 19   : 	int iey = iy + m_rect.top + m_dwHeight;
; 20   : 
; 21   : 	float su = 0.0f;
; 22   : 	float sv = 0.0f;
; 23   : 	float eu = 1.0f;

  00016	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  0001e	0f 28 ee	 movaps	 xmm5, xmm6
  00021	53		 push	 ebx
  00022	8b d9		 mov	 ebx, ecx
  00024	0f 28 fc	 movaps	 xmm7, xmm4
  00027	56		 push	 esi
  00028	57		 push	 edi
  00029	8b 7d 0c	 mov	 edi, DWORD PTR _iy$[ebp]
  0002c	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0002f	8b 73 0c	 mov	 esi, DWORD PTR [ebx+12]
  00032	8d 0c 10	 lea	 ecx, DWORD PTR [eax+edx]
  00035	03 43 2c	 add	 eax, DWORD PTR [ebx+44]
  00038	89 4d 8c	 mov	 DWORD PTR _isx$1$[ebp], ecx
  0003b	03 c2		 add	 eax, edx
  0003d	8d 0c 3e	 lea	 ecx, DWORD PTR [esi+edi]
  00040	89 45 98	 mov	 DWORD PTR _iex$1$[ebp], eax
  00043	89 4d 90	 mov	 DWORD PTR _isy$1$[ebp], ecx
  00046	8b 4b 30	 mov	 ecx, DWORD PTR [ebx+48]
  00049	03 ce		 add	 ecx, esi
  0004b	03 cf		 add	 ecx, edi

; 24   : 	float ev = 1.0f;
; 25   : 
; 26   : 	if (m_bClipEnable)

  0004d	83 7b 28 00	 cmp	 DWORD PTR [ebx+40], 0
  00051	0f 84 1b 01 00
	00		 je	 $LN37@Render

; 27   : 	{
; 28   : 		if (isx > m_clipRect.right)

  00057	8b 7d 8c	 mov	 edi, DWORD PTR _isx$1$[ebp]
  0005a	3b 7b 20	 cmp	 edi, DWORD PTR [ebx+32]
  0005d	0f 8f 5f 02 00
	00		 jg	 $LN1@Render

; 29   : 			return;
; 30   : 		if (iex < m_clipRect.left)

  00063	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00066	8b 75 98	 mov	 esi, DWORD PTR _iex$1$[ebp]
  00069	3b f0		 cmp	 esi, eax
  0006b	0f 8c 51 02 00
	00		 jl	 $LN1@Render

; 31   : 			return;
; 32   : 
; 33   : 		if (isy > m_clipRect.bottom)

  00071	8b 53 24	 mov	 edx, DWORD PTR [ebx+36]
  00074	39 55 90	 cmp	 DWORD PTR _isy$1$[ebp], edx
  00077	0f 8f 45 02 00
	00		 jg	 $LN1@Render

; 34   : 			return;
; 35   : 		if (iey < m_clipRect.top)

  0007d	8b 53 1c	 mov	 edx, DWORD PTR [ebx+28]
  00080	3b ca		 cmp	 ecx, edx
  00082	0f 8c 3a 02 00
	00		 jl	 $LN1@Render

; 36   : 			return;
; 37   : 
; 38   : 		if (m_clipRect.left > isx)

  00088	3b c7		 cmp	 eax, edi
  0008a	7e 35		 jle	 SHORT $LN39@Render

; 39   : 		{
; 40   : 			int idx = m_clipRect.left - isx;

  0008c	2b c7		 sub	 eax, edi

; 41   : 			isx += idx;

  0008e	03 f8		 add	 edi, eax
  00090	89 7d 8c	 mov	 DWORD PTR _isx$1$[ebp], edi

; 42   : 			su += float(idx) / float(m_dwWidth);

  00093	8b 7b 2c	 mov	 edi, DWORD PTR [ebx+44]
  00096	66 0f 6e e8	 movd	 xmm5, eax
  0009a	8b c7		 mov	 eax, edi
  0009c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0009f	0f 5b ed	 cvtdq2ps xmm5, xmm5
  000a2	66 0f 6e c7	 movd	 xmm0, edi
  000a6	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000aa	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  000b3	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  000b7	f3 0f 5e e8	 divss	 xmm5, xmm0
  000bb	f3 0f 58 ee	 addss	 xmm5, xmm6
  000bf	eb 03		 jmp	 SHORT $LN5@Render
$LN39@Render:
  000c1	8b 7b 2c	 mov	 edi, DWORD PTR [ebx+44]
$LN5@Render:

; 43   : 		}
; 44   : 		if (iex > m_clipRect.right)

  000c4	3b 73 20	 cmp	 esi, DWORD PTR [ebx+32]
  000c7	7e 31		 jle	 SHORT $LN4@Render

; 45   : 		{
; 46   : 			int idx = iex - m_clipRect.right;

  000c9	8b c6		 mov	 eax, esi
  000cb	66 0f 6e c7	 movd	 xmm0, edi
  000cf	2b 43 20	 sub	 eax, DWORD PTR [ebx+32]

; 47   : 			iex -= idx;
; 48   : 			eu -= float(idx) / float(m_dwWidth);

  000d2	0f 28 fc	 movaps	 xmm7, xmm4
  000d5	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000d9	2b f0		 sub	 esi, eax
  000db	c1 ef 1f	 shr	 edi, 31			; 0000001fH
  000de	66 0f 6e c8	 movd	 xmm1, eax
  000e2	f2 0f 58 04 fd
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edi*8]
  000eb	0f 5b c9	 cvtdq2ps xmm1, xmm1
  000ee	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  000f2	f3 0f 5e c8	 divss	 xmm1, xmm0
  000f6	f3 0f 5c f9	 subss	 xmm7, xmm1
$LN4@Render:

; 49   : 		}
; 50   : 
; 51   : 		if (m_clipRect.top > isy)

  000fa	8b 45 90	 mov	 eax, DWORD PTR _isy$1$[ebp]
  000fd	3b d0		 cmp	 edx, eax
  000ff	7e 38		 jle	 SHORT $LN38@Render

; 52   : 		{
; 53   : 			int idy = m_clipRect.top - isy;

  00101	2b d0		 sub	 edx, eax

; 54   : 			isy += idy;

  00103	03 c2		 add	 eax, edx
  00105	89 45 90	 mov	 DWORD PTR _isy$1$[ebp], eax
  00108	66 0f 6e ca	 movd	 xmm1, edx

; 55   : 			sv += float(idy) / float(m_dwHeight);

  0010c	8b 53 30	 mov	 edx, DWORD PTR [ebx+48]
  0010f	8b c2		 mov	 eax, edx
  00111	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00114	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00117	66 0f 6e c2	 movd	 xmm0, edx
  0011b	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0011f	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00128	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0012c	f3 0f 5e c8	 divss	 xmm1, xmm0
  00130	f3 0f 58 ce	 addss	 xmm1, xmm6
  00134	0f 28 f1	 movaps	 xmm6, xmm1
  00137	eb 03		 jmp	 SHORT $LN3@Render
$LN38@Render:
  00139	8b 53 30	 mov	 edx, DWORD PTR [ebx+48]
$LN3@Render:

; 56   : 		}
; 57   : 		if (iey > m_clipRect.bottom)

  0013c	8b 7b 24	 mov	 edi, DWORD PTR [ebx+36]
  0013f	3b cf		 cmp	 ecx, edi
  00141	7e 31		 jle	 SHORT $LN2@Render

; 58   : 		{
; 59   : 			int idy = iey - m_clipRect.bottom;

  00143	8b c1		 mov	 eax, ecx
  00145	66 0f 6e c2	 movd	 xmm0, edx
  00149	2b c7		 sub	 eax, edi

; 60   : 			iey -= idy;
; 61   : 			ev -= float(idy) / float(m_dwHeight);

  0014b	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0014f	2b c8		 sub	 ecx, eax
  00151	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  00154	66 0f 6e c8	 movd	 xmm1, eax
  00158	f2 0f 58 04 d5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  00161	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00164	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00168	f3 0f 5e c8	 divss	 xmm1, xmm0
  0016c	f3 0f 5c e1	 subss	 xmm4, xmm1
  00170	eb 02		 jmp	 SHORT $LN2@Render
$LN37@Render:
  00172	8b f0		 mov	 esi, eax
$LN2@Render:
  00174	66 0f 6e 45 90	 movd	 xmm0, DWORD PTR _isy$1$[ebp]

; 66   : 	vertices[0].position.x	= isx - 0.5f;

  00179	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3f000000
  00181	66 0f 6e 55 8c	 movd	 xmm2, DWORD PTR _isx$1$[ebp]

; 67   : 	vertices[0].position.y	= isy - 0.5f;

  00186	0f 5b c0	 cvtdq2ps xmm0, xmm0

; 89   : 
; 90   : 	if (CGraphicBase::SetPDTStream(vertices, 4))

  00189	6a 04		 push	 4
  0018b	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _vertices$[ebp+8], 0
  00192	c7 45 a8 ff ff
	ff ff		 mov	 DWORD PTR _vertices$[ebp+12], -1
  00199	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _vertices$[ebp+32], 0
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 41   :     x = fx;

  001a0	f3 0f 11 6d 94	 movss	 DWORD PTR $T4[ebp], xmm5
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp

; 69   : 	vertices[0].texCoord	= TTextureCoordinate(su, sv);

  001a5	8b 45 94	 mov	 eax, DWORD PTR $T4[ebp]
  001a8	f3 0f 5c c3	 subss	 xmm0, xmm3
  001ac	89 45 ac	 mov	 DWORD PTR _vertices$[ebp+16], eax
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 42   :     y = fy;

  001af	f3 0f 11 75 98	 movss	 DWORD PTR $T4[ebp+4], xmm6
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp

; 69   : 	vertices[0].texCoord	= TTextureCoordinate(su, sv);

  001b4	8b 45 98	 mov	 eax, DWORD PTR $T4[ebp+4]
  001b7	89 45 b0	 mov	 DWORD PTR _vertices$[ebp+20], eax
  001ba	f3 0f 11 45 a0	 movss	 DWORD PTR _vertices$[ebp+4], xmm0

; 70   : 	vertices[0].diffuse		= 0xffffffff;
; 71   : 
; 72   : 	vertices[1].position.x	= iex - 0.5f;
; 73   : 	vertices[1].position.y	= isy - 0.5f;

  001bf	f3 0f 11 45 b8	 movss	 DWORD PTR _vertices$[ebp+28], xmm0
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 41   :     x = fx;

  001c4	f3 0f 11 7d 94	 movss	 DWORD PTR $T3[ebp], xmm7
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp

; 75   : 	vertices[1].texCoord	= TTextureCoordinate(eu, sv);

  001c9	8b 45 94	 mov	 eax, DWORD PTR $T3[ebp]
  001cc	89 45 c4	 mov	 DWORD PTR _vertices$[ebp+40], eax
  001cf	66 0f 6e ce	 movd	 xmm1, esi
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 42   :     y = fy;

  001d3	f3 0f 11 75 98	 movss	 DWORD PTR $T3[ebp+4], xmm6
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp

; 75   : 	vertices[1].texCoord	= TTextureCoordinate(eu, sv);

  001d8	8b 45 98	 mov	 eax, DWORD PTR $T3[ebp+4]
  001db	89 45 c8	 mov	 DWORD PTR _vertices$[ebp+44], eax
  001de	66 0f 6e c1	 movd	 xmm0, ecx
  001e2	0f 5b d2	 cvtdq2ps xmm2, xmm2

; 76   : 	vertices[1].diffuse		= 0xffffffff;

  001e5	c7 45 c0 ff ff
	ff ff		 mov	 DWORD PTR _vertices$[ebp+36], -1

; 77   : 
; 78   : 	vertices[2].position.x	= isx - 0.5f;
; 79   : 	vertices[2].position.y	= iey - 0.5f;
; 80   : 	vertices[2].position.z	= 0.0f;

  001ec	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _vertices$[ebp+56], 0

; 82   : 	vertices[2].diffuse		= 0xffffffff;

  001f3	c7 45 d8 ff ff
	ff ff		 mov	 DWORD PTR _vertices$[ebp+60], -1

; 83   : 
; 84   : 	vertices[3].position.x	= iex - 0.5f;
; 85   : 	vertices[3].position.y	= iey - 0.5f;
; 86   : 	vertices[3].position.z	= 0.0f;

  001fa	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _vertices$[ebp+80], 0
  00201	0f 5b c9	 cvtdq2ps xmm1, xmm1

; 88   : 	vertices[3].diffuse		= 0xffffffff;

  00204	c7 45 f0 ff ff
	ff ff		 mov	 DWORD PTR _vertices$[ebp+84], -1
  0020b	0f 5b c0	 cvtdq2ps xmm0, xmm0
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 41   :     x = fx;

  0020e	f3 0f 11 6d 94	 movss	 DWORD PTR $T2[ebp], xmm5
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp

; 66   : 	vertices[0].position.x	= isx - 0.5f;

  00213	f3 0f 5c d3	 subss	 xmm2, xmm3

; 81   : 	vertices[2].texCoord	= TTextureCoordinate(su, ev);

  00217	8b 45 94	 mov	 eax, DWORD PTR $T2[ebp]
  0021a	f3 0f 5c cb	 subss	 xmm1, xmm3
  0021e	89 45 dc	 mov	 DWORD PTR _vertices$[ebp+64], eax
  00221	f3 0f 5c c3	 subss	 xmm0, xmm3
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 42   :     y = fy;

  00225	f3 0f 11 65 98	 movss	 DWORD PTR $T2[ebp+4], xmm4
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp

; 81   : 	vertices[2].texCoord	= TTextureCoordinate(su, ev);

  0022a	8b 45 98	 mov	 eax, DWORD PTR $T2[ebp+4]
  0022d	89 45 e0	 mov	 DWORD PTR _vertices$[ebp+68], eax
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 41   :     x = fx;

  00230	f3 0f 11 7d 94	 movss	 DWORD PTR $T1[ebp], xmm7
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp

; 87   : 	vertices[3].texCoord	= TTextureCoordinate(eu, ev);	

  00235	8b 45 94	 mov	 eax, DWORD PTR $T1[ebp]
  00238	89 45 f4	 mov	 DWORD PTR _vertices$[ebp+88], eax
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 42   :     y = fy;

  0023b	f3 0f 11 65 98	 movss	 DWORD PTR $T1[ebp+4], xmm4
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp

; 87   : 	vertices[3].texCoord	= TTextureCoordinate(eu, ev);	

  00240	8b 45 98	 mov	 eax, DWORD PTR $T1[ebp+4]
  00243	89 45 f8	 mov	 DWORD PTR _vertices$[ebp+92], eax

; 89   : 
; 90   : 	if (CGraphicBase::SetPDTStream(vertices, 4))

  00246	8d 45 9c	 lea	 eax, DWORD PTR _vertices$[ebp]
  00249	50		 push	 eax
  0024a	f3 0f 11 55 9c	 movss	 DWORD PTR _vertices$[ebp], xmm2
  0024f	f3 0f 11 4d b4	 movss	 DWORD PTR _vertices$[ebp+24], xmm1
  00254	f3 0f 11 55 cc	 movss	 DWORD PTR _vertices$[ebp+48], xmm2
  00259	f3 0f 11 45 d0	 movss	 DWORD PTR _vertices$[ebp+52], xmm0
  0025e	f3 0f 11 4d e4	 movss	 DWORD PTR _vertices$[ebp+72], xmm1
  00263	f3 0f 11 45 e8	 movss	 DWORD PTR _vertices$[ebp+76], xmm0
  00268	e8 00 00 00 00	 call	 ?SetPDTStream@CGraphicBase@@SA_NPAUSPDTVertex@@I@Z ; CGraphicBase::SetPDTStream
  0026d	83 c4 08	 add	 esp, 8
  00270	84 c0		 test	 al, al
  00272	74 4e		 je	 SHORT $LN1@Render

; 91   : 	{
; 92   : 		CGraphicBase::SetDefaultIndexBuffer(CGraphicBase::DEFAULT_IB_FILL_RECT);

  00274	6a 05		 push	 5
  00276	e8 00 00 00 00	 call	 ?SetDefaultIndexBuffer@CGraphicBase@@SAXI@Z ; CGraphicBase::SetDefaultIndexBuffer

; 93   : 
; 94   : 		STATEMANAGER.SetTexture(0, m_lpd3dTexture);

  0027b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00281	83 c4 04	 add	 esp, 4
  00284	ff 73 34	 push	 DWORD PTR [ebx+52]
  00287	6a 00		 push	 0
  00289	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 95   : 		STATEMANAGER.SetTexture(1, NULL);

  0028e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00294	6a 00		 push	 0
  00296	6a 01		 push	 1
  00298	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 96   : 		STATEMANAGER.SetVertexShader(D3DFVF_XYZ|D3DFVF_TEX1|D3DFVF_DIFFUSE);

  0029d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002a3	68 42 01 00 00	 push	 322			; 00000142H
  002a8	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 97   : 		STATEMANAGER.DrawIndexedPrimitive(D3DPT_TRIANGLELIST, 0, 4, 0, 2);

  002ad	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  002b3	6a 02		 push	 2
  002b5	6a 00		 push	 0
  002b7	6a 04		 push	 4
  002b9	6a 00		 push	 0
  002bb	6a 04		 push	 4
  002bd	e8 00 00 00 00	 call	 ?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z ; CStateManager::DrawIndexedPrimitive
$LN1@Render:

; 98   : 	}
; 99   : }

  002c2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002c5	5f		 pop	 edi
  002c6	5e		 pop	 esi
  002c7	33 cd		 xor	 ecx, ebp
  002c9	5b		 pop	 ebx
  002ca	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002cf	8b e5		 mov	 esp, ebp
  002d1	5d		 pop	 ebp
  002d2	c2 08 00	 ret	 8
?Render@CBlockTexture@@QAEXHH@Z ENDP			; CBlockTexture::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp
;	COMDAT ?SetClipRect@CBlockTexture@@QAEXABUtagRECT@@@Z
_TEXT	SEGMENT
_c_rRect$ = 8						; size = 4
?SetClipRect@CBlockTexture@@QAEXABUtagRECT@@@Z PROC	; CBlockTexture::SetClipRect, COMDAT
; _this$ = ecx

; 9    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 10   : 	m_bClipEnable = TRUE;
; 11   : 	m_clipRect = c_rRect;

  00003	8b 45 08	 mov	 eax, DWORD PTR _c_rRect$[ebp]
  00006	c7 41 28 01 00
	00 00		 mov	 DWORD PTR [ecx+40], 1
  0000d	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  00011	f3 0f 7f 41 18	 movdqu	 XMMWORD PTR [ecx+24], xmm0

; 12   : }

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?SetClipRect@CBlockTexture@@QAEXABUtagRECT@@@Z ENDP	; CBlockTexture::SetClipRect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp
;	COMDAT ?Create@CBlockTexture@@QAE_NPAVCGraphicDib@@ABUtagRECT@@KK@Z
_TEXT	SEGMENT
_pDIB$ = 8						; size = 4
_c_rRect$ = 12						; size = 4
_dwWidth$ = 16						; size = 4
_dwHeight$ = 20						; size = 4
?Create@CBlockTexture@@QAE_NPAVCGraphicDib@@ABUtagRECT@@KK@Z PROC ; CBlockTexture::Create, COMDAT
; _this$ = ecx

; 157  : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 158  : 	if (FAILED(ms_lpd3dDevice->CreateTexture(dwWidth, dwHeight, 0, 0, D3DFMT_A8R8G8B8, D3DPOOL_MANAGED, &m_lpd3dTexture)))

  00003	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00009	53		 push	 ebx
  0000a	8b 5d 14	 mov	 ebx, DWORD PTR _dwHeight$[ebp]
  0000d	56		 push	 esi
  0000e	8b 32		 mov	 esi, DWORD PTR [edx]
  00010	57		 push	 edi
  00011	8b f9		 mov	 edi, ecx
  00013	8d 47 34	 lea	 eax, DWORD PTR [edi+52]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 15		 push	 21			; 00000015H
  0001b	6a 00		 push	 0
  0001d	6a 00		 push	 0
  0001f	53		 push	 ebx
  00020	ff 75 10	 push	 DWORD PTR _dwWidth$[ebp]
  00023	52		 push	 edx
  00024	ff 56 50	 call	 DWORD PTR [esi+80]
  00027	85 c0		 test	 eax, eax
  00029	79 1a		 jns	 SHORT $LN1@Create

; 159  : 	{
; 160  : 		Tracef("Failed to create block texture %u, %u\n", dwWidth, dwHeight);

  0002b	53		 push	 ebx
  0002c	ff 75 10	 push	 DWORD PTR _dwWidth$[ebp]
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@GNLBGAOD@Failed?5to?5create?5block?5texture?5?$CF@
  00034	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH

; 161  : 		return false;

  0003c	32 c0		 xor	 al, al
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx

; 171  : }

  00041	5d		 pop	 ebp
  00042	c2 10 00	 ret	 16			; 00000010H
$LN1@Create:

; 162  : 	}
; 163  : 
; 164  : 	m_pDIB = pDIB;

  00045	8b 45 08	 mov	 eax, DWORD PTR _pDIB$[ebp]
  00048	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 165  : 	m_rect = c_rRect;

  0004b	8b 45 0c	 mov	 eax, DWORD PTR _c_rRect$[ebp]
  0004e	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]

; 166  : 	m_dwWidth = dwWidth;

  00052	8b 45 10	 mov	 eax, DWORD PTR _dwWidth$[ebp]
  00055	89 47 2c	 mov	 DWORD PTR [edi+44], eax

; 167  : 	m_dwHeight = dwHeight;
; 168  : 	m_bClipEnable = FALSE;
; 169  : 
; 170  : 	return true;

  00058	b0 01		 mov	 al, 1
  0005a	89 5f 30	 mov	 DWORD PTR [edi+48], ebx
  0005d	f3 0f 7f 47 08	 movdqu	 XMMWORD PTR [edi+8], xmm0
  00062	c7 47 28 00 00
	00 00		 mov	 DWORD PTR [edi+40], 0
  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	5b		 pop	 ebx

; 171  : }

  0006c	5d		 pop	 ebp
  0006d	c2 10 00	 ret	 16			; 00000010H
?Create@CBlockTexture@@QAE_NPAVCGraphicDib@@ABUtagRECT@@KK@Z ENDP ; CBlockTexture::Create
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp
; File c:\gamepackages\client\tools\patcher2017\eterbase\stl.h
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp
; File c:\gamepackages\client\tools\patcher2017\eterbase\stl.h
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp
;	COMDAT ??1CBlockTexture@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CBlockTexture@@UAE@XZ PROC				; CBlockTexture::~CBlockTexture, COMDAT
; _this$ = ecx

; 180  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CBlockTexture@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBlockTexture@@6B@
; File c:\gamepackages\client\tools\patcher2017\eterbase\stl.h

; 138  : 	if (!rpObject)

  0002f	8b 4e 34	 mov	 ecx, DWORD PTR [esi+52]
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp

; 180  : {

  00032	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File c:\gamepackages\client\tools\patcher2017\eterbase\stl.h

; 138  : 	if (!rpObject)

  00039	85 c9		 test	 ecx, ecx
  0003b	74 0d		 je	 SHORT $LN5@CBlockText

; 139  : 		return;
; 140  : 	
; 141  : 	rpObject->Release();

  0003d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0003f	51		 push	 ecx
  00040	ff 50 08	 call	 DWORD PTR [eax+8]

; 142  : 	rpObject = NULL;

  00043	c7 46 34 00 00
	00 00		 mov	 DWORD PTR [esi+52], 0
$LN5@CBlockText:
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp

; 183  : }

  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 46 34 00 00
	00 00		 mov	 DWORD PTR [esi+52], 0
  00053	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0005a	e8 00 00 00 00	 call	 ??1CGraphicBase@@UAE@XZ	; CGraphicBase::~CGraphicBase
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5e		 pop	 esi
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CBlockTexture@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CGraphicBase@@UAE@XZ	; CGraphicBase::~CGraphicBase
__ehhandler$??1CBlockTexture@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CBlockTexture@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CBlockTexture@@UAE@XZ ENDP				; CBlockTexture::~CBlockTexture
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\blocktexture.cpp
;	COMDAT ??0CBlockTexture@@QAE@XZ
_TEXT	SEGMENT
??0CBlockTexture@@QAE@XZ PROC				; CBlockTexture::CBlockTexture, COMDAT
; _this$ = ecx

; 174  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??0CGraphicBase@@QAE@XZ	; CGraphicBase::CGraphicBase
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CBlockTexture@@6B@

; 175  : 	m_pDIB = NULL;
; 176  : 	m_lpd3dTexture = NULL;
; 177  : }

  0000e	8b c6		 mov	 eax, esi
  00010	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00017	c7 46 34 00 00
	00 00		 mov	 DWORD PTR [esi+52], 0
  0001e	5e		 pop	 esi
  0001f	c3		 ret	 0
??0CBlockTexture@@QAE@XZ ENDP				; CBlockTexture::CBlockTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0SPDTVertex@@QAE@XZ
_TEXT	SEGMENT
??0SPDTVertex@@QAE@XZ PROC				; SPDTVertex::SPDTVertex, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0SPDTVertex@@QAE@XZ ENDP				; SPDTVertex::SPDTVertex
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.h
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT
??0D3DXVECTOR3@@QAE@XZ PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 89   :     D3DXVECTOR3() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
;	COMDAT ??0D3DXVECTOR2@@QAE@MM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
??0D3DXVECTOR2@@QAE@MM@Z PROC				; D3DXVECTOR2::D3DXVECTOR2, COMDAT
; _this$ = ecx

; 40   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 41   :     x = fx;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]

; 42   :     y = fy;
; 43   : }

  00008	8b c1		 mov	 eax, ecx
  0000a	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0
  0000e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00013	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0
  00018	5d		 pop	 ebp
  00019	c2 08 00	 ret	 8
??0D3DXVECTOR2@@QAE@MM@Z ENDP				; D3DXVECTOR2::D3DXVECTOR2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.h
;	COMDAT ??0D3DXVECTOR2@@QAE@XZ
_TEXT	SEGMENT
??0D3DXVECTOR2@@QAE@XZ PROC				; D3DXVECTOR2::D3DXVECTOR2, COMDAT
; _this$ = ecx

; 46   :     D3DXVECTOR2() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXVECTOR2@@QAE@XZ ENDP				; D3DXVECTOR2::D3DXVECTOR2
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	4e		 dec	 esi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	57		 push	 edi
  0000f	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b cf		 mov	 ecx, edi
  00014	ff d3		 call	 ebx
  00016	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  00019	4e		 dec	 esi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5f		 pop	 edi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
