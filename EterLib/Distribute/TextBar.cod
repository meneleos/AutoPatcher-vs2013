; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	C:\GamePackages\Client\Tools\Patcher2017\EterLib\TextBar.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0CTextBar@@QAE@H_N@Z				; CTextBar::CTextBar
PUBLIC	??1CTextBar@@UAE@XZ				; CTextBar::~CTextBar
PUBLIC	?TextOutA@CTextBar@@QAEXHHPBD@Z			; CTextBar::TextOutA
PUBLIC	?SetTextColor@CTextBar@@QAEXHHH@Z		; CTextBar::SetTextColor
PUBLIC	?GetTextExtent@CTextBar@@QAEXPBDPAUtagSIZE@@@Z	; CTextBar::GetTextExtent
PUBLIC	?__SetFont@CTextBar@@IAEXH_N@Z			; CTextBar::__SetFont
PUBLIC	?OnCreate@CTextBar@@MAEXXZ			; CTextBar::OnCreate
PUBLIC	??_GCTextBar@@UAEPAXI@Z				; CTextBar::`scalar deleting destructor'
PUBLIC	??_7CTextBar@@6B@				; CTextBar::`vftable'
PUBLIC	??_R4CTextBar@@6B@				; CTextBar::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTextBar@@@8				; CTextBar `RTTI Type Descriptor'
PUBLIC	??_R3CTextBar@@8				; CTextBar::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTextBar@@8				; CTextBar::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTextBar@@8			; CTextBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CDibBar@@8			; CDibBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCDibBar@@@8				; CDibBar `RTTI Type Descriptor'
PUBLIC	??_R3CDibBar@@8					; CDibBar::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDibBar@@8					; CDibBar::`RTTI Base Class Array'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp__CreateFontIndirectA@4:PROC
EXTRN	__imp__GetTextExtentPoint32A@16:PROC
EXTRN	__imp__SelectObject@8:PROC
EXTRN	__imp__SetTextColor@8:PROC
EXTRN	?SetBkMode@CGraphicDib@@QAEXH@Z:PROC		; CGraphicDib::SetBkMode
EXTRN	?TextOutA@CGraphicDib@@QAEXHHPBD@Z:PROC		; CGraphicDib::TextOutA
EXTRN	?GetDCHandle@CGraphicDib@@QAEPAUHDC__@@XZ:PROC	; CGraphicDib::GetDCHandle
EXTRN	??0CDibBar@@QAE@XZ:PROC				; CDibBar::CDibBar
EXTRN	??1CDibBar@@UAE@XZ:PROC				; CDibBar::~CDibBar
EXTRN	?Invalidate@CDibBar@@QAEXXZ:PROC		; CDibBar::Invalidate
EXTRN	??_ECTextBar@@UAEPAXI@Z:PROC			; CTextBar::`vector deleting destructor'
EXTRN	?GetCharsetFromCodePage@@YAHG@Z:PROC		; GetCharsetFromCodePage
EXTRN	?GetDefaultCodePage@@YAKXZ:PROC			; GetDefaultCodePage
EXTRN	?GetFontFaceFromCodePage@@YAPBDG@Z:PROC		; GetFontFaceFromCodePage
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R2CDibBar@@8
rdata$r	SEGMENT
??_R2CDibBar@@8 DD FLAT:??_R1A@?0A@EA@CDibBar@@8	; CDibBar::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CDibBar@@8
rdata$r	SEGMENT
??_R3CDibBar@@8 DD 00H					; CDibBar::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CDibBar@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDibBar@@@8
data$r	SEGMENT
??_R0?AVCDibBar@@@8 DD FLAT:??_7type_info@@6B@		; CDibBar `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDibBar@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDibBar@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDibBar@@8 DD FLAT:??_R0?AVCDibBar@@@8	; CDibBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDibBar@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CTextBar@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTextBar@@8 DD FLAT:??_R0?AVCTextBar@@@8	; CTextBar::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTextBar@@8
rdata$r	ENDS
;	COMDAT ??_R2CTextBar@@8
rdata$r	SEGMENT
??_R2CTextBar@@8 DD FLAT:??_R1A@?0A@EA@CTextBar@@8	; CTextBar::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CDibBar@@8
rdata$r	ENDS
;	COMDAT ??_R3CTextBar@@8
rdata$r	SEGMENT
??_R3CTextBar@@8 DD 00H					; CTextBar::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CTextBar@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTextBar@@@8
data$r	SEGMENT
??_R0?AVCTextBar@@@8 DD FLAT:??_7type_info@@6B@		; CTextBar `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTextBar@@', 00H
data$r	ENDS
;	COMDAT ??_R4CTextBar@@6B@
rdata$r	SEGMENT
??_R4CTextBar@@6B@ DD 00H				; CTextBar::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTextBar@@@8
	DD	FLAT:??_R3CTextBar@@8
rdata$r	ENDS
;	COMDAT ??_7CTextBar@@6B@
CONST	SEGMENT
??_7CTextBar@@6B@ DD FLAT:??_R4CTextBar@@6B@		; CTextBar::`vftable'
	DD	FLAT:??_ECTextBar@@UAEPAXI@Z
	DD	FLAT:?OnCreate@CTextBar@@MAEXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CTextBar@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CTextBar@@UAE@XZ$0
__ehfuncinfo$??1CTextBar@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CTextBar@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCTextBar@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTextBar@@UAEPAXI@Z PROC				; CTextBar::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CTextBar@@UAE@XZ	; CTextBar::~CTextBar
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCTextBar@@UAEPAXI@Z ENDP				; CTextBar::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\textbar.cpp
;	COMDAT ?OnCreate@CTextBar@@MAEXXZ
_TEXT	SEGMENT
?OnCreate@CTextBar@@MAEXXZ PROC				; CTextBar::OnCreate, COMDAT
; _this$ = ecx

; 58   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 59   : 	m_dib.SetBkMode(TRANSPARENT);

  00003	6a 01		 push	 1
  00005	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00008	e8 00 00 00 00	 call	 ?SetBkMode@CGraphicDib@@QAEXH@Z ; CGraphicDib::SetBkMode

; 60   : 
; 61   : 	__SetFont(m_fontSize, m_isBold);

  0000d	0f b6 46 68	 movzx	 eax, BYTE PTR [esi+104]
  00011	8b ce		 mov	 ecx, esi
  00013	50		 push	 eax
  00014	ff 76 64	 push	 DWORD PTR [esi+100]
  00017	e8 00 00 00 00	 call	 ?__SetFont@CTextBar@@IAEXH_N@Z ; CTextBar::__SetFont
  0001c	5e		 pop	 esi

; 62   : }

  0001d	c3		 ret	 0
?OnCreate@CTextBar@@MAEXXZ ENDP				; CTextBar::OnCreate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\textbar.cpp
;	COMDAT ?__SetFont@CTextBar@@IAEXH_N@Z
_TEXT	SEGMENT
_logFont$ = -64						; size = 60
__$ArrayPad$ = -4					; size = 4
_fontSize$ = 8						; size = 4
_isBold$ = 12						; size = 1
?__SetFont@CTextBar@@IAEXH_N@Z PROC			; CTextBar::__SetFont, COMDAT
; _this$ = ecx

; 6    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b f9		 mov	 edi, ecx

; 7    : 	int iCodePage = GetDefaultCodePage();

  00014	e8 00 00 00 00	 call	 ?GetDefaultCodePage@@YAKXZ ; GetDefaultCodePage

; 8    : 
; 9    : 	LOGFONT logFont;
; 10   : 
; 11   : 	memset(&logFont, 0, sizeof(LOGFONT));

  00019	6a 3c		 push	 60			; 0000003cH
  0001b	8b f0		 mov	 esi, eax
  0001d	8d 45 c0	 lea	 eax, DWORD PTR _logFont$[ebp]
  00020	6a 00		 push	 0
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 _memset

; 12   : 
; 13   : 	logFont.lfHeight			= fontSize;

  00028	8b 4d 08	 mov	 ecx, DWORD PTR _fontSize$[ebp]

; 14   : 	logFont.lfEscapement		= 0;
; 15   : 	logFont.lfOrientation		= 0;
; 16   : 
; 17   : 	if (isBold)

  0002b	b8 90 01 00 00	 mov	 eax, 400		; 00000190H
  00030	80 7d 0c 00	 cmp	 BYTE PTR _isBold$[ebp], 0
  00034	89 4d c0	 mov	 DWORD PTR _logFont$[ebp], ecx
  00037	b9 bc 02 00 00	 mov	 ecx, 700		; 000002bcH
  0003c	0f 45 c1	 cmovne	 eax, ecx
  0003f	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _logFont$[ebp+8], 0

; 18   : 		logFont.lfWeight			= FW_BOLD;
; 19   : 	else
; 20   : 		logFont.lfWeight			= FW_NORMAL;
; 21   : 	
; 22   : 	logFont.lfItalic			= FALSE;
; 23   : 	logFont.lfUnderline			= FALSE;
; 24   : 	logFont.lfStrikeOut			= FALSE;
; 25   : 	logFont.lfCharSet			= GetCharsetFromCodePage(iCodePage);

  00046	56		 push	 esi
  00047	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _logFont$[ebp+12], 0
  0004e	89 45 d0	 mov	 DWORD PTR _logFont$[ebp+16], eax
  00051	66 c7 45 d4 00
	00		 mov	 WORD PTR _logFont$[ebp+20], 0
  00057	c6 45 d6 00	 mov	 BYTE PTR _logFont$[ebp+22], 0
  0005b	e8 00 00 00 00	 call	 ?GetCharsetFromCodePage@@YAHG@Z ; GetCharsetFromCodePage

; 26   : 	logFont.lfOutPrecision		= OUT_DEFAULT_PRECIS;
; 27   : 	logFont.lfClipPrecision		= CLIP_DEFAULT_PRECIS;
; 28   : 	logFont.lfQuality			= ANTIALIASED_QUALITY;
; 29   : 	logFont.lfPitchAndFamily	= DEFAULT_PITCH;
; 30   : 	strcpy(logFont.lfFaceName, GetFontFaceFromCodePage(iCodePage));

  00060	56		 push	 esi
  00061	88 45 d7	 mov	 BYTE PTR _logFont$[ebp+23], al
  00064	c7 45 d8 00 00
	04 00		 mov	 DWORD PTR _logFont$[ebp+24], 262144 ; 00040000H
  0006b	e8 00 00 00 00	 call	 ?GetFontFaceFromCodePage@@YAPBDG@Z ; GetFontFaceFromCodePage
  00070	8d 55 dc	 lea	 edx, DWORD PTR _logFont$[ebp+28]
  00073	83 c4 14	 add	 esp, 20			; 00000014H
  00076	2b d0		 sub	 edx, eax
  00078	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL5@SetFont:
  00080	8a 08		 mov	 cl, BYTE PTR [eax]
  00082	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  00085	88 4c 02 ff	 mov	 BYTE PTR [edx+eax-1], cl
  00089	84 c9		 test	 cl, cl
  0008b	75 f3		 jne	 SHORT $LL5@SetFont

; 31   : 	m_hFont = CreateFontIndirect(&logFont);

  0008d	8d 45 c0	 lea	 eax, DWORD PTR _logFont$[ebp]
  00090	50		 push	 eax
  00091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFontIndirectA@4

; 32   : 
; 33   : 		
; 34   : 	HDC hdc = m_dib.GetDCHandle();

  00097	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0009a	89 47 5c	 mov	 DWORD PTR [edi+92], eax
  0009d	e8 00 00 00 00	 call	 ?GetDCHandle@CGraphicDib@@QAEPAUHDC__@@XZ ; CGraphicDib::GetDCHandle

; 35   : 	m_hOldFont = (HFONT)SelectObject(hdc, m_hFont);

  000a2	ff 77 5c	 push	 DWORD PTR [edi+92]
  000a5	50		 push	 eax
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectObject@8

; 36   : 	
; 37   : }

  000ac	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000af	89 47 60	 mov	 DWORD PTR [edi+96], eax
  000b2	33 cd		 xor	 ecx, ebp
  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
  000b6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c2 08 00	 ret	 8
?__SetFont@CTextBar@@IAEXH_N@Z ENDP			; CTextBar::__SetFont
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\textbar.cpp
;	COMDAT ?GetTextExtent@CTextBar@@QAEXPBDPAUtagSIZE@@@Z
_TEXT	SEGMENT
_c_szText$ = 8						; size = 4
_p_size$ = 12						; size = 4
?GetTextExtent@CTextBar@@QAEXPBDPAUtagSIZE@@@Z PROC	; CTextBar::GetTextExtent, COMDAT
; _this$ = ecx

; 46   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 47   : 	HDC hDC = m_dib.GetDCHandle();

  00005	83 c1 04	 add	 ecx, 4
  00008	e8 00 00 00 00	 call	 ?GetDCHandle@CGraphicDib@@QAEPAUHDC__@@XZ ; CGraphicDib::GetDCHandle

; 48   : 	GetTextExtentPoint32(hDC, c_szText, strlen(c_szText), p_size); 

  0000d	8b 55 08	 mov	 edx, DWORD PTR _c_szText$[ebp]
  00010	8b f0		 mov	 esi, eax
  00012	8b ca		 mov	 ecx, edx
  00014	8d 79 01	 lea	 edi, DWORD PTR [ecx+1]
$LL3@GetTextExt:
  00017	8a 01		 mov	 al, BYTE PTR [ecx]
  00019	41		 inc	 ecx
  0001a	84 c0		 test	 al, al
  0001c	75 f9		 jne	 SHORT $LL3@GetTextExt
  0001e	ff 75 0c	 push	 DWORD PTR _p_size$[ebp]
  00021	2b cf		 sub	 ecx, edi
  00023	51		 push	 ecx
  00024	52		 push	 edx
  00025	56		 push	 esi
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTextExtentPoint32A@16
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi

; 49   : }

  0002e	5d		 pop	 ebp
  0002f	c2 08 00	 ret	 8
?GetTextExtent@CTextBar@@QAEXPBDPAUtagSIZE@@@Z ENDP	; CTextBar::GetTextExtent
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\textbar.cpp
;	COMDAT ?SetTextColor@CTextBar@@QAEXHHH@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
_g$ = 12						; size = 4
_b$ = 16						; size = 4
?SetTextColor@CTextBar@@QAEXHHH@Z PROC			; CTextBar::SetTextColor, COMDAT
; _this$ = ecx

; 40   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 41   : 	HDC hDC = m_dib.GetDCHandle();

  00003	83 c1 04	 add	 ecx, 4
  00006	e8 00 00 00 00	 call	 ?GetDCHandle@CGraphicDib@@QAEPAUHDC__@@XZ ; CGraphicDib::GetDCHandle

; 42   : 	::SetTextColor(hDC, RGB(r, g, b));

  0000b	8b 4d 10	 mov	 ecx, DWORD PTR _b$[ebp]
  0000e	0f b6 d1	 movzx	 edx, cl
  00011	8b 4d 0c	 mov	 ecx, DWORD PTR _g$[ebp]
  00014	c1 e2 08	 shl	 edx, 8
  00017	0f b6 c9	 movzx	 ecx, cl
  0001a	0b d1		 or	 edx, ecx
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR _r$[ebp]
  0001f	c1 e2 08	 shl	 edx, 8
  00022	0f b6 c9	 movzx	 ecx, cl
  00025	0b d1		 or	 edx, ecx
  00027	52		 push	 edx
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetTextColor@8

; 43   : }

  0002f	5d		 pop	 ebp
  00030	c2 0c 00	 ret	 12			; 0000000cH
?SetTextColor@CTextBar@@QAEXHHH@Z ENDP			; CTextBar::SetTextColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\textbar.cpp
;	COMDAT ?TextOutA@CTextBar@@QAEXHHPBD@Z
_TEXT	SEGMENT
_ix$ = 8						; size = 4
_iy$ = 12						; size = 4
_c_szText$ = 16						; size = 4
?TextOutA@CTextBar@@QAEXHHPBD@Z PROC			; CTextBar::TextOutA, COMDAT
; _this$ = ecx

; 52   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 53   : 	m_dib.TextOut(ix, iy, c_szText);

  00004	ff 75 10	 push	 DWORD PTR _c_szText$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 75 0c	 push	 DWORD PTR _iy$[ebp]
  0000c	ff 75 08	 push	 DWORD PTR _ix$[ebp]
  0000f	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00012	e8 00 00 00 00	 call	 ?TextOutA@CGraphicDib@@QAEXHHPBD@Z ; CGraphicDib::TextOutA

; 54   : 	Invalidate();

  00017	8b ce		 mov	 ecx, esi
  00019	e8 00 00 00 00	 call	 ?Invalidate@CDibBar@@QAEXXZ ; CDibBar::Invalidate
  0001e	5e		 pop	 esi

; 55   : }

  0001f	5d		 pop	 ebp
  00020	c2 0c 00	 ret	 12			; 0000000cH
?TextOutA@CTextBar@@QAEXHHPBD@Z ENDP			; CTextBar::TextOutA
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\textbar.cpp
;	COMDAT ??1CTextBar@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CTextBar@@UAE@XZ PROC				; CTextBar::~CTextBar, COMDAT
; _this$ = ecx

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CTextBar@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CTextBar@@6B@

; 74   : 	HDC hdc = m_dib.GetDCHandle();

  0002f	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00032	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00039	e8 00 00 00 00	 call	 ?GetDCHandle@CGraphicDib@@QAEPAUHDC__@@XZ ; CGraphicDib::GetDCHandle

; 75   : 	SelectObject(hdc, m_hOldFont);

  0003e	ff 76 60	 push	 DWORD PTR [esi+96]
  00041	50		 push	 eax
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SelectObject@8

; 76   : }

  00048	8b ce		 mov	 ecx, esi
  0004a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00051	e8 00 00 00 00	 call	 ??1CDibBar@@UAE@XZ	; CDibBar::~CDibBar
  00056	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00059	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00060	59		 pop	 ecx
  00061	5e		 pop	 esi
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CTextBar@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CDibBar@@UAE@XZ	; CDibBar::~CDibBar
__ehhandler$??1CTextBar@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CTextBar@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CTextBar@@UAE@XZ ENDP				; CTextBar::~CTextBar
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\textbar.cpp
;	COMDAT ??0CTextBar@@QAE@H_N@Z
_TEXT	SEGMENT
_fontSize$ = 8						; size = 4
_isBold$ = 12						; size = 1
??0CTextBar@@QAE@H_N@Z PROC				; CTextBar::CTextBar, COMDAT
; _this$ = ecx

; 65   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??0CDibBar@@QAE@XZ	; CDibBar::CDibBar

; 66   : 	m_hOldFont = NULL;	
; 67   : 	m_fontSize = fontSize;

  0000b	8b 45 08	 mov	 eax, DWORD PTR _fontSize$[ebp]
  0000e	89 46 64	 mov	 DWORD PTR [esi+100], eax

; 68   : 	m_isBold = isBold;

  00011	8a 45 0c	 mov	 al, BYTE PTR _isBold$[ebp]
  00014	88 46 68	 mov	 BYTE PTR [esi+104], al

; 69   : 	
; 70   : }

  00017	8b c6		 mov	 eax, esi
  00019	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CTextBar@@6B@
  0001f	c7 46 60 00 00
	00 00		 mov	 DWORD PTR [esi+96], 0
  00026	5e		 pop	 esi
  00027	5d		 pop	 ebp
  00028	c2 08 00	 ret	 8
??0CTextBar@@QAE@H_N@Z ENDP				; CTextBar::CTextBar
_TEXT	ENDS
END
