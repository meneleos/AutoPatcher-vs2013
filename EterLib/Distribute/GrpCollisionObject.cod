; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	C:\GamePackages\Client\Tools\Patcher2017\EterLib\GrpCollisionObject.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	_sqrtf
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
PUBLIC	??0D3DXVECTOR3@@QAE@MMM@Z			; D3DXVECTOR3::D3DXVECTOR3
PUBLIC	??YD3DXVECTOR3@@QAEAAU0@ABU0@@Z			; D3DXVECTOR3::operator+=
PUBLIC	??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z			; D3DXVECTOR3::operator+
PUBLIC	??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z			; D3DXVECTOR3::operator-
PUBLIC	??DD3DXVECTOR3@@QBE?AU0@M@Z			; D3DXVECTOR3::operator*
PUBLIC	?D3DXVec3Dot@@YAMPBUD3DXVECTOR3@@0@Z		; D3DXVec3Dot
PUBLIC	?D3DXVec3Cross@@YAPAUD3DXVECTOR3@@PAU1@PBU1@1@Z	; D3DXVec3Cross
PUBLIC	??0CGraphicCollisionObject@@QAE@XZ		; CGraphicCollisionObject::CGraphicCollisionObject
PUBLIC	??1CGraphicCollisionObject@@UAE@XZ		; CGraphicCollisionObject::~CGraphicCollisionObject
PUBLIC	?IntersectTriangle@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@0000PAM11@Z ; CGraphicCollisionObject::IntersectTriangle
PUBLIC	?IntersectBoundBox@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@ABUSBoundBox@@PAM22@Z ; CGraphicCollisionObject::IntersectBoundBox
PUBLIC	?IntersectCube@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@MMMMMMAAUD3DXVECTOR3@@1PAM22@Z ; CGraphicCollisionObject::IntersectCube
PUBLIC	?IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z ; CGraphicCollisionObject::IntersectIndexedMesh
PUBLIC	?IntersectMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXKKAAUD3DXVECTOR3@@2PAM33@Z ; CGraphicCollisionObject::IntersectMesh
PUBLIC	?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M00@Z ; CGraphicCollisionObject::IntersectSphere
PUBLIC	?IntersectCylinder@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@MM00@Z ; CGraphicCollisionObject::IntersectCylinder
PUBLIC	?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M@Z ; CGraphicCollisionObject::IntersectSphere
PUBLIC	?IntersectCylinder@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@MM@Z ; CGraphicCollisionObject::IntersectCylinder
PUBLIC	??_GCGraphicCollisionObject@@UAEPAXI@Z		; CGraphicCollisionObject::`scalar deleting destructor'
PUBLIC	??_7CGraphicCollisionObject@@6B@		; CGraphicCollisionObject::`vftable'
PUBLIC	??_C@_0FD@DGCNMMBC@The?5vertex?5count?5of?5mesh?5which?5i@ ; `string'
PUBLIC	??_R4CGraphicCollisionObject@@6B@		; CGraphicCollisionObject::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGraphicCollisionObject@@@8		; CGraphicCollisionObject `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicCollisionObject@@8	; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CGraphicBase@@8			; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicBase@@@8			; CGraphicBase `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicBase@@8				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicBase@@8				; CGraphicBase::`RTTI Base Class Array'
PUBLIC	__real@00000000
PUBLIC	__real@38d1b717
PUBLIC	__real@3f800000
PUBLIC	__real@40000000
PUBLIC	__real@40800000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_D3DXVec3TransformCoord@12:PROC
EXTRN	?Tracef@@YAXPBDZZ:PROC				; Tracef
EXTRN	??0CGraphicBase@@QAE@XZ:PROC			; CGraphicBase::CGraphicBase
EXTRN	??1CGraphicBase@@UAE@XZ:PROC			; CGraphicBase::~CGraphicBase
EXTRN	??_ECGraphicCollisionObject@@UAEPAXI@Z:PROC	; CGraphicCollisionObject::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_vtPickRayOrig@CGraphicBase@@1UD3DXVECTOR3@@A:BYTE ; CGraphicBase::ms_vtPickRayOrig
EXTRN	?ms_vtPickRayDir@CGraphicBase@@1UD3DXVECTOR3@@A:BYTE ; CGraphicBase::ms_vtPickRayDir
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?s_v3PositionArray@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4PAU4@A
_BSS	SEGMENT
?s_v3PositionArray@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4PAU4@A DB 03000H DUP (?) ; `CGraphicCollisionObject::IntersectIndexedMesh'::`2'::s_v3PositionArray
_BSS	ENDS
;	COMDAT ?$S1@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4IA
_BSS	SEGMENT
?$S1@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4IA DD 01H DUP (?) ; S1<`template-parameter-2',CGraphicCollisionObject::tersectIndexedMesh,unsigned int,XHH1HAAUD3DXVECTOR3 volatile __based() NPBUD3DXMATRIX::& __ptr64XHH1HAAUD3DXVECTOR3 volatile __based() NPBUD3DXMATRIX::& __ptr64,float *float *float *>
_BSS	ENDS
;	COMDAT ?s_dwPositionCount@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4KA
_BSS	SEGMENT
?s_dwPositionCount@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4KA DD 01H DUP (?) ; `CGraphicCollisionObject::IntersectIndexedMesh'::`2'::s_dwPositionCount
_BSS	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@38d1b717
CONST	SEGMENT
__real@38d1b717 DD 038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R2CGraphicBase@@8
rdata$r	SEGMENT
??_R2CGraphicBase@@8 DD FLAT:??_R1A@?0A@EA@CGraphicBase@@8 ; CGraphicBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicBase@@8
rdata$r	SEGMENT
??_R3CGraphicBase@@8 DD 00H				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicBase@@@8
data$r	SEGMENT
??_R0?AVCGraphicBase@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicBase@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicBase@@8 DD FLAT:??_R0?AVCGraphicBase@@@8 ; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicCollisionObject@@8 DD FLAT:??_R0?AVCGraphicCollisionObject@@@8 ; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R2CGraphicCollisionObject@@8 DD FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8 ; CGraphicCollisionObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R3CGraphicCollisionObject@@8 DD 00H			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicCollisionObject@@@8
data$r	SEGMENT
??_R0?AVCGraphicCollisionObject@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicCollisionObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicCollisionObject@@', 00H
data$r	ENDS
;	COMDAT ??_R4CGraphicCollisionObject@@6B@
rdata$r	SEGMENT
??_R4CGraphicCollisionObject@@6B@ DD 00H		; CGraphicCollisionObject::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGraphicCollisionObject@@@8
	DD	FLAT:??_R3CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_C@_0FD@DGCNMMBC@The?5vertex?5count?5of?5mesh?5which?5i@
CONST	SEGMENT
??_C@_0FD@DGCNMMBC@The?5vertex?5count?5of?5mesh?5which?5i@ DB 'The vertex'
	DB	' count of mesh which is worked collision detection is too muc'
	DB	'h : %d / %d', 00H				; `string'
CONST	ENDS
;	COMDAT ?c_awFillCubeIndices@?1??IntersectCube@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@MMMMMMAAUD3DXVECTOR3@@1PAM22@Z@4QBGB
CONST	SEGMENT
?c_awFillCubeIndices@?1??IntersectCube@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@MMMMMMAAUD3DXVECTOR3@@1PAM22@Z@4QBGB DW 00H ; `CGraphicCollisionObject::IntersectCube'::`2'::c_awFillCubeIndices
	DW	01H
	DW	02H
	DW	01H
	DW	03H
	DW	02H
	DW	02H
	DW	00H
	DW	06H
	DW	00H
	DW	04H
	DW	06H
	DW	00H
	DW	01H
	DW	04H
	DW	01H
	DW	05H
	DW	04H
	DW	01H
	DW	03H
	DW	05H
	DW	03H
	DW	07H
	DW	05H
	DW	03H
	DW	02H
	DW	07H
	DW	02H
	DW	06H
	DW	07H
	DW	04H
	DW	05H
	DW	06H
	DW	05H
	DW	07H
	DW	06H
CONST	ENDS
;	COMDAT ??_7CGraphicCollisionObject@@6B@
CONST	SEGMENT
??_7CGraphicCollisionObject@@6B@ DD FLAT:??_R4CGraphicCollisionObject@@6B@ ; CGraphicCollisionObject::`vftable'
	DD	FLAT:??_ECGraphicCollisionObject@@UAEPAXI@Z
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCGraphicCollisionObject@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGraphicCollisionObject@@UAEPAXI@Z PROC		; CGraphicCollisionObject::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGraphicCollisionObject@@UAE@XZ ; CGraphicCollisionObject::~CGraphicCollisionObject
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCGraphicCollisionObject@@UAEPAXI@Z ENDP		; CGraphicCollisionObject::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
;	COMDAT ?IntersectCylinder@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@MM@Z
_TEXT	SEGMENT
_c_rv3Position$ = 8					; size = 4
_fRadius$ = 12						; size = 4
_fHeight$ = 16						; size = 4
?IntersectCylinder@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@MM@Z PROC ; CGraphicCollisionObject::IntersectCylinder, COMDAT
; _this$ = ecx

; 230  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 231  : 	return CGraphicCollisionObject::IntersectCylinder(c_rv3Position, fRadius, fHeight, ms_vtPickRayOrig, ms_vtPickRayDir);

  00003	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fHeight$[ebp]
  00008	68 00 00 00 00	 push	 OFFSET ?ms_vtPickRayDir@CGraphicBase@@1UD3DXVECTOR3@@A ; CGraphicBase::ms_vtPickRayDir
  0000d	68 00 00 00 00	 push	 OFFSET ?ms_vtPickRayOrig@CGraphicBase@@1UD3DXVECTOR3@@A ; CGraphicBase::ms_vtPickRayOrig
  00012	83 ec 08	 sub	 esp, 8
  00015	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0001b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fRadius$[ebp]
  00020	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00025	ff 75 08	 push	 DWORD PTR _c_rv3Position$[ebp]
  00028	e8 00 00 00 00	 call	 ?IntersectCylinder@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@MM00@Z ; CGraphicCollisionObject::IntersectCylinder

; 232  : }

  0002d	5d		 pop	 ebp
  0002e	c2 0c 00	 ret	 12			; 0000000cH
?IntersectCylinder@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@MM@Z ENDP ; CGraphicCollisionObject::IntersectCylinder
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
;	COMDAT ?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M@Z
_TEXT	SEGMENT
_c_rv3Position$ = 8					; size = 4
_fRadius$ = 12						; size = 4
?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M@Z PROC ; CGraphicCollisionObject::IntersectSphere, COMDAT
; _this$ = ecx

; 225  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 226  : 	return CGraphicCollisionObject::IntersectSphere(c_rv3Position, fRadius, ms_vtPickRayOrig, ms_vtPickRayDir);

  00003	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fRadius$[ebp]
  00008	68 00 00 00 00	 push	 OFFSET ?ms_vtPickRayDir@CGraphicBase@@1UD3DXVECTOR3@@A ; CGraphicBase::ms_vtPickRayDir
  0000d	68 00 00 00 00	 push	 OFFSET ?ms_vtPickRayOrig@CGraphicBase@@1UD3DXVECTOR3@@A ; CGraphicBase::ms_vtPickRayOrig
  00012	51		 push	 ecx
  00013	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00018	ff 75 08	 push	 DWORD PTR _c_rv3Position$[ebp]
  0001b	e8 00 00 00 00	 call	 ?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M00@Z ; CGraphicCollisionObject::IntersectSphere

; 227  : }

  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M@Z ENDP ; CGraphicCollisionObject::IntersectSphere
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
;	COMDAT ?IntersectCylinder@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@MM00@Z
_TEXT	SEGMENT
_a$1$ = -12						; size = 4
_fzMinus$1$ = -8					; size = 4
_v3RayOriginal$1$ = -4					; size = 4
_c_rv3Position$ = 8					; size = 4
_fRadius$ = 12						; size = 4
_fHeight$ = 16						; size = 4
_c_rv3RayOriginal$ = 20					; size = 4
_c_rv3RayDirection$ = 24				; size = 4
?IntersectCylinder@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@MM00@Z PROC ; CGraphicCollisionObject::IntersectCylinder, COMDAT
; _this$ = ecx

; 197  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00009	8b 4d 14	 mov	 ecx, DWORD PTR _c_rv3RayOriginal$[ebp]
  0000c	8b 45 08	 mov	 eax, DWORD PTR _c_rv3Position$[ebp]
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 197  : {

  0000f	56		 push	 esi

; 200  : 	float a = c_rv3RayDirection.x * c_rv3RayDirection.x + c_rv3RayDirection.y * c_rv3RayDirection.y;

  00010	8b 75 18	 mov	 esi, DWORD PTR _c_rv3RayDirection$[ebp]
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00013	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00018	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  0001d	f3 0f 10 11	 movss	 xmm2, DWORD PTR [ecx]
  00021	f3 0f 10 59 04	 movss	 xmm3, DWORD PTR [ecx+4]
  00026	f3 0f 5c 58 04	 subss	 xmm3, DWORD PTR [eax+4]
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 200  : 	float a = c_rv3RayDirection.x * c_rv3RayDirection.x + c_rv3RayDirection.y * c_rv3RayDirection.y;

  0002b	f3 0f 10 4e 04	 movss	 xmm1, DWORD PTR [esi+4]
  00030	f3 0f 10 26	 movss	 xmm4, DWORD PTR [esi]
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00034	f3 0f 5c 10	 subss	 xmm2, DWORD PTR [eax]
  00038	f3 0f 11 44 24
	0c		 movss	 DWORD PTR _v3RayOriginal$1$[esp+16], xmm0
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 200  : 	float a = c_rv3RayDirection.x * c_rv3RayDirection.x + c_rv3RayDirection.y * c_rv3RayDirection.y;

  0003e	0f 28 ec	 movaps	 xmm5, xmm4
  00041	0f 28 c1	 movaps	 xmm0, xmm1
  00044	f3 0f 59 ec	 mulss	 xmm5, xmm4
  00048	f3 0f 59 c1	 mulss	 xmm0, xmm1

; 201  : 	float b = 2 * (v3RayOriginal.x * c_rv3RayDirection.x + v3RayOriginal.y * c_rv3RayDirection.y);

  0004c	f3 0f 59 cb	 mulss	 xmm1, xmm3
  00050	f3 0f 59 e2	 mulss	 xmm4, xmm2
  00054	f3 0f 58 e8	 addss	 xmm5, xmm0

; 202  : 	float c = v3RayOriginal.x * v3RayOriginal.x + v3RayOriginal.y * v3RayOriginal.y - fRadius*fRadius;

  00058	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fRadius$[ebp]
  0005d	f3 0f 59 db	 mulss	 xmm3, xmm3
  00061	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00065	f3 0f 58 e1	 addss	 xmm4, xmm1
  00069	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0006d	f3 0f 58 da	 addss	 xmm3, xmm2
  00071	f3 0f 11 6c 24
	04		 movss	 DWORD PTR _a$1$[esp+16], xmm5
  00077	f3 0f 59 25 00
	00 00 00	 mulss	 xmm4, DWORD PTR __real@40000000
  0007f	f3 0f 5c d8	 subss	 xmm3, xmm0
  00083	f3 0f 11 64 24
	08		 movss	 DWORD PTR _fzMinus$1$[esp+16], xmm4

; 203  : 
; 204  : 	float D = b * b - 4 * a * c;

  00089	0f 28 c5	 movaps	 xmm0, xmm5
  0008c	0f 28 cc	 movaps	 xmm1, xmm4
  0008f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40800000
  00097	f3 0f 59 cc	 mulss	 xmm1, xmm4
  0009b	f3 0f 59 d8	 mulss	 xmm3, xmm0
  0009f	0f 57 c0	 xorps	 xmm0, xmm0
  000a2	f3 0f 5c cb	 subss	 xmm1, xmm3

; 205  : 	if (D > 0)

  000a6	0f 2f c8	 comiss	 xmm1, xmm0
  000a9	0f 86 8e 00 00
	00		 jbe	 $LN1@IntersectC

; 206  : 	if (0.0f != a)

  000af	0f 2e c5	 ucomiss xmm0, xmm5
  000b2	9f		 lahf
  000b3	f6 c4 44	 test	 ah, 68			; 00000044H
  000b6	0f 8b 81 00 00
	00		 jnp	 $LN1@IntersectC
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

  000bc	0f 5a c1	 cvtps2pd xmm0, xmm1
  000bf	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 208  : 		float tPlus = (-b + sqrtf(D)) / (2 * a);

  000c4	f3 0f 10 54 24
	08		 movss	 xmm2, DWORD PTR _fzMinus$1$[esp+16]
  000ca	0f 57 c9	 xorps	 xmm1, xmm1
  000cd	f3 0f 10 64 24
	04		 movss	 xmm4, DWORD PTR _a$1$[esp+16]
  000d3	f3 0f 59 25 00
	00 00 00	 mulss	 xmm4, DWORD PTR __real@40000000
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h

; 775  :     return (float)sqrt(_X);

  000db	f2 0f 5a c8	 cvtsd2ss xmm1, xmm0
  000df	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 208  : 		float tPlus = (-b + sqrtf(D)) / (2 * a);

  000e2	0f 28 d9	 movaps	 xmm3, xmm1
  000e5	f3 0f 5c da	 subss	 xmm3, xmm2

; 209  : 		float tMinus = (-b - sqrtf(D)) / (2 * a);

  000e9	0f 57 15 00 00
	00 00		 xorps	 xmm2, DWORD PTR __xmm@80000000800000008000000080000000
  000f0	f3 0f 5c d1	 subss	 xmm2, xmm1

; 210  : 		float fzPlus = v3RayOriginal.z + tPlus * c_rv3RayDirection.z;
; 211  : 		float fzMinus = v3RayOriginal.z + tMinus * c_rv3RayDirection.z;
; 212  : 
; 213  : 		if (fzPlus > 0.0f && fzPlus <= fHeight)

  000f4	f3 0f 10 4d 10	 movss	 xmm1, DWORD PTR _fHeight$[ebp]
  000f9	f3 0f 5e dc	 divss	 xmm3, xmm4
  000fd	f3 0f 5e d4	 divss	 xmm2, xmm4
  00101	f3 0f 59 5e 08	 mulss	 xmm3, DWORD PTR [esi+8]
  00106	f3 0f 59 56 08	 mulss	 xmm2, DWORD PTR [esi+8]
  0010b	f3 0f 58 5c 24
	0c		 addss	 xmm3, DWORD PTR _v3RayOriginal$1$[esp+16]
  00111	f3 0f 58 54 24
	0c		 addss	 xmm2, DWORD PTR _v3RayOriginal$1$[esp+16]
  00117	0f 2f d8	 comiss	 xmm3, xmm0
  0011a	76 0e		 jbe	 SHORT $LN3@IntersectC
  0011c	0f 2f cb	 comiss	 xmm1, xmm3
  0011f	72 09		 jb	 SHORT $LN3@IntersectC
$LN16@IntersectC:

; 214  : 			return true;

  00121	b0 01		 mov	 al, 1

; 222  : }

  00123	5e		 pop	 esi
  00124	8b e5		 mov	 esp, ebp
  00126	5d		 pop	 ebp
  00127	c2 14 00	 ret	 20			; 00000014H
$LN3@IntersectC:

; 215  : 		if (fzMinus > 0.0f && fzMinus <= fHeight)

  0012a	0f 2f d0	 comiss	 xmm2, xmm0
  0012d	76 05		 jbe	 SHORT $LN2@IntersectC
  0012f	0f 2f ca	 comiss	 xmm1, xmm2
  00132	73 ed		 jae	 SHORT $LN16@IntersectC
$LN2@IntersectC:

; 216  : 			return true;
; 217  : 		if (fzMinus * fzPlus < 0.0f)

  00134	f3 0f 59 d3	 mulss	 xmm2, xmm3
  00138	0f 2f c2	 comiss	 xmm0, xmm2
  0013b	77 e4		 ja	 SHORT $LN16@IntersectC
$LN1@IntersectC:

; 218  : 			return true;
; 219  : 	}
; 220  : 
; 221  : 	return false;

  0013d	32 c0		 xor	 al, al

; 222  : }

  0013f	5e		 pop	 esi
  00140	8b e5		 mov	 esp, ebp
  00142	5d		 pop	 ebp
  00143	c2 14 00	 ret	 20			; 00000014H
?IntersectCylinder@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@MM00@Z ENDP ; CGraphicCollisionObject::IntersectCylinder
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
;	COMDAT ?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M00@Z
_TEXT	SEGMENT
_c_rv3Position$ = 8					; size = 4
_fRadius$ = 12						; size = 4
_v3RayOriginal$1$ = 16					; size = 4
_c_rv3RayOriginal$ = 16					; size = 4
_c_rv3RayDirection$ = 20				; size = 4
?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M00@Z PROC ; CGraphicCollisionObject::IntersectSphere, COMDAT
; _this$ = ecx

; 181  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00003	8b 4d 10	 mov	 ecx, DWORD PTR _c_rv3RayOriginal$[ebp]
  00006	8b 45 08	 mov	 eax, DWORD PTR _c_rv3Position$[ebp]
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 185  : 	float b = 2 * D3DXVec3Dot(&v3RayOriginal, &c_rv3RayDirection);

  00009	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@40000000
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00011	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00015	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  00019	f3 0f 10 51 04	 movss	 xmm2, DWORD PTR [ecx+4]
  0001e	f3 0f 5c 50 04	 subss	 xmm2, DWORD PTR [eax+4]
  00023	f3 0f 10 59 08	 movss	 xmm3, DWORD PTR [ecx+8]
  00028	f3 0f 5c 58 08	 subss	 xmm3, DWORD PTR [eax+8]

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  0002d	8b 45 14	 mov	 eax, DWORD PTR _c_rv3RayDirection$[ebp]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00030	f3 0f 11 45 10	 movss	 DWORD PTR _v3RayOriginal$1$[ebp], xmm0

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00035	f3 0f 10 38	 movss	 xmm7, DWORD PTR [eax]
  00039	f3 0f 10 68 04	 movss	 xmm5, DWORD PTR [eax+4]
  0003e	0f 28 f7	 movaps	 xmm6, xmm7
  00041	f3 0f 10 60 08	 movss	 xmm4, DWORD PTR [eax+8]
  00046	f3 0f 59 f0	 mulss	 xmm6, xmm0
  0004a	0f 28 c5	 movaps	 xmm0, xmm5
  0004d	f3 0f 59 c2	 mulss	 xmm0, xmm2
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 185  : 	float b = 2 * D3DXVec3Dot(&v3RayOriginal, &c_rv3RayDirection);

  00051	f3 0f 59 f1	 mulss	 xmm6, xmm1
  00055	f3 0f 59 c1	 mulss	 xmm0, xmm1
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00059	f3 0f 59 ff	 mulss	 xmm7, xmm7
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 185  : 	float b = 2 * D3DXVec3Dot(&v3RayOriginal, &c_rv3RayDirection);

  0005d	f3 0f 58 f0	 addss	 xmm6, xmm0
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00061	f3 0f 59 d2	 mulss	 xmm2, xmm2
  00065	0f 28 c4	 movaps	 xmm0, xmm4
  00068	f3 0f 59 ed	 mulss	 xmm5, xmm5
  0006c	f3 0f 59 c3	 mulss	 xmm0, xmm3
  00070	f3 0f 58 fd	 addss	 xmm7, xmm5
  00074	f3 0f 59 db	 mulss	 xmm3, xmm3
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 185  : 	float b = 2 * D3DXVec3Dot(&v3RayOriginal, &c_rv3RayDirection);

  00078	f3 0f 59 c1	 mulss	 xmm0, xmm1
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  0007c	f3 0f 10 4d 10	 movss	 xmm1, DWORD PTR _v3RayOriginal$1$[ebp]
  00081	f3 0f 59 c9	 mulss	 xmm1, xmm1
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 185  : 	float b = 2 * D3DXVec3Dot(&v3RayOriginal, &c_rv3RayDirection);

  00085	f3 0f 58 f0	 addss	 xmm6, xmm0
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00089	f3 0f 59 e4	 mulss	 xmm4, xmm4
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 186  : 	float c = D3DXVec3Dot(&v3RayOriginal, &v3RayOriginal) - fRadius * fRadius;

  0008d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fRadius$[ebp]
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00092	f3 0f 58 ca	 addss	 xmm1, xmm2
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 186  : 	float c = D3DXVec3Dot(&v3RayOriginal, &v3RayOriginal) - fRadius * fRadius;

  00096	f3 0f 59 c0	 mulss	 xmm0, xmm0
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  0009a	f3 0f 58 fc	 addss	 xmm7, xmm4
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 188  : 	float D = b * b - 4 * a * c;

  0009e	f3 0f 59 f6	 mulss	 xmm6, xmm6
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  000a2	f3 0f 58 cb	 addss	 xmm1, xmm3
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 188  : 	float D = b * b - 4 * a * c;

  000a6	f3 0f 59 3d 00
	00 00 00	 mulss	 xmm7, DWORD PTR __real@40800000
  000ae	f3 0f 5c c8	 subss	 xmm1, xmm0
  000b2	f3 0f 59 cf	 mulss	 xmm1, xmm7
  000b6	f3 0f 5c f1	 subss	 xmm6, xmm1

; 189  : 
; 190  : 	if (D >= 0)

  000ba	0f 2f 35 00 00
	00 00		 comiss	 xmm6, DWORD PTR __real@00000000
  000c1	0f 93 c0	 setae	 al

; 191  : 		return true;
; 192  : 
; 193  : 	return false;
; 194  : }

  000c4	5d		 pop	 ebp
  000c5	c2 10 00	 ret	 16			; 00000010H
?IntersectSphere@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@M00@Z ENDP ; CGraphicCollisionObject::IntersectSphere
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
;	COMDAT ?IntersectMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXKKAAUD3DXVECTOR3@@2PAM33@Z
_TEXT	SEGMENT
_pt$GSCopy$1$ = -64					; size = 4
_pu$GSCopy$1$ = -60					; size = 4
_this$1$ = -56						; size = 4
_pv$GSCopy$1$ = -52					; size = 4
_dwStep$GSCopy$1$ = -48					; size = 4
_c_pmatWorld$GSCopy$1$ = -44				; size = 4
_v3Vertex$ = -40					; size = 36
__$ArrayPad$ = -4					; size = 4
_c_pmatWorld$ = 8					; size = 4
_vertices$ = 12						; size = 4
_dwStep$ = 16						; size = 4
_dwvtxCount$ = 20					; size = 4
_RayOriginal$ = 24					; size = 4
_RayDirection$ = 28					; size = 4
_pu$ = 32						; size = 4
_pv$ = 36						; size = 4
_pt$ = 40						; size = 4
?IntersectMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXKKAAUD3DXVECTOR3@@2PAM33@Z PROC ; CGraphicCollisionObject::IntersectMesh, COMDAT
; _this$ = ecx

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _c_pmatWorld$[ebp]
  00013	89 4d c8	 mov	 DWORD PTR _this$1$[ebp], ecx
  00016	8b 4d 10	 mov	 ecx, DWORD PTR _dwStep$[ebp]
  00019	53		 push	 ebx

; 96   : 	char * pcurVtx = (char *) vertices;
; 97   : 
; 98   : 	D3DXVECTOR3 v3Vertex[3];
; 99   : 
; 100  : 	for (DWORD i = 0; i < dwvtxCount; i += 3)

  0001a	8b 5d 14	 mov	 ebx, DWORD PTR _dwvtxCount$[ebp]
  0001d	89 4d d0	 mov	 DWORD PTR _dwStep$GSCopy$1$[ebp], ecx
  00020	8b 4d 20	 mov	 ecx, DWORD PTR _pu$[ebp]
  00023	56		 push	 esi
  00024	8b 75 0c	 mov	 esi, DWORD PTR _vertices$[ebp]
  00027	89 4d c4	 mov	 DWORD PTR _pu$GSCopy$1$[ebp], ecx
  0002a	8b 4d 24	 mov	 ecx, DWORD PTR _pv$[ebp]
  0002d	57		 push	 edi
  0002e	89 4d cc	 mov	 DWORD PTR _pv$GSCopy$1$[ebp], ecx
  00031	33 ff		 xor	 edi, edi
  00033	8b 4d 28	 mov	 ecx, DWORD PTR _pt$[ebp]
  00036	89 45 d4	 mov	 DWORD PTR _c_pmatWorld$GSCopy$1$[ebp], eax
  00039	89 4d c0	 mov	 DWORD PTR _pt$GSCopy$1$[ebp], ecx
  0003c	85 db		 test	 ebx, ebx
  0003e	74 5f		 je	 SHORT $LN2@IntersectM
$LL4@IntersectM:

; 101  : 	{
; 102  : 		D3DXVec3TransformCoord(&v3Vertex[0], (D3DXVECTOR3*)pcurVtx, c_pmatWorld);

  00040	50		 push	 eax
  00041	56		 push	 esi
  00042	8d 45 d8	 lea	 eax, DWORD PTR _v3Vertex$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12

; 103  : 		pcurVtx += dwStep;
; 104  : 
; 105  : 		D3DXVec3TransformCoord(&v3Vertex[1], (D3DXVECTOR3*)pcurVtx, c_pmatWorld);

  0004b	ff 75 d4	 push	 DWORD PTR _c_pmatWorld$GSCopy$1$[ebp]
  0004e	03 75 d0	 add	 esi, DWORD PTR _dwStep$GSCopy$1$[ebp]
  00051	8d 45 e4	 lea	 eax, DWORD PTR _v3Vertex$[ebp+12]
  00054	56		 push	 esi
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12

; 106  : 		pcurVtx += dwStep;
; 107  : 
; 108  : 		D3DXVec3TransformCoord(&v3Vertex[2], (D3DXVECTOR3*)pcurVtx, c_pmatWorld);

  0005b	ff 75 d4	 push	 DWORD PTR _c_pmatWorld$GSCopy$1$[ebp]
  0005e	03 75 d0	 add	 esi, DWORD PTR _dwStep$GSCopy$1$[ebp]
  00061	8d 45 f0	 lea	 eax, DWORD PTR _v3Vertex$[ebp+24]
  00064	56		 push	 esi
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12

; 109  : 		pcurVtx += dwStep;
; 110  : 
; 111  : 		if (IntersectTriangle(RayOriginal, RayDirection, 
; 112  : 							  v3Vertex[0], v3Vertex[1], v3Vertex[2],
; 113  : 							  pu, pv, pt))

  0006b	ff 75 c0	 push	 DWORD PTR _pt$GSCopy$1$[ebp]
  0006e	8b 4d c8	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00071	8d 45 f0	 lea	 eax, DWORD PTR _v3Vertex$[ebp+24]
  00074	ff 75 cc	 push	 DWORD PTR _pv$GSCopy$1$[ebp]
  00077	03 75 d0	 add	 esi, DWORD PTR _dwStep$GSCopy$1$[ebp]
  0007a	ff 75 c4	 push	 DWORD PTR _pu$GSCopy$1$[ebp]
  0007d	50		 push	 eax
  0007e	8d 45 e4	 lea	 eax, DWORD PTR _v3Vertex$[ebp+12]
  00081	50		 push	 eax
  00082	8d 45 d8	 lea	 eax, DWORD PTR _v3Vertex$[ebp]
  00085	50		 push	 eax
  00086	ff 75 1c	 push	 DWORD PTR _RayDirection$[ebp]
  00089	ff 75 18	 push	 DWORD PTR _RayOriginal$[ebp]
  0008c	e8 00 00 00 00	 call	 ?IntersectTriangle@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@0000PAM11@Z ; CGraphicCollisionObject::IntersectTriangle
  00091	84 c0		 test	 al, al
  00093	75 1f		 jne	 SHORT $LN15@IntersectM

; 96   : 	char * pcurVtx = (char *) vertices;
; 97   : 
; 98   : 	D3DXVECTOR3 v3Vertex[3];
; 99   : 
; 100  : 	for (DWORD i = 0; i < dwvtxCount; i += 3)

  00095	8b 45 d4	 mov	 eax, DWORD PTR _c_pmatWorld$GSCopy$1$[ebp]
  00098	83 c7 03	 add	 edi, 3
  0009b	3b fb		 cmp	 edi, ebx
  0009d	72 a1		 jb	 SHORT $LL4@IntersectM
$LN2@IntersectM:
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi

; 114  : 		{
; 115  : 			return true;
; 116  : 		}
; 117  : 	}
; 118  : 
; 119  : 	return false;

  000a1	32 c0		 xor	 al, al
  000a3	5b		 pop	 ebx

; 120  : }

  000a4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a7	33 cd		 xor	 ecx, ebp
  000a9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ae	8b e5		 mov	 esp, ebp
  000b0	5d		 pop	 ebp
  000b1	c2 24 00	 ret	 36			; 00000024H
$LN15@IntersectM:
  000b4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b7	b0 01		 mov	 al, 1
  000b9	5f		 pop	 edi
  000ba	5e		 pop	 esi
  000bb	33 cd		 xor	 ecx, ebp
  000bd	5b		 pop	 ebx
  000be	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 24 00	 ret	 36			; 00000024H
?IntersectMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXKKAAUD3DXVECTOR3@@2PAM33@Z ENDP ; CGraphicCollisionObject::IntersectMesh
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
;	COMDAT ?IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_c_pmatWorld$ = 8					; size = 4
_vertices$ = 12						; size = 4
_step$ = 16						; size = 4
_vtxCount$ = 20						; size = 4
_indices$ = 24						; size = 4
_idxCount$ = 28						; size = 4
_RayOriginal$ = 32					; size = 4
_RayDirection$ = 36					; size = 4
_pu$ = 40						; size = 4
_pv$ = 44						; size = 4
_pt$ = 48						; size = 4
?IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z PROC ; CGraphicCollisionObject::IntersectIndexedMesh, COMDAT
; _this$ = ecx

; 51   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 52   : 	static D3DXVECTOR3 s_v3PositionArray[c_iLimitVertexCount];

  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$S1@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4IA
  00009	89 4d fc	 mov	 DWORD PTR _this$1$[ebp], ecx
  0000c	a8 01		 test	 al, 1
  0000e	75 08		 jne	 SHORT $LN12@IntersectI
  00010	83 c8 01	 or	 eax, 1
  00013	a3 00 00 00 00	 mov	 DWORD PTR ?$S1@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4IA, eax
$LN12@IntersectI:

; 53   : 	static DWORD s_dwPositionCount;
; 54   : 
; 55   : 	if (vtxCount > c_iLimitVertexCount)

  00018	56		 push	 esi
  00019	8b 75 14	 mov	 esi, DWORD PTR _vtxCount$[ebp]
  0001c	81 fe 00 04 00
	00		 cmp	 esi, 1024		; 00000400H
  00022	7e 1c		 jle	 SHORT $LN6@IntersectI

; 56   : 	{
; 57   : 		Tracef("The vertex count of mesh which is worked collision detection is too much : %d / %d", vtxCount, c_iLimitVertexCount);

  00024	68 00 04 00 00	 push	 1024			; 00000400H
  00029	56		 push	 esi
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@DGCNMMBC@The?5vertex?5count?5of?5mesh?5which?5i@
  0002f	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef
  00034	83 c4 0c	 add	 esp, 12			; 0000000cH

; 58   : 		return false;

  00037	32 c0		 xor	 al, al
  00039	5e		 pop	 esi

; 92   : }

  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 2c 00	 ret	 44			; 0000002cH
$LN6@IntersectI:
  00040	53		 push	 ebx

; 59   : 	}
; 60   : 
; 61   : 	s_dwPositionCount = 0;

  00041	33 c0		 xor	 eax, eax
  00043	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwPositionCount@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4KA, eax
  00048	57		 push	 edi

; 62   : 
; 63   : 	char* pcurVtx = (char*)vertices;

  00049	8b 7d 0c	 mov	 edi, DWORD PTR _vertices$[ebp]

; 64   : 
; 65   : 	while (vtxCount--)

  0004c	85 f6		 test	 esi, esi
  0004e	74 2c		 je	 SHORT $LN35@IntersectI
  00050	8b 5d 10	 mov	 ebx, DWORD PTR _step$[ebp]
$LL5@IntersectI:

; 66   : 	{
; 67   : 		float* pos = (float*)pcurVtx;
; 68   : 
; 69   : 		D3DXVec3TransformCoord(&s_v3PositionArray[s_dwPositionCount++], (D3DXVECTOR3*)pos, c_pmatWorld);

  00053	ff 75 08	 push	 DWORD PTR _c_pmatWorld$[ebp]
  00056	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  00059	40		 inc	 eax
  0005a	8d 0c 8d 00 00
	00 00		 lea	 ecx, DWORD PTR ?s_v3PositionArray@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4PAU4@A[ecx*4]
  00061	a3 00 00 00 00	 mov	 DWORD PTR ?s_dwPositionCount@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4KA, eax
  00066	57		 push	 edi
  00067	51		 push	 ecx
  00068	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12

; 70   : 
; 71   : 		pcurVtx += step;

  0006d	03 fb		 add	 edi, ebx
  0006f	4e		 dec	 esi
  00070	74 07		 je	 SHORT $LN36@IntersectI

; 64   : 
; 65   : 	while (vtxCount--)

  00072	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_dwPositionCount@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4KA
  00077	eb da		 jmp	 SHORT $LL5@IntersectI
$LN36@IntersectI:
  00079	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
$LN35@IntersectI:

; 75   : 
; 76   : 	int triCount = idxCount / 3;

  0007c	b8 56 55 55 55	 mov	 eax, 1431655766		; 55555556H
  00081	f7 6d 1c	 imul	 DWORD PTR _idxCount$[ebp]
  00084	8b fa		 mov	 edi, edx
  00086	c1 ef 1f	 shr	 edi, 31			; 0000001fH
  00089	03 fa		 add	 edi, edx

; 77   : 	while (triCount--)

  0008b	74 56		 je	 SHORT $LN24@IntersectI

; 72   : 	}
; 73   : 
; 74   : 	WORD* pcurIdx = (WORD*)indices;

  0008d	8b 75 18	 mov	 esi, DWORD PTR _indices$[ebp]
  00090	8b 5d 30	 mov	 ebx, DWORD PTR _pt$[ebp]
  00093	83 c6 02	 add	 esi, 2
$LL3@IntersectI:

; 78   : 	{
; 79   : 		if (IntersectTriangle(RayOriginal, RayDirection, 
; 80   : 							  s_v3PositionArray[pcurIdx[0]],
; 81   : 							  s_v3PositionArray[pcurIdx[1]],
; 82   : 							  s_v3PositionArray[pcurIdx[2]],
; 83   : 							  pu, pv, pt))

  00096	0f b7 46 02	 movzx	 eax, WORD PTR [esi+2]
  0009a	4f		 dec	 edi
  0009b	53		 push	 ebx
  0009c	ff 75 2c	 push	 DWORD PTR _pv$[ebp]
  0009f	ff 75 28	 push	 DWORD PTR _pu$[ebp]
  000a2	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  000a5	8d 04 85 00 00
	00 00		 lea	 eax, DWORD PTR ?s_v3PositionArray@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4PAU4@A[eax*4]
  000ac	50		 push	 eax
  000ad	0f b7 06	 movzx	 eax, WORD PTR [esi]
  000b0	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  000b3	8d 04 85 00 00
	00 00		 lea	 eax, DWORD PTR ?s_v3PositionArray@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4PAU4@A[eax*4]
  000ba	50		 push	 eax
  000bb	0f b7 46 fe	 movzx	 eax, WORD PTR [esi-2]
  000bf	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  000c2	8d 04 85 00 00
	00 00		 lea	 eax, DWORD PTR ?s_v3PositionArray@?1??IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z@4PAU4@A[eax*4]
  000c9	50		 push	 eax
  000ca	ff 75 24	 push	 DWORD PTR _RayDirection$[ebp]
  000cd	ff 75 20	 push	 DWORD PTR _RayOriginal$[ebp]
  000d0	e8 00 00 00 00	 call	 ?IntersectTriangle@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@0000PAM11@Z ; CGraphicCollisionObject::IntersectTriangle
  000d5	84 c0		 test	 al, al
  000d7	75 15		 jne	 SHORT $LN20@IntersectI

; 86   : 		}
; 87   : 
; 88   : 		pcurIdx += 3;

  000d9	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  000dc	83 c6 06	 add	 esi, 6
  000df	85 ff		 test	 edi, edi
  000e1	75 b3		 jne	 SHORT $LL3@IntersectI
$LN24@IntersectI:
  000e3	5f		 pop	 edi
  000e4	5b		 pop	 ebx

; 89   : 	}
; 90   : 
; 91   : 	return false;

  000e5	32 c0		 xor	 al, al
  000e7	5e		 pop	 esi

; 92   : }

  000e8	8b e5		 mov	 esp, ebp
  000ea	5d		 pop	 ebp
  000eb	c2 2c 00	 ret	 44			; 0000002cH
$LN20@IntersectI:
  000ee	5f		 pop	 edi
  000ef	5b		 pop	 ebx

; 84   : 		{
; 85   : 			return true;

  000f0	b0 01		 mov	 al, 1
  000f2	5e		 pop	 esi

; 92   : }

  000f3	8b e5		 mov	 esp, ebp
  000f5	5d		 pop	 ebp
  000f6	c2 2c 00	 ret	 44			; 0000002cH
?IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z ENDP ; CGraphicCollisionObject::IntersectIndexedMesh
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
;	COMDAT ?IntersectCube@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@MMMMMMAAUD3DXVECTOR3@@1PAM22@Z
_TEXT	SEGMENT
$T1 = -112						; size = 12
$T2 = -112						; size = 12
$T3 = -112						; size = 12
$T4 = -112						; size = 12
$T5 = -112						; size = 12
$T6 = -112						; size = 12
$T7 = -112						; size = 12
$T8 = -112						; size = 12
_posVertices$ = -100					; size = 96
__$ArrayPad$ = -4					; size = 4
_c_pmatWorld$ = 8					; size = 4
_sx$ = 12						; size = 4
_sy$ = 16						; size = 4
_sz$ = 20						; size = 4
_ex$ = 24						; size = 4
_ey$ = 28						; size = 4
_ez$ = 32						; size = 4
_RayOriginal$ = 36					; size = 4
_RayDirection$ = 40					; size = 4
_pu$ = 44						; size = 4
_pv$ = 48						; size = 4
_pt$ = 52						; size = 4
?IntersectCube@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@MMMMMMAAUD3DXVECTOR3@@1PAM22@Z PROC ; CGraphicCollisionObject::IntersectCube, COMDAT
; _this$ = ecx

; 11   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	f3 0f 10 65 0c	 movss	 xmm4, DWORD PTR _sx$[ebp]
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 181  :     y = fy;

  00015	f3 0f 10 5d 10	 movss	 xmm3, DWORD PTR _sy$[ebp]
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 14   : 	posVertices[0] = TPosition(sx, sy, sz);

  0001a	f3 0f 10 c4	 movss	 xmm0, xmm4
  0001e	f3 0f 10 6d 18	 movss	 xmm5, DWORD PTR _ex$[ebp]
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00023	f3 0f 10 4d 14	 movss	 xmm1, DWORD PTR _sz$[ebp]
  00028	8b 55 30	 mov	 edx, DWORD PTR _pv$[ebp]

; 181  :     y = fy;

  0002b	f3 0f 10 55 1c	 movss	 xmm2, DWORD PTR _ey$[ebp]
  00030	53		 push	 ebx
  00031	56		 push	 esi
  00032	8b 75 2c	 mov	 esi, DWORD PTR _pu$[ebp]
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 11   : {

  00035	8b d9		 mov	 ebx, ecx
  00037	8b 4d 34	 mov	 ecx, DWORD PTR _pt$[ebp]

; 14   : 	posVertices[0] = TPosition(sx, sy, sz);

  0003a	0f 14 c3	 unpcklps xmm0, xmm3
  0003d	57		 push	 edi
  0003e	66 0f d6 45 9c	 movq	 QWORD PTR _posVertices$[ebp], xmm0

; 15   : 	posVertices[1] = TPosition(ex, sy, sz);

  00043	f3 0f 10 c5	 movss	 xmm0, xmm5
  00047	8b 7d 08	 mov	 edi, DWORD PTR _c_pmatWorld$[ebp]

; 22   : 
; 23   : 	static const WORD c_awFillCubeIndices[36] = { 
; 24   : 		0, 1, 2, 1, 3, 2,
; 25   : 		2, 0, 6, 0, 4, 6,
; 26   : 		0, 1, 4, 1, 5, 4,
; 27   : 		1, 3, 5, 3, 7, 5,
; 28   : 		3, 2, 7, 2, 6, 7,
; 29   : 		4, 5, 6, 5, 7, 6,
; 30   : 	};
; 31   : 
; 32   : 	return IntersectIndexedMesh(
; 33   : 		c_pmatWorld,
; 34   : 		posVertices,
; 35   : 		sizeof(TPosition),
; 36   : 		8,
; 37   : 		c_awFillCubeIndices,
; 38   : 		36,
; 39   : 		RayOriginal,
; 40   : 		RayDirection,
; 41   : 		pu,
; 42   : 		pv,
; 43   : 		pt
; 44   : 	);

  0004a	51		 push	 ecx
  0004b	0f 14 c3	 unpcklps xmm0, xmm3
  0004e	8b cb		 mov	 ecx, ebx
  00050	52		 push	 edx
  00051	66 0f d6 45 a8	 movq	 QWORD PTR _posVertices$[ebp+12], xmm0
  00056	f3 0f 10 c4	 movss	 xmm0, xmm4
  0005a	56		 push	 esi
  0005b	ff 75 28	 push	 DWORD PTR _RayDirection$[ebp]
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0005e	f3 0f 11 4d 98	 movss	 DWORD PTR $T8[ebp+8], xmm1
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 14   : 	posVertices[0] = TPosition(sx, sy, sz);

  00063	8b 45 98	 mov	 eax, DWORD PTR $T8[ebp+8]

; 22   : 
; 23   : 	static const WORD c_awFillCubeIndices[36] = { 
; 24   : 		0, 1, 2, 1, 3, 2,
; 25   : 		2, 0, 6, 0, 4, 6,
; 26   : 		0, 1, 4, 1, 5, 4,
; 27   : 		1, 3, 5, 3, 7, 5,
; 28   : 		3, 2, 7, 2, 6, 7,
; 29   : 		4, 5, 6, 5, 7, 6,
; 30   : 	};
; 31   : 
; 32   : 	return IntersectIndexedMesh(
; 33   : 		c_pmatWorld,
; 34   : 		posVertices,
; 35   : 		sizeof(TPosition),
; 36   : 		8,
; 37   : 		c_awFillCubeIndices,
; 38   : 		36,
; 39   : 		RayOriginal,
; 40   : 		RayDirection,
; 41   : 		pu,
; 42   : 		pv,
; 43   : 		pt
; 44   : 	);

  00066	ff 75 24	 push	 DWORD PTR _RayOriginal$[ebp]
  00069	89 45 a4	 mov	 DWORD PTR _posVertices$[ebp+8], eax
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0006c	f3 0f 11 4d 98	 movss	 DWORD PTR $T7[ebp+8], xmm1
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 15   : 	posVertices[1] = TPosition(ex, sy, sz);

  00071	8b 45 98	 mov	 eax, DWORD PTR $T7[ebp+8]
  00074	89 45 b0	 mov	 DWORD PTR _posVertices$[ebp+20], eax

; 16   : 	posVertices[2] = TPosition(sx, ey, sz);

  00077	0f 14 c2	 unpcklps xmm0, xmm2
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0007a	f3 0f 11 4d 98	 movss	 DWORD PTR $T6[ebp+8], xmm1
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 16   : 	posVertices[2] = TPosition(sx, ey, sz);

  0007f	8b 45 98	 mov	 eax, DWORD PTR $T6[ebp+8]
  00082	89 45 bc	 mov	 DWORD PTR _posVertices$[ebp+32], eax
  00085	66 0f d6 45 b4	 movq	 QWORD PTR _posVertices$[ebp+24], xmm0

; 17   : 	posVertices[3] = TPosition(ex, ey, sz);

  0008a	f3 0f 10 c5	 movss	 xmm0, xmm5
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0008e	f3 0f 11 4d 98	 movss	 DWORD PTR $T5[ebp+8], xmm1
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 17   : 	posVertices[3] = TPosition(ex, ey, sz);

  00093	8b 45 98	 mov	 eax, DWORD PTR $T5[ebp+8]
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00096	f3 0f 10 4d 20	 movss	 xmm1, DWORD PTR _ez$[ebp]
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 17   : 	posVertices[3] = TPosition(ex, ey, sz);

  0009b	89 45 c8	 mov	 DWORD PTR _posVertices$[ebp+44], eax
  0009e	0f 14 c2	 unpcklps xmm0, xmm2
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 182  :     z = fz;

  000a1	f3 0f 11 4d 98	 movss	 DWORD PTR $T4[ebp+8], xmm1
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 18   : 	posVertices[4] = TPosition(sx, sy, ez);

  000a6	8b 45 98	 mov	 eax, DWORD PTR $T4[ebp+8]
  000a9	89 45 d4	 mov	 DWORD PTR _posVertices$[ebp+56], eax

; 22   : 
; 23   : 	static const WORD c_awFillCubeIndices[36] = { 
; 24   : 		0, 1, 2, 1, 3, 2,
; 25   : 		2, 0, 6, 0, 4, 6,
; 26   : 		0, 1, 4, 1, 5, 4,
; 27   : 		1, 3, 5, 3, 7, 5,
; 28   : 		3, 2, 7, 2, 6, 7,
; 29   : 		4, 5, 6, 5, 7, 6,
; 30   : 	};
; 31   : 
; 32   : 	return IntersectIndexedMesh(
; 33   : 		c_pmatWorld,
; 34   : 		posVertices,
; 35   : 		sizeof(TPosition),
; 36   : 		8,
; 37   : 		c_awFillCubeIndices,
; 38   : 		36,
; 39   : 		RayOriginal,
; 40   : 		RayDirection,
; 41   : 		pu,
; 42   : 		pv,
; 43   : 		pt
; 44   : 	);

  000ac	6a 24		 push	 36			; 00000024H
  000ae	66 0f d6 45 c0	 movq	 QWORD PTR _posVertices$[ebp+36], xmm0
  000b3	f3 0f 10 c4	 movss	 xmm0, xmm4
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 182  :     z = fz;

  000b7	f3 0f 11 4d 98	 movss	 DWORD PTR $T3[ebp+8], xmm1
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 19   : 	posVertices[5] = TPosition(ex, sy, ez);

  000bc	8b 45 98	 mov	 eax, DWORD PTR $T3[ebp+8]
  000bf	89 45 e0	 mov	 DWORD PTR _posVertices$[ebp+68], eax

; 22   : 
; 23   : 	static const WORD c_awFillCubeIndices[36] = { 
; 24   : 		0, 1, 2, 1, 3, 2,
; 25   : 		2, 0, 6, 0, 4, 6,
; 26   : 		0, 1, 4, 1, 5, 4,
; 27   : 		1, 3, 5, 3, 7, 5,
; 28   : 		3, 2, 7, 2, 6, 7,
; 29   : 		4, 5, 6, 5, 7, 6,
; 30   : 	};
; 31   : 
; 32   : 	return IntersectIndexedMesh(
; 33   : 		c_pmatWorld,
; 34   : 		posVertices,
; 35   : 		sizeof(TPosition),
; 36   : 		8,
; 37   : 		c_awFillCubeIndices,
; 38   : 		36,
; 39   : 		RayOriginal,
; 40   : 		RayDirection,
; 41   : 		pu,
; 42   : 		pv,
; 43   : 		pt
; 44   : 	);

  000c2	68 00 00 00 00	 push	 OFFSET ?c_awFillCubeIndices@?1??IntersectCube@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@MMMMMMAAUD3DXVECTOR3@@1PAM22@Z@4QBGB
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 182  :     z = fz;

  000c7	f3 0f 11 4d 98	 movss	 DWORD PTR $T2[ebp+8], xmm1
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 20   : 	posVertices[6] = TPosition(sx, ey, ez);

  000cc	8b 45 98	 mov	 eax, DWORD PTR $T2[ebp+8]
  000cf	0f 14 c3	 unpcklps xmm0, xmm3
  000d2	89 45 ec	 mov	 DWORD PTR _posVertices$[ebp+80], eax

; 22   : 
; 23   : 	static const WORD c_awFillCubeIndices[36] = { 
; 24   : 		0, 1, 2, 1, 3, 2,
; 25   : 		2, 0, 6, 0, 4, 6,
; 26   : 		0, 1, 4, 1, 5, 4,
; 27   : 		1, 3, 5, 3, 7, 5,
; 28   : 		3, 2, 7, 2, 6, 7,
; 29   : 		4, 5, 6, 5, 7, 6,
; 30   : 	};
; 31   : 
; 32   : 	return IntersectIndexedMesh(
; 33   : 		c_pmatWorld,
; 34   : 		posVertices,
; 35   : 		sizeof(TPosition),
; 36   : 		8,
; 37   : 		c_awFillCubeIndices,
; 38   : 		36,
; 39   : 		RayOriginal,
; 40   : 		RayDirection,
; 41   : 		pu,
; 42   : 		pv,
; 43   : 		pt
; 44   : 	);

  000d5	6a 08		 push	 8
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 182  :     z = fz;

  000d7	f3 0f 11 4d 98	 movss	 DWORD PTR $T1[ebp+8], xmm1
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 21   : 	posVertices[7] = TPosition(ex, ey, ez);

  000dc	8b 45 98	 mov	 eax, DWORD PTR $T1[ebp+8]
  000df	66 0f d6 45 cc	 movq	 QWORD PTR _posVertices$[ebp+48], xmm0
  000e4	f3 0f 10 c5	 movss	 xmm0, xmm5
  000e8	89 45 f8	 mov	 DWORD PTR _posVertices$[ebp+92], eax

; 22   : 
; 23   : 	static const WORD c_awFillCubeIndices[36] = { 
; 24   : 		0, 1, 2, 1, 3, 2,
; 25   : 		2, 0, 6, 0, 4, 6,
; 26   : 		0, 1, 4, 1, 5, 4,
; 27   : 		1, 3, 5, 3, 7, 5,
; 28   : 		3, 2, 7, 2, 6, 7,
; 29   : 		4, 5, 6, 5, 7, 6,
; 30   : 	};
; 31   : 
; 32   : 	return IntersectIndexedMesh(
; 33   : 		c_pmatWorld,
; 34   : 		posVertices,
; 35   : 		sizeof(TPosition),
; 36   : 		8,
; 37   : 		c_awFillCubeIndices,
; 38   : 		36,
; 39   : 		RayOriginal,
; 40   : 		RayDirection,
; 41   : 		pu,
; 42   : 		pv,
; 43   : 		pt
; 44   : 	);

  000eb	8d 45 9c	 lea	 eax, DWORD PTR _posVertices$[ebp]
  000ee	6a 0c		 push	 12			; 0000000cH
  000f0	50		 push	 eax
  000f1	0f 14 c3	 unpcklps xmm0, xmm3
  000f4	0f 14 e2	 unpcklps xmm4, xmm2
  000f7	0f 14 ea	 unpcklps xmm5, xmm2
  000fa	57		 push	 edi
  000fb	66 0f d6 45 d8	 movq	 QWORD PTR _posVertices$[ebp+60], xmm0
  00100	66 0f d6 65 e4	 movq	 QWORD PTR _posVertices$[ebp+72], xmm4
  00105	66 0f d6 6d f0	 movq	 QWORD PTR _posVertices$[ebp+84], xmm5
  0010a	e8 00 00 00 00	 call	 ?IntersectIndexedMesh@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@PBXHH1HAAUD3DXVECTOR3@@2PAM33@Z ; CGraphicCollisionObject::IntersectIndexedMesh

; 45   : }

  0010f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	33 cd		 xor	 ecx, ebp
  00116	5b		 pop	 ebx
  00117	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011c	8b e5		 mov	 esp, ebp
  0011e	5d		 pop	 ebp
  0011f	c2 30 00	 ret	 48			; 00000030H
?IntersectCube@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@MMMMMMAAUD3DXVECTOR3@@1PAM22@Z ENDP ; CGraphicCollisionObject::IntersectCube
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
;	COMDAT ?IntersectBoundBox@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@ABUSBoundBox@@PAM22@Z
_TEXT	SEGMENT
_c_pmatWorld$ = 8					; size = 4
_c_rboundBox$ = 12					; size = 4
_pu$ = 16						; size = 4
_pv$ = 20						; size = 4
_pt$ = 24						; size = 4
?IntersectBoundBox@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@ABUSBoundBox@@PAM22@Z PROC ; CGraphicCollisionObject::IntersectBoundBox, COMDAT
; _this$ = ecx

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 6    : 	return IntersectCube(c_pmatWorld, c_rboundBox.sx, c_rboundBox.sy, c_rboundBox.sz, c_rboundBox.ex, c_rboundBox.ey, c_rboundBox.ez, ms_vtPickRayOrig, ms_vtPickRayDir, pu, pv, pt);

  00003	ff 75 18	 push	 DWORD PTR _pt$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR _c_rboundBox$[ebp]
  00009	ff 75 14	 push	 DWORD PTR _pv$[ebp]
  0000c	ff 75 10	 push	 DWORD PTR _pu$[ebp]
  0000f	0f 10 40 08	 movups	 xmm0, XMMWORD PTR [eax+8]
  00013	68 00 00 00 00	 push	 OFFSET ?ms_vtPickRayDir@CGraphicBase@@1UD3DXVECTOR3@@A ; CGraphicBase::ms_vtPickRayDir
  00018	68 00 00 00 00	 push	 OFFSET ?ms_vtPickRayOrig@CGraphicBase@@1UD3DXVECTOR3@@A ; CGraphicBase::ms_vtPickRayOrig
  0001d	83 ec 18	 sub	 esp, 24			; 00000018H
  00020	0f 11 44 24 08	 movups	 XMMWORD PTR [esp+8], xmm0
  00025	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0002a	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00030	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00034	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00039	ff 75 08	 push	 DWORD PTR _c_pmatWorld$[ebp]
  0003c	e8 00 00 00 00	 call	 ?IntersectCube@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@MMMMMMAAUD3DXVECTOR3@@1PAM22@Z ; CGraphicCollisionObject::IntersectCube

; 7    : }

  00041	5d		 pop	 ebp
  00042	c2 14 00	 ret	 20			; 00000014H
?IntersectBoundBox@CGraphicCollisionObject@@IAE_NPBUD3DXMATRIX@@ABUSBoundBox@@PAM22@Z ENDP ; CGraphicCollisionObject::IntersectBoundBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
;	COMDAT ?IntersectTriangle@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@0000PAM11@Z
_TEXT	SEGMENT
$T1 = -48						; size = 12
$T2 = -48						; size = 12
_tvec$ = -36						; size = 12
_edge2$3$ = -24						; size = 4
_spot$2$ = -20						; size = 4
_edge2$2$ = -16						; size = 4
_spot$4$ = -12						; size = 4
_spot$3$ = -8						; size = 4
_edge1$3$ = -4						; size = 4
_v$3$ = 8						; size = 4
_c_orig$ = 8						; size = 4
_v$3$ = 12						; size = 4
_c_dir$ = 12						; size = 4
_v$2$ = 16						; size = 4
_c_v0$ = 16						; size = 4
_spot$1$ = 20						; size = 4
_c_v1$ = 20						; size = 4
_edge2$1$ = 24						; size = 4
_c_v2$ = 24						; size = 4
_pu$ = 28						; size = 4
_pv$ = 32						; size = 4
_pt$ = 36						; size = 4
?IntersectTriangle@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@0000PAM11@Z PROC ; CGraphicCollisionObject::IntersectTriangle, COMDAT
; _this$ = ecx

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00006	8b 4d 10	 mov	 ecx, DWORD PTR _c_v0$[ebp]
  00009	8b 45 14	 mov	 eax, DWORD PTR _c_v1$[ebp]
  0000c	f3 0f 10 39	 movss	 xmm7, DWORD PTR [ecx]
  00010	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  00014	f3 0f 10 61 08	 movss	 xmm4, DWORD PTR [ecx+8]
  00019	f3 0f 5c cf	 subss	 xmm1, xmm7
  0001d	f3 0f 10 50 04	 movss	 xmm2, DWORD PTR [eax+4]
  00022	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00027	8b 4d 0c	 mov	 ecx, DWORD PTR _c_dir$[ebp]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0002a	f3 0f 5c d0	 subss	 xmm2, xmm0
  0002e	f3 0f 11 45 f4	 movss	 DWORD PTR _spot$4$[ebp], xmm0
  00033	f3 0f 11 4d 14	 movss	 DWORD PTR _spot$1$[ebp], xmm1
  00038	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  0003d	8b 45 18	 mov	 eax, DWORD PTR _c_v2$[ebp]
  00040	f3 0f 5c cc	 subss	 xmm1, xmm4

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00044	f3 0f 10 59 04	 movss	 xmm3, DWORD PTR [ecx+4]
  00049	0f 28 eb	 movaps	 xmm5, xmm3

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0004c	f3 0f 11 7d ec	 movss	 DWORD PTR _spot$2$[ebp], xmm7
  00051	f3 0f 11 55 f8	 movss	 DWORD PTR _spot$3$[ebp], xmm2
  00056	f3 0f 10 70 04	 movss	 xmm6, DWORD PTR [eax+4]
  0005b	f3 0f 11 4d fc	 movss	 DWORD PTR _edge1$3$[ebp], xmm1
  00060	f3 0f 5c f0	 subss	 xmm6, xmm0
  00064	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00068	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0006d	f3 0f 5c cf	 subss	 xmm1, xmm7

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00071	f3 0f 59 c6	 mulss	 xmm0, xmm6

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00075	f3 0f 11 4d 18	 movss	 DWORD PTR _edge2$1$[ebp], xmm1
  0007a	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  0007f	f3 0f 5c cc	 subss	 xmm1, xmm4
  00083	f3 0f 11 75 f0	 movss	 DWORD PTR _edge2$2$[ebp], xmm6

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  00088	f3 0f 10 31	 movss	 xmm6, DWORD PTR [ecx]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0008c	8b 45 08	 mov	 eax, DWORD PTR _c_orig$[ebp]

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  0008f	f3 0f 59 e9	 mulss	 xmm5, xmm1

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00093	f3 0f 11 4d e8	 movss	 DWORD PTR _edge2$3$[ebp], xmm1

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00098	f3 0f 5c e8	 subss	 xmm5, xmm0

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  0009c	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  000a1	f3 0f 59 45 18	 mulss	 xmm0, DWORD PTR _edge2$1$[ebp]
  000a6	f3 0f 11 45 10	 movss	 DWORD PTR _v$2$[ebp], xmm0
  000ab	0f 28 c6	 movaps	 xmm0, xmm6
  000ae	f3 0f 59 c1	 mulss	 xmm0, xmm1
  000b2	f3 0f 10 4d 10	 movss	 xmm1, DWORD PTR _v$2$[ebp]
  000b7	f3 0f 5c c8	 subss	 xmm1, xmm0

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  000bb	0f 28 c3	 movaps	 xmm0, xmm3
  000be	f3 0f 59 45 18	 mulss	 xmm0, DWORD PTR _edge2$1$[ebp]

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  000c3	0f 28 da	 movaps	 xmm3, xmm2

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  000c6	f3 0f 11 4d 10	 movss	 DWORD PTR _v$2$[ebp], xmm1

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  000cb	0f 28 ce	 movaps	 xmm1, xmm6
  000ce	f3 0f 59 4d f0	 mulss	 xmm1, DWORD PTR _edge2$2$[ebp]

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  000d3	f3 0f 59 5d 10	 mulss	 xmm3, DWORD PTR _v$2$[ebp]

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  000d8	f3 0f 5c c8	 subss	 xmm1, xmm0

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  000dc	0f 28 c5	 movaps	 xmm0, xmm5
  000df	f3 0f 59 45 14	 mulss	 xmm0, DWORD PTR _spot$1$[ebp]
  000e4	f3 0f 58 d8	 addss	 xmm3, xmm0

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  000e8	f3 0f 11 4d 0c	 movss	 DWORD PTR _v$3$[ebp], xmm1

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  000ed	f3 0f 10 c1	 movss	 xmm0, xmm1
  000f1	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _edge1$3$[ebp]
  000f6	f3 0f 58 d8	 addss	 xmm3, xmm0
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 139  :     if (det > 0)

  000fa	0f 2f 1d 00 00
	00 00		 comiss	 xmm3, DWORD PTR __real@00000000
  00101	76 2a		 jbe	 SHORT $LN7@IntersectT
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00103	f3 0f 10 10	 movss	 xmm2, DWORD PTR [eax]
  00107	f3 0f 10 48 04	 movss	 xmm1, DWORD PTR [eax+4]
  0010c	f3 0f 5c d7	 subss	 xmm2, xmm7
  00110	f3 0f 5c 4d f4	 subss	 xmm1, DWORD PTR _spot$4$[ebp]
  00115	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0011a	f3 0f 5c c4	 subss	 xmm0, xmm4
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 141  : 		tvec = c_orig - c_v0;

  0011e	0f 14 d1	 unpcklps xmm2, xmm1
  00121	66 0f d6 55 dc	 movq	 QWORD PTR _tvec$[ebp], xmm2
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 182  :     z = fz;

  00126	f3 0f 11 45 d8	 movss	 DWORD PTR $T2[ebp+8], xmm0
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 143  :     else

  0012b	eb 2a		 jmp	 SHORT $LN62@IntersectT
$LN7@IntersectT:
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0012d	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _spot$4$[ebp]
  00132	0f 28 cf	 movaps	 xmm1, xmm7
  00135	f3 0f 5c 08	 subss	 xmm1, DWORD PTR [eax]
  00139	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  0013e	f3 0f 5c 60 08	 subss	 xmm4, DWORD PTR [eax+8]
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 146  : 		det = -det;

  00143	0f 57 1d 00 00
	00 00		 xorps	 xmm3, DWORD PTR __xmm@80000000800000008000000080000000
  0014a	0f 14 c8	 unpcklps xmm1, xmm0
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 182  :     z = fz;

  0014d	f3 0f 11 65 d8	 movss	 DWORD PTR $T1[ebp+8], xmm4
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 145  : 		tvec = c_v0 - c_orig;

  00152	66 0f d6 4d dc	 movq	 QWORD PTR _tvec$[ebp], xmm1
$LN62@IntersectT:

; 147  :     }
; 148  : 
; 149  :     if (det < 0.0001f)

  00157	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@38d1b717
  0015f	0f 2f c3	 comiss	 xmm0, xmm3
  00162	8b 45 d8	 mov	 eax, DWORD PTR $T1[ebp+8]
  00165	89 45 e4	 mov	 DWORD PTR _tvec$[ebp+8], eax
  00168	0f 87 4b 01 00
	00		 ja	 $LN3@IntersectT
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  0016e	f3 0f 10 55 e0	 movss	 xmm2, DWORD PTR _tvec$[ebp+4]
  00173	f3 0f 10 65 dc	 movss	 xmm4, DWORD PTR _tvec$[ebp]
  00178	0f 28 ca	 movaps	 xmm1, xmm2
  0017b	f3 0f 59 4d 10	 mulss	 xmm1, DWORD PTR _v$2$[ebp]
  00180	f3 0f 59 ec	 mulss	 xmm5, xmm4
  00184	f3 0f 58 cd	 addss	 xmm1, xmm5
  00188	f3 0f 10 6d e4	 movss	 xmm5, DWORD PTR _tvec$[ebp+8]
  0018d	0f 28 c5	 movaps	 xmm0, xmm5
  00190	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _v$3$[ebp]
  00195	f3 0f 58 c8	 addss	 xmm1, xmm0
  00199	0f 57 c0	 xorps	 xmm0, xmm0
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 154  :     if (u < 0.0f || u > det)

  0019c	0f 2f c1	 comiss	 xmm0, xmm1
  0019f	0f 87 14 01 00
	00		 ja	 $LN3@IntersectT
  001a5	0f 2f cb	 comiss	 xmm1, xmm3
  001a8	0f 87 0b 01 00
	00		 ja	 $LN3@IntersectT
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  001ae	0f 28 fa	 movaps	 xmm7, xmm2
  001b1	0f 28 c5	 movaps	 xmm0, xmm5
  001b4	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _spot$3$[ebp]
  001b9	f3 0f 59 7d fc	 mulss	 xmm7, DWORD PTR _edge1$3$[ebp]

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  001be	f3 0f 59 6d 14	 mulss	 xmm5, DWORD PTR _spot$1$[ebp]

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  001c3	f3 0f 59 55 14	 mulss	 xmm2, DWORD PTR _spot$1$[ebp]
  001c8	f3 0f 5c f8	 subss	 xmm7, xmm0
  001cc	0f 28 c4	 movaps	 xmm0, xmm4
  001cf	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _edge1$3$[ebp]

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  001d4	f3 0f 59 f7	 mulss	 xmm6, xmm7

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  001d8	f3 0f 5c e8	 subss	 xmm5, xmm0

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  001dc	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _spot$3$[ebp]
  001e1	f3 0f 59 c4	 mulss	 xmm0, xmm4
  001e5	f3 0f 5c c2	 subss	 xmm0, xmm2

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  001e9	f3 0f 10 51 04	 movss	 xmm2, DWORD PTR [ecx+4]
  001ee	f3 0f 59 d5	 mulss	 xmm2, xmm5
  001f2	f3 0f 58 f2	 addss	 xmm6, xmm2

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  001f6	f3 0f 11 45 08	 movss	 DWORD PTR _v$3$[ebp], xmm0

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  001fb	f3 0f 10 51 08	 movss	 xmm2, DWORD PTR [ecx+8]
  00200	f3 0f 59 d0	 mulss	 xmm2, xmm0
  00204	0f 57 c0	 xorps	 xmm0, xmm0
  00207	f3 0f 58 f2	 addss	 xmm6, xmm2
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 161  :     if (v < 0.0f || u + v > det)

  0020b	0f 2f c6	 comiss	 xmm0, xmm6
  0020e	0f 87 a5 00 00
	00		 ja	 $LN3@IntersectT
  00214	0f 28 c6	 movaps	 xmm0, xmm6
  00217	f3 0f 58 c1	 addss	 xmm0, xmm1
  0021b	0f 2f c3	 comiss	 xmm0, xmm3
  0021e	0f 87 95 00 00
	00		 ja	 $LN3@IntersectT

; 162  : 		return false;
; 163  : 
; 164  :     t = D3DXVec3Dot(&edge2, &qvec);
; 165  :     FLOAT fInvDet = 1.0f / det;

  00224	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  0022c	f3 0f 5e e3	 divss	 xmm4, xmm3

; 173  : 	*pu = spot.x;

  00230	8b 45 1c	 mov	 eax, DWORD PTR _pu$[ebp]
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00233	f3 0f 10 55 f0	 movss	 xmm2, DWORD PTR _edge2$2$[ebp]

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00238	f3 0f 59 7d 18	 mulss	 xmm7, DWORD PTR _edge2$1$[ebp]
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 168  :     v *= fInvDet;

  0023d	0f 28 c4	 movaps	 xmm0, xmm4
  00240	f3 0f 59 c6	 mulss	 xmm0, xmm6
  00244	0f 28 dc	 movaps	 xmm3, xmm4
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00247	f3 0f 10 75 f8	 movss	 xmm6, DWORD PTR _spot$3$[ebp]

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  0024c	f3 0f 59 6d f0	 mulss	 xmm5, DWORD PTR _edge2$2$[ebp]
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 167  :     u *= fInvDet;

  00251	f3 0f 59 d9	 mulss	 xmm3, xmm1
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00255	f3 0f 10 4d 18	 movss	 xmm1, DWORD PTR _edge2$1$[ebp]

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  0025a	f3 0f 58 fd	 addss	 xmm7, xmm5

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  0025e	f3 0f 59 c8	 mulss	 xmm1, xmm0
  00262	f3 0f 59 d0	 mulss	 xmm2, xmm0
  00266	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _spot$1$[ebp]
  0026b	f3 0f 59 c3	 mulss	 xmm0, xmm3
  0026f	f3 0f 59 f3	 mulss	 xmm6, xmm3

; 206  :     z += v.z;
; 207  :     return *this;
; 208  : }
; 209  : 
; 210  : D3DXINLINE D3DXVECTOR3&
; 211  : D3DXVECTOR3::operator -= ( CONST D3DXVECTOR3& v )
; 212  : {
; 213  :     x -= v.x;
; 214  :     y -= v.y;
; 215  :     z -= v.z;
; 216  :     return *this;
; 217  : }
; 218  : 
; 219  : D3DXINLINE D3DXVECTOR3&
; 220  : D3DXVECTOR3::operator *= ( FLOAT f )
; 221  : {
; 222  :     x *= f;
; 223  :     y *= f;
; 224  :     z *= f;
; 225  :     return *this;
; 226  : }
; 227  : 
; 228  : D3DXINLINE D3DXVECTOR3&
; 229  : D3DXVECTOR3::operator /= ( FLOAT f )
; 230  : {
; 231  :     FLOAT fInv = 1.0f / f;
; 232  :     x *= fInv;
; 233  :     y *= fInv;
; 234  :     z *= fInv;
; 235  :     return *this;
; 236  : }
; 237  : 
; 238  : 
; 239  : // unary operators
; 240  : D3DXINLINE D3DXVECTOR3
; 241  : D3DXVECTOR3::operator + () const
; 242  : {
; 243  :     return *this;
; 244  : }
; 245  : 
; 246  : D3DXINLINE D3DXVECTOR3
; 247  : D3DXVECTOR3::operator - () const
; 248  : {
; 249  :     return D3DXVECTOR3(-x, -y, -z);
; 250  : }
; 251  : 
; 252  : 
; 253  : // binary operators
; 254  : D3DXINLINE D3DXVECTOR3
; 255  : D3DXVECTOR3::operator + ( CONST D3DXVECTOR3& v ) const
; 256  : {
; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00273	f3 0f 58 c1	 addss	 xmm0, xmm1

; 183  : }
; 184  : 
; 185  : 
; 186  : // casting
; 187  : D3DXINLINE
; 188  : D3DXVECTOR3::operator FLOAT* ()
; 189  : {
; 190  :     return (FLOAT *) &x;
; 191  : }
; 192  : 
; 193  : D3DXINLINE
; 194  : D3DXVECTOR3::operator CONST FLOAT* () const
; 195  : {
; 196  :     return (CONST FLOAT *) &x;
; 197  : }
; 198  : 
; 199  : 
; 200  : // assignment operators
; 201  : D3DXINLINE D3DXVECTOR3&
; 202  : D3DXVECTOR3::operator += ( CONST D3DXVECTOR3& v )
; 203  : {
; 204  :     x += v.x;

  00277	f3 0f 10 4d ec	 movss	 xmm1, DWORD PTR _spot$2$[ebp]

; 206  :     z += v.z;
; 207  :     return *this;
; 208  : }
; 209  : 
; 210  : D3DXINLINE D3DXVECTOR3&
; 211  : D3DXVECTOR3::operator -= ( CONST D3DXVECTOR3& v )
; 212  : {
; 213  :     x -= v.x;
; 214  :     y -= v.y;
; 215  :     z -= v.z;
; 216  :     return *this;
; 217  : }
; 218  : 
; 219  : D3DXINLINE D3DXVECTOR3&
; 220  : D3DXVECTOR3::operator *= ( FLOAT f )
; 221  : {
; 222  :     x *= f;
; 223  :     y *= f;
; 224  :     z *= f;
; 225  :     return *this;
; 226  : }
; 227  : 
; 228  : D3DXINLINE D3DXVECTOR3&
; 229  : D3DXVECTOR3::operator /= ( FLOAT f )
; 230  : {
; 231  :     FLOAT fInv = 1.0f / f;
; 232  :     x *= fInv;
; 233  :     y *= fInv;
; 234  :     z *= fInv;
; 235  :     return *this;
; 236  : }
; 237  : 
; 238  : 
; 239  : // unary operators
; 240  : D3DXINLINE D3DXVECTOR3
; 241  : D3DXVECTOR3::operator + () const
; 242  : {
; 243  :     return *this;
; 244  : }
; 245  : 
; 246  : D3DXINLINE D3DXVECTOR3
; 247  : D3DXVECTOR3::operator - () const
; 248  : {
; 249  :     return D3DXVECTOR3(-x, -y, -z);
; 250  : }
; 251  : 
; 252  : 
; 253  : // binary operators
; 254  : D3DXINLINE D3DXVECTOR3
; 255  : D3DXVECTOR3::operator + ( CONST D3DXVECTOR3& v ) const
; 256  : {
; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0027c	f3 0f 58 f2	 addss	 xmm6, xmm2

; 183  : }
; 184  : 
; 185  : 
; 186  : // casting
; 187  : D3DXINLINE
; 188  : D3DXVECTOR3::operator FLOAT* ()
; 189  : {
; 190  :     return (FLOAT *) &x;
; 191  : }
; 192  : 
; 193  : D3DXINLINE
; 194  : D3DXVECTOR3::operator CONST FLOAT* () const
; 195  : {
; 196  :     return (CONST FLOAT *) &x;
; 197  : }
; 198  : 
; 199  : 
; 200  : // assignment operators
; 201  : D3DXINLINE D3DXVECTOR3&
; 202  : D3DXVECTOR3::operator += ( CONST D3DXVECTOR3& v )
; 203  : {
; 204  :     x += v.x;

  00280	f3 0f 58 c8	 addss	 xmm1, xmm0

; 205  :     y += v.y;

  00284	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _spot$4$[ebp]
  00289	f3 0f 58 c6	 addss	 xmm0, xmm6
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 173  : 	*pu = spot.x;

  0028d	f3 0f 11 08	 movss	 DWORD PTR [eax], xmm1

; 174  : 	*pv = spot.y;

  00291	8b 45 20	 mov	 eax, DWORD PTR _pv$[ebp]
  00294	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00298	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _edge2$3$[ebp]
  0029d	f3 0f 59 45 08	 mulss	 xmm0, DWORD PTR _v$3$[ebp]
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 175  : 	*pt = t;

  002a2	8b 45 24	 mov	 eax, DWORD PTR _pt$[ebp]
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  002a5	f3 0f 58 f8	 addss	 xmm7, xmm0
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp

; 166  :     t *= fInvDet;

  002a9	f3 0f 59 fc	 mulss	 xmm7, xmm4

; 175  : 	*pt = t;

  002ad	f3 0f 11 38	 movss	 DWORD PTR [eax], xmm7

; 176  : 
; 177  : 	return true;

  002b1	b0 01		 mov	 al, 1

; 178  : }

  002b3	8b e5		 mov	 esp, ebp
  002b5	5d		 pop	 ebp
  002b6	c2 20 00	 ret	 32			; 00000020H
$LN3@IntersectT:

; 155  : 		return false;

  002b9	32 c0		 xor	 al, al

; 178  : }

  002bb	8b e5		 mov	 esp, ebp
  002bd	5d		 pop	 ebp
  002be	c2 20 00	 ret	 32			; 00000020H
?IntersectTriangle@CGraphicCollisionObject@@IAE_NABUD3DXVECTOR3@@0000PAM11@Z ENDP ; CGraphicCollisionObject::IntersectTriangle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
;	COMDAT ??1CGraphicCollisionObject@@UAE@XZ
_TEXT	SEGMENT
??1CGraphicCollisionObject@@UAE@XZ PROC			; CGraphicCollisionObject::~CGraphicCollisionObject, COMDAT
; _this$ = ecx

; 239  : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CGraphicCollisionObject@@6B@

; 240  : }

  00006	e9 00 00 00 00	 jmp	 ??1CGraphicBase@@UAE@XZ	; CGraphicBase::~CGraphicBase
??1CGraphicCollisionObject@@UAE@XZ ENDP			; CGraphicCollisionObject::~CGraphicCollisionObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\eterlib\grpcollisionobject.cpp
;	COMDAT ??0CGraphicCollisionObject@@QAE@XZ
_TEXT	SEGMENT
??0CGraphicCollisionObject@@QAE@XZ PROC			; CGraphicCollisionObject::CGraphicCollisionObject, COMDAT
; _this$ = ecx

; 235  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??0CGraphicBase@@QAE@XZ	; CGraphicBase::CGraphicBase
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGraphicCollisionObject@@6B@

; 236  : }

  0000e	8b c6		 mov	 eax, esi
  00010	5e		 pop	 esi
  00011	c3		 ret	 0
??0CGraphicCollisionObject@@QAE@XZ ENDP			; CGraphicCollisionObject::CGraphicCollisionObject
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
;	COMDAT ?D3DXVec3Cross@@YAPAUD3DXVECTOR3@@PAU1@PBU1@1@Z
_TEXT	SEGMENT
_v$ = -12						; size = 12
_pOut$ = 8						; size = 4
_pV1$ = 12						; size = 4
_pV2$ = 16						; size = 4
?D3DXVec3Cross@@YAPAUD3DXVECTOR3@@PAU1@PBU1@1@Z PROC	; D3DXVec3Cross, COMDAT

; 1269 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1270 :     D3DXVECTOR3 v;
; 1271 : 
; 1272 : #ifdef D3DX_DEBUG
; 1273 :     if(!pOut || !pV1 || !pV2)
; 1274 :         return NULL;
; 1275 : #endif
; 1276 : 
; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00006	8b 45 10	 mov	 eax, DWORD PTR _pV2$[ebp]
  00009	8b 4d 0c	 mov	 ecx, DWORD PTR _pV1$[ebp]
  0000c	f3 0f 10 78 08	 movss	 xmm7, DWORD PTR [eax+8]
  00011	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00016	f3 0f 59 41 08	 mulss	 xmm0, DWORD PTR [ecx+8]
  0001b	f3 0f 59 79 04	 mulss	 xmm7, DWORD PTR [ecx+4]

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  00020	f3 0f 10 18	 movss	 xmm3, DWORD PTR [eax]
  00024	f3 0f 10 11	 movss	 xmm2, DWORD PTR [ecx]
  00028	0f 28 cb	 movaps	 xmm1, xmm3
  0002b	f3 0f 59 49 08	 mulss	 xmm1, DWORD PTR [ecx+8]
  00030	f3 0f 5c f8	 subss	 xmm7, xmm0

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  00034	f3 0f 59 59 04	 mulss	 xmm3, DWORD PTR [ecx+4]
  00039	0f 28 c2	 movaps	 xmm0, xmm2
  0003c	f3 0f 59 40 08	 mulss	 xmm0, DWORD PTR [eax+8]
  00041	f3 0f 59 50 04	 mulss	 xmm2, DWORD PTR [eax+4]

; 1280 : 
; 1281 :     *pOut = v;

  00046	8b 45 08	 mov	 eax, DWORD PTR _pOut$[ebp]
  00049	f3 0f 5c c8	 subss	 xmm1, xmm0
  0004d	f3 0f 5c d3	 subss	 xmm2, xmm3
  00051	0f 14 f9	 unpcklps xmm7, xmm1
  00054	66 0f d6 38	 movq	 QWORD PTR [eax], xmm7
  00058	f3 0f 11 55 fc	 movss	 DWORD PTR _v$[ebp+8], xmm2
  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _v$[ebp+8]
  00060	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1282 :     return pOut;
; 1283 : }

  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?D3DXVec3Cross@@YAPAUD3DXVECTOR3@@PAU1@PBU1@1@Z ENDP	; D3DXVec3Cross
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
;	COMDAT ?D3DXVec3Dot@@YAMPBUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT
_pV1$ = 8						; size = 4
_pV2$ = 12						; size = 4
?D3DXVec3Dot@@YAMPBUD3DXVECTOR3@@0@Z PROC		; D3DXVec3Dot, COMDAT

; 1258 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1259 : #ifdef D3DX_DEBUG
; 1260 :     if(!pV1 || !pV2)
; 1261 :         return 0.0f;
; 1262 : #endif
; 1263 : 
; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pV1$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR _pV2$[ebp]
  00009	d9 41 04	 fld	 DWORD PTR [ecx+4]
  0000c	d8 48 04	 fmul	 DWORD PTR [eax+4]
  0000f	d9 01		 fld	 DWORD PTR [ecx]
  00011	d8 08		 fmul	 DWORD PTR [eax]
  00013	de c1		 faddp	 ST(1), ST(0)
  00015	d9 41 08	 fld	 DWORD PTR [ecx+8]
  00018	d8 48 08	 fmul	 DWORD PTR [eax+8]
  0001b	de c1		 faddp	 ST(1), ST(0)

; 1265 : }

  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
?D3DXVec3Dot@@YAMPBUD3DXVECTOR3@@0@Z ENDP		; D3DXVec3Dot
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
;	COMDAT ??DD3DXVECTOR3@@QBE?AU0@M@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_f$ = 12						; size = 4
??DD3DXVECTOR3@@QBE?AU0@M@Z PROC			; D3DXVECTOR3::operator*, COMDAT
; _this$ = ecx

; 268  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00003	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _f$[ebp]
  00008	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]

; 180  :     x = fx;

  0000c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  0000f	f3 0f 59 c1	 mulss	 xmm0, xmm1

; 180  :     x = fx;

  00013	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00017	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  0001c	f3 0f 59 c1	 mulss	 xmm0, xmm1

; 181  :     y = fy;

  00020	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00025	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  0002a	f3 0f 59 c1	 mulss	 xmm0, xmm1

; 182  :     z = fz;

  0002e	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 270  : }

  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
??DD3DXVECTOR3@@QBE?AU0@M@Z ENDP			; D3DXVECTOR3::operator*
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
;	COMDAT ??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z PROC			; D3DXVECTOR3::operator-, COMDAT
; _this$ = ecx

; 262  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  00006	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]

; 180  :     x = fx;

  0000a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0000d	f3 0f 5c 02	 subss	 xmm0, DWORD PTR [edx]

; 180  :     x = fx;

  00011	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00015	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  0001a	f3 0f 5c 42 04	 subss	 xmm0, DWORD PTR [edx+4]

; 181  :     y = fy;

  0001f	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  00024	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00029	f3 0f 5c 42 08	 subss	 xmm0, DWORD PTR [edx+8]

; 182  :     z = fz;

  0002e	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 264  : }

  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator-
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
;	COMDAT ??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z PROC			; D3DXVECTOR3::operator+, COMDAT
; _this$ = ecx

; 256  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]

; 180  :     x = fx;

  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00009	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  0000d	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]

; 180  :     x = fx;

  00011	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00015	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  0001a	f3 0f 58 41 04	 addss	 xmm0, DWORD PTR [ecx+4]

; 181  :     y = fy;

  0001f	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00024	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  00029	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]

; 182  :     z = fz;

  0002e	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 258  : }

  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator+
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
;	COMDAT ??YD3DXVECTOR3@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??YD3DXVECTOR3@@QAEAAU0@ABU0@@Z PROC			; D3DXVECTOR3::operator+=, COMDAT
; _this$ = ecx

; 203  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 204  :     x += v.x;

  00003	8b 45 08	 mov	 eax, DWORD PTR _v$[ebp]
  00006	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0000a	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  0000e	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 205  :     y += v.y;

  00012	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00017	f3 0f 58 41 04	 addss	 xmm0, DWORD PTR [ecx+4]
  0001c	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 206  :     z += v.z;

  00021	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]

; 207  :     return *this;

  00026	8b c1		 mov	 eax, ecx
  00028	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  0002d	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 208  : }

  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
??YD3DXVECTOR3@@QAEAAU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.inl
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_fz$ = 16						; size = 4
??0D3DXVECTOR3@@QAE@MMM@Z PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 179  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 180  :     x = fx;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]

; 181  :     y = fy;
; 182  :     z = fz;
; 183  : }

  00008	8b c1		 mov	 eax, ecx
  0000a	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0
  0000e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00013	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0
  00018	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fz$[ebp]
  0001d	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0
  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
??0D3DXVECTOR3@@QAE@MMM@Z ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\gamepackages\client\tools\patcher2017\extern\include\d3dx8math.h
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT
??0D3DXVECTOR3@@QAE@XZ PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 89   :     D3DXVECTOR3() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv68 = -4						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT

; 774  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 08	 sub	 esp, 8
  00009	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __X$[ebp]

; 775  :     return (float)sqrt(_X);

  0000e	0f 5a c0	 cvtps2pd xmm0, xmm0
  00011	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
  00016	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0001a	f3 0f 11 44 24
	04		 movss	 DWORD PTR tv68[esp+8], xmm0
  00020	d9 44 24 04	 fld	 DWORD PTR tv68[esp+8]

; 776  : }

  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
_sqrtf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	4e		 dec	 esi
  00008	78 14		 js	 SHORT $LN1@vector
  0000a	53		 push	 ebx
  0000b	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000e	57		 push	 edi
  0000f	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00012	8b cf		 mov	 ecx, edi
  00014	ff d3		 call	 ebx
  00016	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  00019	4e		 dec	 esi
  0001a	79 f6		 jns	 SHORT $LL2@vector
  0001c	5f		 pop	 edi
  0001d	5b		 pop	 ebx
$LN1@vector:
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
